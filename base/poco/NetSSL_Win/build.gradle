model {
	components {
		NetSSLWin(NativeLibrarySpec) {
			binaries.all {
				if (targetPlatform.operatingSystem.windows) {
					sources {
						rc(WindowsResourceSet) {
							source {
								srcDir '..'
								include 'DLLVersion.rc'
							}
						}
						cpp(CppSourceSet) {
							source {
								srcDir 'src'
								include '**/*.cpp'
							}
							exportedHeaders {
								srcDir 'include'
							}
							lib project: ':Crypto', library: 'Crypto'
							lib project: ':Net', library: 'Net'
							lib project: ':Util', library: 'Util'
							lib project: ':Foundation', library: 'Foundation'
						}
					}
				}
			}
		}
	}
	binaries {
		all {
			if (toolChain in VisualCpp) {
				linker.args "Crypt32.lib"
				linker.args 'ws2_32.lib'
				linker.args 'iphlpapi.lib'
			}
		}
		withType(SharedLibraryBinarySpec) {
			if (toolChain in VisualCpp) {
				 cppCompiler.define "NetSSL_Win_EXPORTS"
			}
		}
	}
}
task poco { dependsOn "assemble" }
