model {
	components {
		withType(NativeComponentSpec) {
			binaries.withType(NativeBinarySpec) {
				if (buildType == buildTypes.debug) {
					if (it instanceof NativeExecutableBinarySpec) {
						executable.file = toLocalBin(appendDebugSuffix(executable.file), targetPlatform)
					}
				} else
				if (buildType == buildTypes.release) {
					if (it instanceof NativeExecutableBinarySpec) {
						executable.file = toLocalBin(executable.file, targetPlatform)
					} 
				}
			}
		}
		PocoDoc(NativeExecutableSpec) {
			sources {
				cpp {
					source {
						srcDir 'src'
						include '**/*.cpp'
					}
					exportedHeaders {
						srcDir 'include'
					}
					lib project: ':CppParser', library: 'CppParser'
					lib project: ':Util', library: 'Util'
					lib project: ':Foundation', library: 'Foundation'
				}
			}
		}
	}
	binaries {
		withType(NativeExecutableSpec) {
			if (toolChain in VisualCpp) {
			}
			if (toolChain in Gcc) {
			}
		}
	}
}


