#!/usr/bin/make -f
# -*- makefile -*-

# Uncomment this to turn on verbose mode.
export DH_VERBOSE=1

export DEB_BUILD_MAINT_OPTIONS=hardening=+all

BUILDDIR = $(CURDIR)/debian/build
DESTDIR = $(CURDIR)/debian/tmp

CPPFLAGS:=$(shell dpkg-buildflags --get CPPFLAGS)
CFLAGS:=$(shell dpkg-buildflags --get CFLAGS) $(CPPFLAGS)
CXXFLAGS:=$(shell dpkg-buildflags --get CXXFLAGS) $(CPPFLAGS)
LDFLAGS:=$(shell dpkg-buildflags --get LDFLAGS)

DEB_HOST_MULTIARCH ?= $(shell dpkg-architecture -qDEB_HOST_MULTIARCH)

include /usr/share/dpkg/pkg-info.mk
export LIBCOMMON_REVISION=$(DEB_VERSION_UPSTREAM)

ifndef THREADS_COUNT
    THREADS_COUNT=`nproc || grep -c ^processor /proc/cpuinfo`
endif

#DEB_BUILD_OPTIONS:="parallel=$(THREADS_COUNT)"

DEB_COMPILER_VERSION ?= -6
DEB_CC ?= gcc
DEB_CXX ?= g++

DEB_BUILD_GNU_TYPE := $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
DEB_HOST_GNU_TYPE  := $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
ifeq ($(DEB_BUILD_GNU_TYPE),$(DEB_HOST_GNU_TYPE))
CC := $(DEB_CC)$(DEB_COMPILER_VERSION)
CXX := $(DEB_CXX)$(DEB_COMPILER_VERSION)
else
CC := $(DEB_HOST_GNU_TYPE)-$(DEB_CC)$(DEB_COMPILER_VERSION)
CXX := $(DEB_HOST_GNU_TYPE)-$(DEB_CXX)$(DEB_COMPILER_VERSION)
endif

CMAKE_FLAGS ?= -DCMAKE_CXX_COMPILER=`which $(CXX)` -DCMAKE_C_COMPILER=`which $(CC)` $(CMAKE_FLAGS_ADD) -DCMAKE_INSTALL_PREFIX=$(DESTDIR) -DENABLE_TESTS=0

ifdef CMAKE_BUILD_TYPE
	CMAKE_FLAGS += -DCMAKE_BUILD_TYPE=$(CMAKE_BUILD_TYPE)
endif

ifdef USE_STATIC_LIBRARIES
	CMAKE_FLAGS += -DUSE_STATIC_LIBRARIES=$(USE_STATIC_LIBRARIES)
endif


%:
	echo "DBO= $(DEB_BUILD_OPTIONS)"
	dh $@ --parallel --max-parallel=$(THREADS_COUNT) --buildsystem=cmake --builddirectory=$(BUILDDIR)

override_dh_auto_configure:
	dh_auto_configure -- $(CMAKE_FLAGS)

override_dh_auto_test:
	#TODO
	#./debian/tests_wrapper.sh

override_dh_auto_clean:
	rm -rf $(BUILDDIR)
	rm -rf $(DESTDIR)
	git clean -fdx --exclude=changelog ./debian
	dh_clean

override_dh_auto_install:
	dh_auto_install

	# In case building clickhouse-server, adding to package binary of clang, ld and header files - for dynamic compilation.
	mkdir -p $(DESTDIR)/usr/share/clickhouse/bin $(DESTDIR)/usr/share/clickhouse/headers
	debian/copy_clang_binaries.sh $(DESTDIR)/usr/share/clickhouse/bin/
	./copy_headers.sh . $(DESTDIR)/usr/share/clickhouse/headers

	# Making docs
	cp LICENSE debian/copyright

	for DAEMON_PKG in ${DAEMONS}; do \
		echo "LICENSE" > debian/$$DAEMON_PKG.docs; \
		echo "AUTHORS" >> debian/$$DAEMON_PKG.docs; \
		echo "README.md" >> debian/$$DAEMON_PKG.docs; \
	done

	#ln -s clickhouse-server.docs debian/clickhouse-server-base.docs
	#ln -s clickhouse-server.docs debian/clickhouse-server-common.docs

	#?
	#mkdir -p $(DESTDIR)/etc/security/limits.d
	#cp debian/clickhouse-server.limits $(DESTDIR)/etc/security/limits.d/clickhouse.conf
	#mkdir -p $(DESTDIR)/etc/init.d
	#cp debian/clickhouse-server.init $(DESTDIR)/etc/init.d/clickhouse-server
	#mkdir -p $(DESTDIR)/etc/cron.d
	#cp debian/clickhouse-server.cron.d $(DESTDIR)/etc/cron.d/clickhouse-server

override_dh_install:
    dh_install --list-missing -- DESTDIR=debian/tmp
