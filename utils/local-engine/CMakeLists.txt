set(ARROW_INCLUDE_DIR "${ClickHouse_SOURCE_DIR}/contrib/arrow/cpp/src")

# Find java/jni
include(FindJava)
include(UseJava)
include(FindJNI)

set(JNI_NATIVE_SOURCES local_engine_jni.cpp)
set(LOCALENGINE_SHARED_LIB local_engine_jni)

add_subdirectory(proto)

add_headers_and_sources(builder Builder)
add_headers_and_sources(parser Parser)
add_headers_and_sources(storages Storages)
include_directories(
        ${JNI_INCLUDE_DIRS}
        ${CMAKE_CURRENT_BINARY_DIR}/proto
        ${ARROW_INCLUDE_DIR}
        ${ClickHouse_SOURCE_DIR}/utils/local-engine
        ${ClickHouse_SOURCE_DIR}/src
        ${ClickHouse_SOURCE_DIR}/base
)

add_library(${LOCALENGINE_SHARED_LIB} SHARED
        ${JNI_NATIVE_SOURCES}
        ${builder_sources}
        ${parser_sources}
        ${storages_sources}
        )

target_link_libraries(${LOCALENGINE_SHARED_LIB} PUBLIC
        clickhouse_aggregate_functions
        clickhouse_common_config
        clickhouse_common_io
        clickhouse_dictionaries
        clickhouse_functions
        clickhouse_parsers
        clickhouse_storages_system
        substrait
        loggers
        )
target_compile_options(unwind PRIVATE -fPIC)
target_compile_options(cxxabi PRIVATE -fPIC)
target_compile_options(ssl PRIVATE -fPIC)
target_compile_options(cxx PRIVATE -fPIC)
target_compile_options(crypto PRIVATE -fPIC)
target_compile_options(libpq PRIVATE -fPIC)
target_compile_options(libpqxx PRIVATE -fPIC)
target_compile_options(lz4 PRIVATE -fPIC)
target_compile_options(snappy PRIVATE -fPIC)
target_compile_options(zstd PRIVATE -fPIC)
target_compile_options(s2 PRIVATE -fPIC)
target_compile_options(sqlite PRIVATE -fPIC)
target_compile_options(zlib PRIVATE -fPIC)
target_compile_options(krb5 PRIVATE -fPIC)
target_compile_options(libprotobuf PRIVATE -fPIC)
target_compile_options(re2 PRIVATE -fPIC)
target_compile_options(ldap_r PRIVATE -fPIC)
target_compile_options(thrift_static PRIVATE -fPIC)
target_compile_options(double-conversion PRIVATE -fPIC)
target_compile_options(arrow_static PRIVATE -fPIC)
target_compile_options(parquet_static PRIVATE -fPIC)
target_compile_options(lber PRIVATE -fPIC)
target_compile_options(_poco_foundation PRIVATE -fPIC)
target_compile_options(fmt PRIVATE -fPIC)
target_compile_options(cctz PRIVATE -fPIC)
target_compile_options(_poco_xml PRIVATE -fPIC)
target_compile_options(_poco_util PRIVATE -fPIC)
target_compile_options(_poco_json PRIVATE -fPIC)
target_compile_options(_poco_net PRIVATE -fPIC)
target_compile_options(_poco_net_ssl PRIVATE -fPIC)
target_compile_options(common PRIVATE -fPIC)
target_compile_options(mysqlxx PRIVATE -fPIC)
target_compile_options(nuraft PRIVATE -fPIC)
target_compile_options(glibc-compatibility PRIVATE -fPIC)
target_compile_options(_poco_foundation_pcre PRIVATE -fPIC)
target_compile_options(_poco_xml_expat PRIVATE -fPIC)
target_compile_options(_poco_crypto PRIVATE -fPIC)
target_compile_options(rdkafka PRIVATE -fPIC)
target_compile_options(LLVMDemangle PRIVATE -fPIC)
target_compile_options(LLVMSupport PRIVATE -fPIC)
target_compile_options(LLVMDebugInfoCodeView PRIVATE -fPIC)
target_compile_options(LLVMMC PRIVATE -fPIC)
target_compile_options(LLVMMCParser PRIVATE -fPIC)
target_compile_options(LLVMRemarks PRIVATE -fPIC)
target_compile_options(LLVMCore PRIVATE -fPIC)
target_compile_options(LLVMMCParser PRIVATE -fPIC)
target_compile_options(LLVMBitReader PRIVATE -fPIC)
target_compile_options(LLVMTextAPI PRIVATE -fPIC)
target_compile_options(LLVMObject PRIVATE -fPIC)
target_compile_options(LLVMProfileData PRIVATE -fPIC)
target_compile_options(LLVMAnalysis PRIVATE -fPIC)
target_compile_options(LLVMProfileData PRIVATE -fPIC)
target_compile_options(LLVMTransformUtils PRIVATE -fPIC)
target_compile_options(LLVMVectorize PRIVATE -fPIC)
target_compile_options(LLVMInstCombine PRIVATE -fPIC)
target_compile_options(LLVMBinaryFormat PRIVATE -fPIC)
target_compile_options(LLVMTarget PRIVATE -fPIC)
target_compile_options(LLVMBitstreamReader PRIVATE -fPIC)
target_compile_options(LLVMTarget PRIVATE -fPIC)
target_compile_options(LLVMAggressiveInstCombine PRIVATE -fPIC)
target_compile_options(LLVMScalarOpts PRIVATE -fPIC)
target_compile_options(LLVMInstrumentation PRIVATE -fPIC)
target_compile_options(LLVMBitWriter PRIVATE -fPIC)
target_compile_options(LLVMFrontendOpenMP PRIVATE -fPIC)
target_compile_options(LLVMipo PRIVATE -fPIC)
target_compile_options(LLVMCodeGen PRIVATE -fPIC)
target_compile_options(LLVMSelectionDAG PRIVATE -fPIC)
target_compile_options(LLVMGlobalISel PRIVATE -fPIC)
target_compile_options(LLVMDebugInfoDWARF PRIVATE -fPIC)
target_compile_options(_poco_json_pdjson PRIVATE -fPIC)
target_compile_options(LLVMAsmPrinter PRIVATE -fPIC)
target_compile_options(LLVMX86Desc PRIVATE -fPIC)
target_compile_options(LLVMX86CodeGen PRIVATE -fPIC)
target_compile_options(LLVMRuntimeDyld PRIVATE -fPIC)
target_compile_options(icuuc PRIVATE -fPIC)
target_compile_options(icui18n PRIVATE -fPIC)
target_compile_options(cpuid PRIVATE -fPIC)
target_compile_options(re2_st PRIVATE -fPIC)
target_compile_options(_boost_program_options PRIVATE -fPIC)
target_compile_options(clickhouse_common_io PRIVATE -fPIC)
target_compile_options(clickhouse_dictionaries_embedded PRIVATE -fPIC)
target_compile_options(clickhouse_common_zookeeper PRIVATE -fPIC)
target_compile_options(clickhouse_parsers PRIVATE -fPIC)
target_compile_options(clickhouse_aggregate_functions PRIVATE -fPIC)
target_compile_options(clickhouse_common_config PRIVATE -fPIC)
target_compile_options(clickhouse_dictionaries PRIVATE -fPIC)
target_compile_options(clickhouse_functions PRIVATE -fPIC)
target_compile_options(clickhouse_storages_system PRIVATE -fPIC)
target_compile_options(clickhouse_table_functions PRIVATE -fPIC)
target_compile_options(substrait PRIVATE -fPIC)
target_compile_options(LLVMMCDisassembler PRIVATE -fPIC)
target_compile_options(LLVMX86Info PRIVATE -fPIC)
target_compile_options(LLVMCFGuard PRIVATE -fPIC)
target_compile_options(LLVMExecutionEngine PRIVATE -fPIC)
target_compile_options(roaring PRIVATE -fPIC)
target_compile_options(yaml-cpp PRIVATE -fPIC)
target_compile_options(dbms PRIVATE -fPIC)
target_compile_options(clickhouse_functions_jsonpath PRIVATE -fPIC)
target_compile_options(dragonbox_to_chars PRIVATE -fPIC)
target_compile_options(clickhouse_functions_gatherutils PRIVATE -fPIC)
target_compile_options(clickhouse_functions_array PRIVATE -fPIC)
target_compile_options(hyperscan PRIVATE -fPIC)
target_compile_options(simdjson PRIVATE -fPIC)
target_compile_options(divide_impl_avx2 PRIVATE -fPIC)
target_compile_options(divide_impl PRIVATE -fPIC)
target_compile_options(murmurhash PRIVATE -fPIC)
target_compile_options(fastops PRIVATE -fPIC)
target_compile_options(base64 PRIVATE -fPIC)
target_compile_options(base64_avx PRIVATE -fPIC)
target_compile_options(base64_avx2 PRIVATE -fPIC)
target_compile_options(base64_ssse3 PRIVATE -fPIC)
target_compile_options(base64_scalar PRIVATE -fPIC)
target_compile_options(clickhouse_functions_url PRIVATE -fPIC)
target_compile_options(divide_impl_sse2 PRIVATE -fPIC)
target_compile_options(metrohash PRIVATE -fPIC)
target_compile_options(consistent-hashing PRIVATE -fPIC)
target_compile_options(h3 PRIVATE -fPIC)


#set(CPACK_PACKAGE_VERSION 0.1.0)
#set(CPACK_GENERATOR "RPM")
#set(CPACK_PACKAGE_NAME "local_engine_jni")
#set(CPACK_PACKAGE_RELEASE 1)
#set(CPACK_CMAKE_GENERATOR Ninja)
#set(CPACK_PACKAGE_CONTACT "neng.liu@kyligence.io")
#set(CPACK_PACKAGE_VENDOR "Kyligence")
#set(CPACK_PACKAGING_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX})
#set(CPACK_RPM_PACKAGE_AUTOREQPROV "no")
#set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${CPACK_PACKAGE_RELEASE}.${CMAKE_SYSTEM_PROCESSOR}")
#include(CPack)

if (ENABLE_TESTS)
    add_subdirectory(tests)
endif ()
