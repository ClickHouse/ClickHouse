<?xml version="1.0"?>
<!DOCTYPE rules [
<!ENTITY ver1d "\d+">
<!ENTITY ver2d "\d+(?:\.\d+)?">
<!ENTITY ver3d "\d+(?:\.\d+){0,2}">
<!ENTITY ver "\d[\d\.]*">
<!ENTITY word "\w+">
]>
<rules xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="browser.xsd" minver="1.1" date="2013.03.20.11.00">
	<branch name="Mobile">
		<!-- Mobile bullshit -->
		<match type="any">
			<pattern type="string">Android</pattern>
			<pattern type="string">iPhone</pattern>
			<pattern type="string">Bada/</pattern>
			<pattern type="string">iPad</pattern>
			<pattern type="string">iPod;</pattern>
			<pattern type="string">Mobile Safari</pattern>
			<pattern type="string">MobileSafari</pattern>
			<pattern type="string">Opera Mob</pattern>
			<pattern type="string">Opera Tab</pattern>
			<pattern type="string">Opera Mini</pattern>
			<pattern type="string">CLDC-</pattern>
			<pattern type="string">MIDP-</pattern>
			<pattern type="string">Series 60</pattern>
			<pattern type="string">Symbian</pattern>
			<pattern type="string">Windows Phone</pattern>
			<pattern type="string">ZuneWP7</pattern>			
			<pattern type="string">Skyfire</pattern>
			<pattern type="string">Windows CE</pattern>
			<pattern type="string">Maemo</pattern>
			<pattern type="string">Tizen</pattern>
			<pattern type="string">Moblin</pattern>
			<pattern type="string">Fennec</pattern>
			<pattern type="string">UCWEB</pattern>
			<pattern type="string">UC Browser</pattern>
			<pattern type="string">UP.Browser</pattern>
			<pattern type="string">NetFront</pattern>
			<pattern type="string">Obigo</pattern>
			<pattern type="string">hpwOS</pattern>
			<pattern type="string">webOS</pattern>
			<pattern type="string">BREW</pattern>
			<pattern type="string">OpenWave</pattern>
			<pattern type="string">WAP</pattern>
			<pattern type="string">Nokia</pattern>
			<pattern type="string">DoCoMo</pattern>
			<pattern type="string">Kindle</pattern>
			<pattern type="string">Minimo</pattern>
			<pattern type="string">PlayStation Portable</pattern>
			<pattern type="string">Tablet browser</pattern>
			<pattern type="string">BlackBerry</pattern>
			<pattern type="string">PlayBook</pattern>
			<pattern type="string">PalmSource</pattern>
			<pattern type="string">MQQBrowser</pattern>
			<pattern type="string">iTunes-i</pattern>			
			<pattern type="regex">Windows NT.*ARM;</pattern>
			<pattern type="regex">MSIE.*PPC[;)]</pattern>
			<pattern type="regex">HTC[_/]</pattern>
			<pattern type="regex">^SAMSUNG</pattern>
			<pattern type="regex">^HUAWEI</pattern>
			<pattern type="regex">^Fly</pattern>
			<pattern type="regex">^SonyEricsson</pattern>
			<pattern type="regex">^Alcatel</pattern>
			<pattern type="regex">^[\w]+ Opera/</pattern>			
		</match>
		<define name="isMobile" value="true"/>
		<define name="isBrowser" value="true"/>
		
		<!-- Because this motherfucker claims to be ANOTHER BROWSER --> 
		<branch name="UCBrowser">
			<match type="any">
				<pattern type="string">UC Browser</pattern>
				<pattern type="string">UCWEB</pattern>
			</match>
			<define name="BrowserEngine" value="UCBrowser"/>
			<define name="BrowserName" value="UCBrowser"/>
			<define name="BrowserVersion">
				<pattern type="regex" value="$1">UC Browser(&ver2d;)</pattern>
				<pattern type="regex" value="$1">UCWEB(&ver2d;)</pattern>
			</define>
		</branch>
		
		<branch name="Webkit">
			<match>
				<pattern type="string">WebKit</pattern>
				<pattern type="string">Mobile Safari/</pattern>							
				<pattern type="regex">^Dolphin( HD)? &ver;.*iPhone</pattern>
				<pattern type="regex">^Mercury &ver;.*iPhone</pattern>
			</match>			
			<define name="BrowserEngine" value="WebKit"/>
			<define name="BrowserEngineVersion">
				<pattern type="regex" value="$1">WebKit/(&ver;)</pattern>
			</define>	
			<branch name="OperaMobile">
				<match type="any">
					<pattern type="string">OPR/</pattern>
				</match>
				<define name="BrowserName">OperaMobile</define>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">OPR/(&ver2d;)</pattern>
				</define>
			</branch>
			<branch name="NokiaBrowser">
				<match type="any">
					<pattern type="string">NokiaBrowser/</pattern>
					<pattern type="string">BrowserNG/</pattern>
					<pattern type="string">Nokia</pattern>
					<pattern type="string">SymbianOS</pattern>
				</match>
				<define name="BrowserName" value="NokiaBrowser"/>
				<define name="DeviceVendor" value="Nokia"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">BrowserNG/(&ver;)</pattern>
					<pattern type="regex" value="$1">Version/(&ver;)</pattern>
					<pattern type="regex" value="$1">NokiaBrowser/(&ver;)</pattern>
					<pattern type="regex" value="$1">Nokia[\w\-]*/(&ver;)</pattern>
					<pattern type="regex" value="$1">Series(?:60|80)/(&ver;)</pattern>
				</define>
			</branch>
			<branch name="Dolfin">
				<match type="any">
					<pattern type="string">Dolfin/</pattern>
				</match>
				<define name="BrowserName" value="Dolfin"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Dolfin/(&ver;)</pattern>
				</define>				
			</branch>
			
			<branch name="Tizen">
				<match type="any">
					<pattern type="string">Tizen</pattern>
				</match>
				<define name="BrowserName" value="Tizen"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Version/(&ver;)</pattern>
					<pattern type="regex" value="$1">Tizen Browser/(&ver;)</pattern>
				</define>				
			</branch>
			
			<branch name="Dolphin">
				<match type="any">
					<pattern type="regex">^Dolphin</pattern>
				</match>
				<define name="BrowserName" value="Dolphin"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">^Dolphin HD (&ver;).*iPhone</pattern>
					<pattern type="regex" value="$1">^Dolphin (&ver;).*iPhone</pattern>
				</define>
			</branch>
			
			<branch name="UCBrowser">
				<match type="any">
					<pattern type="regex">UCBrowser/&ver;</pattern>
				</match>
				<define name="BrowserName" value="UCBrowser"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">UCBrowser/(&ver3d;)</pattern>					
				</define>
			</branch>
			
			<branch name="Mercury">
				<match type="any">
					<pattern type="regex">^Mercury</pattern>
				</match>
				<define name="BrowserName" value="Mercury"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">^Mercury (&ver;)</pattern>
				</define>
			</branch>
			
			<branch name="Blackberry">
				<match type="any">
					<pattern type="string">PlayBook</pattern>
					<pattern type="string">BlackBerry</pattern>
				</match>
				<define name="BrowserName" value="BlackBerry"/>				
				<define name="isTablet">
					<pattern type="string" value="true">PlayBook</pattern>
				</define>
				<define name="PreferMobile">
					<pattern type="regex" value="false">Version/&ver; Safari/&ver;</pattern>
					<pattern type="regex" value="true">Version/&ver; Mobile Safari/&ver;</pattern>
				</define>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Version/(&ver3d;)</pattern>
				</define>
			</branch>
			
			<branch name="ChromeMobile">
				<match type="any">
					<pattern type="string">CrMo/</pattern>
					<pattern type="string">Chrome/</pattern>
					<pattern type="string">CriOS/</pattern>
				</match>
				<define name="BrowserName" value="ChromeMobile"/>				
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">CrMo/(&ver3d;)</pattern>
					<pattern type="regex" value="$1">Chrome/(&ver3d;)</pattern>
					<pattern type="regex" value="$1">CriOS/(&ver3d;)</pattern>
				</define>
			</branch>
			
			<branch name="SkyFire">
				<match>
					<pattern type="string">Skyfire/</pattern>
				</match>
				<define name="BrowserName" value="SkyFire"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Skyfire/(&ver;)</pattern>
				</define>
			</branch>
			<branch name="NetFront">
				<match>
					<pattern type="string">NetFrontLifeBrowser/</pattern>
				</match>
				<define name="BrowserName" value="NetFrontLifeBrowser"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">NetFront[\w]*/(&ver;)</pattern>
				</define>
			</branch>
			<branch name="Polaris">
				<match type="any">
					<pattern type="string">POLARIS/</pattern>
				</match>
				<define name="BrowserName" value="Polaris"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">POLARIS/(&ver;)</pattern>
				</define>
			</branch>			
			<branch name="wOSBrowser">
				<match>
					<pattern type="regex">wOSBrowser</pattern>
					<pattern type="regex">webOS</pattern>					
				</match>
				<define name="BrowserName" value="WebOSBrowser"/>
				<define name="isTouch" value="true"/>
				<define name="BrowserVersion">					
					<pattern type="regex" value="$1">wOSBrowser/(&ver2d;)</pattern>
					<pattern type="regex" value="$1">Version/(&ver2d;)</pattern>
				</define>
				<define name="isTablet">
					<pattern type="string" value="true">TouchPad</pattern>
				</define>
			</branch>
			<branch name="Ninesky">
				<match>
					<pattern type="string">Ninesky-android-mobile/</pattern>
					<pattern type="string">Ninesky/</pattern>
				</match>
				<define name="BrowserName" value="Ninesky"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Ninesky-android-mobile/(&ver;)</pattern>
					<pattern type="regex" value="$1">Ninesky/(&ver;)</pattern>
				</define>
			</branch>	
			<branch name="AndroidBrowser">
				<match type="any">
					<pattern type="string">Android</pattern>					
					<pattern type="regex">Mac OS X \d[\d_]+;.*HTC[_/\s]</pattern>
				</match>
				<define name="BrowserName" value="AndroidBrowser"/>
				<define name="isTouch" value="true"/>
				<define name="PreferMobile">
					<pattern type="regex" value="false">Version/&ver; Safari/&ver;</pattern>
					<pattern type="regex" value="true">Version/&ver; Mobile Safari/&ver;</pattern>
				</define>
				<define name="isTablet">
					<pattern type="string" value="true">Android 3</pattern>
					<pattern type="regex" value="true">Android [4].*[^e] Safari/&ver;</pattern>
				</define>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Version/(&ver;)</pattern>
				</define>				
			</branch>
			
			<branch name="MQQBrowser">
				<match type="any">
					<pattern type="string">MQQBrowser/</pattern>
				</match>
				<define name="BrowserName" value="MQQBrowser"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">MQQBrowser/(&ver;)</pattern>				
				</define>
			</branch>
			
			<branch name="MobileSafari">
				<match type="any">
					<pattern type="regex">iP([oa]d|hone).*Mobile Safari</pattern>					
					<pattern type="regex">Mobile/[\w0-9]+(?: Safari/)?</pattern>
					<pattern type="string">iPhone OS</pattern>
				</match>
				<define name="BrowserName" value="MobileSafari"/>
				<define name="isTouch" value="true"/>
				<define name="isTablet">
					<pattern type="string" value="true">iPad</pattern>
				</define>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Version/(&ver;)</pattern>
				</define>
				<define name="inAppBrowser">
					<pattern type="string" value="false">Safari</pattern>
					<pattern type="string" value="true">Mobile</pattern>
				</define>
			</branch>
			<branch type="default">
				<define name="BrowserName" value="Unknown"/>				
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Version/(&ver;)</pattern>
				</define>
			</branch>
			<branch type="common">
				<define name="BrowserShell">
					<pattern type="string" value="Diigo">Diigo</pattern>
					<pattern type="string" value="Diigo">iChromy</pattern>
					<pattern type="string" value="UCBrowser">UC AppleWebkit</pattern>
				</define>
			</branch>
		</branch>		
		<branch name="Presto">
			<match>
				<pattern type="string">Opera</pattern>
			</match>
			<define name="BrowserEngine" value="Presto"/>			
			<define name="BrowserEngineVersion">
				<pattern type="regex" value="$1">Presto/(&ver;)</pattern>
			</define>
			<branch name="OperaMini">
				<match>
					<pattern type="string">Opera Mini/</pattern>
					<pattern type="string">Opera&lt;Ch-Ray&gt;</pattern>					
				</match>
				<define name="BrowserName" value="OperaMini"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Opera Mini/(&ver2d;)</pattern>
				</define>
			</branch>
			<branch name="OperaMobile">
				<match type="any">
					<pattern type="string">Opera Mobi/</pattern>
					<pattern type="string">Opera Tablet/</pattern>
					<pattern type="regex">Opera/(&ver2d;)</pattern>
					<pattern type="regex">Opera &ver;</pattern>
				</match>
				<define name="BrowserName" value="OperaMobile"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Version/(&ver2d;)</pattern>
					<pattern type="regex" value="$1">Opera[\s/]?(&ver2d;)</pattern>
				</define>
				<define name="isTablet">
					<pattern type="string" value="true">Tablet/</pattern>
					<pattern type="string" value="true">Tablet browser</pattern>
				</define>
			</branch>
		</branch>
		<branch name="Gecko">
			<match type="any">
				<pattern type="string">Fennec</pattern>
				<pattern type="string">Firefox</pattern>
				<pattern type="string">Minimo</pattern>
				<pattern type="regex">Gecko.*Moblin</pattern>
			</match>
			<define name="BrowserEngine" value="Gecko"/>			
			<define name="isTouch" value="true"/>
			<define name="BrowserEngineVersion">
				<pattern type="regex" value="$1">rv:(&ver;)</pattern>
			</define>
			<branch name="Frefox">
				<match type="any">
					<pattern type="string">Firefox/</pattern>
					<pattern type="string">Fennec/</pattern>
				</match>
				<define name="BrowserName" value="MobileFirefox"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Firefox/(&ver;)</pattern>
					<pattern type="regex" value="$1">Fennec/(&ver;)</pattern>
				</define>
				<define name="isTablet">
					<pattern type="string" value="true">Tablet browser</pattern>
				</define>
				<define name="MultiTouch" value="true"/>
			</branch>
			<branch name="Minimo">
				<match type="any">
					<pattern type="string">Minimo/</pattern>
				</match>
				<define name="BrowserName" value="Minimo"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Minimo/(&ver;)</pattern>
				</define>
			</branch>
		</branch>
		<branch name="InternetExplorer">
			<match>
				<pattern type="string">IEMobile</pattern>
				<pattern type="string">IE Mobile</pattern>
				<pattern type="regex">MSIE &ver2d;; Windows CE</pattern>
				<pattern type="regex">MSIE &ver2d;.*Windows Phone</pattern>
				<pattern type="regex">MSIE &ver2d;.*PPC</pattern>
				<pattern type="regex">MSIE &ver2d;.*WP[78]</pattern>
				<pattern type="regex">MSIE &ver2d;.*NOKIA</pattern>
				<pattern type="regex">MSIE 1[01].*ARM;</pattern>				
			</match>
			<define name="BrowserEngine" value="Trident"/>			
			<define name="BrowserEngineVersion">
				<pattern type="regex" value="$1">Trident/(&ver2d;)</pattern>
				<pattern type="regex" value="$1">MSIE (&ver2d;)</pattern>
			</define>	
			<branch name="MSIETablet">
				<match type="any">					
					<pattern type="regex">MSIE.*Windows NT.*ARM;</pattern>
				</match>
				<define name="BrowserName" value="MSIE"/>
				<define name="isTablet" value="true"/>
				<define name="BrowserVersion">					
					<pattern type="regex" value="$1">MSIE (&ver2d;)</pattern>
				</define>
			</branch>
			<branch name="MSIE">
				<match type="any">
					<pattern type="string">IEMobile</pattern>
					<pattern type="string">IE Mobile</pattern>
					<pattern type="string">MSIE</pattern>
				</match>
				<define name="BrowserName" value="IEMobile"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">MSIEMobile[ /](&ver2d;)</pattern>
					<pattern type="regex" value="$1">IE\s?Mobile[ /](&ver2d;)</pattern>
					<pattern type="regex" value="$1">MSIE (&ver2d;)</pattern>
				</define>
			</branch>
		</branch>
		<branch name="ProprietaryMobileBrowser">
			<match type="any">
				<pattern type="string">MIDP-</pattern>
				<pattern type="string">CLDC-</pattern>				
				<pattern type="string">NetFront</pattern>
				<pattern type="string">Obigo</pattern>
				<pattern type="string">UCBrowser</pattern>
				<pattern type="string">UP.Browser</pattern>
				<pattern type="string">DoCoMo</pattern>
				<pattern type="string">Dalvik/</pattern>
				<pattern type="string">PSP</pattern>
				<pattern type="string">BREW</pattern>
				<pattern type="string">Blazer</pattern>
				<pattern type="string">MQQBrowser</pattern>
			</match>
			<define name="BrowserEngine" value="Proprietary"/>			
			<branch name="Obigo">
				<match type="any">
					<pattern type="string">Obigo</pattern>
					<pattern type="string">Teleca</pattern>
				</match>
				<define name="BrowserName" value="Obigo"/>
				<define name="isWAP" value="true"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Obigo(?:InternetBrowser|-Browser|-MMS|-Q[\w]+)?/Q(\w+)</pattern>
					<pattern type="regex" value="$1">Obigo(?:-|\s)Q([\.\w]+)</pattern>
					<pattern type="regex" value="$1">Teleca(?:-|\s)Q([\.\w]+)</pattern>
				</define>
			</branch>
			<branch name="Polaris">
				<match type="any">
					<pattern type="string">POLARIS/</pattern>
				</match>
				<define name="BrowserName" value="Polaris"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">POLARIS/(&ver;)</pattern>
				</define>
			</branch>
			<branch name="Blackberry">
				<match type="any">
					<pattern type="regex">^Blackberry</pattern>
				</match>
				<define name="BrowserName" value="Blackberry"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">^Blackberry[\d]+/(&ver;)</pattern>				
				</define>
			</branch>	
			
			<branch name="Blazer">
				<match type="any">
					<pattern type="string">Blazer/</pattern>
				</match>
				<define name="BrowserName" value="Blazer"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Blazer/(&ver;)</pattern>				
				</define>
			</branch>
			
			<branch name="MQQBrowser">
				<match type="any">
					<pattern type="string">MQQBrowser/</pattern>
				</match>
				<define name="BrowserName" value="MQQBrowser"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">MQQBrowser/(&ver;)</pattern>				
				</define>
			</branch>
						
			<branch name="Dalvik">
				<match type="any">
					<pattern type="string">Dalvik/</pattern>
				</match>
				<define name="BrowserName">Dalvik</define>
				<define name="isBrowser">false</define>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">^Dalvik/(&ver;)</pattern>
				</define>
			</branch>
			<branch name="NetFront">
				<match type="any">
					<pattern type="regex">NetFront(/|\d)</pattern>
					<pattern type="string">PlayStation Portable</pattern>
				</match>
				<define name="BrowserName" value="NetFront"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">NetFront/?(&ver;)</pattern>
				</define>
			</branch>
			<branch name="OviBrowser">
				<match type="any">
					<pattern type="string">S40OviBrowser</pattern>
				</match>
				<define name="BrowserName" value="OviBrowser"/>				
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">S40OviBrowser/(&ver2d;)</pattern>
				</define>
			</branch>
			<branch name="UCBrowser">
				<match type="any">					
					<pattern type="string">UCBrowser</pattern>
				</match>
				<define name="BrowserName" value="UCBrowser"/>
				<define name="BrowserEngine" value="UCBrowser"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">(?:UC\s?Browser|UCWEB)/?(&ver2d;)</pattern>
				</define>
			</branch>

			<branch name="NokiaBrowser">
				<match type="any">
					<pattern type="string">S60</pattern>
					<pattern type="regex">Series[89]0</pattern>					
				</match>
				<define name="BrowserName" value="NokiaBrowser"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">(?:[Ss]60|Series[89]0)/(&ver2d;)</pattern>
				</define>
			</branch>

			<branch name="Dolfin">
				<match type="any">
					<pattern type="string">Dolfin/</pattern>
				</match>
				<define name="BrowserName" value="Dolfin"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Dolfin/(&ver2d;)</pattern>
				</define>
			</branch>
			
			<branch name="SEMC">
				<match type="any">
					<pattern type="string">SEMC-Browser/</pattern>
				</match>
				<define name="BrowserName" value="SEMC"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">SEMC-Browser/(&ver2d;)</pattern>
				</define>
			</branch>
			
			<branch name="Jasmine">
				<match type="any">
					<pattern type="string">Jasmine/</pattern>
				</match>
				<define name="BrowserName" value="Jasmine"/>
				<define name="isWAP" value="true"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Jasmine/(&ver2d;)</pattern>
				</define>
			</branch>

			<branch name="OpenWave">
				<match type="any">
					<pattern type="string">UP.Browser/</pattern>
					<pattern type="string">OpenWave/</pattern>
				</match>
				<define name="BrowserName" value="OpenWave"/>
				<define name="isWAP" value="true"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">(?:UP.Browser|OpenWave)/(&ver2d;)</pattern>
				</define>
			</branch>

			<branch name="DoCoMo">
				<match type="any">
					<pattern type="string">DoCoMo</pattern>
				</match>
				<define name="BrowserName" value="Docomo"/>
				<define name="isWAP" value="true"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">(?:DoCoMo|Docomo)/(&ver2d;)</pattern>
				</define>
			</branch>
			<branch name="UnknownMobileBrowser" type="default">
				<define name="isWAP" value="true"/>
			</branch>
		</branch>
		
		<branch name="UnknownMobileBrowser" type="default">
			<define name="BrowserEngine" value="Unknown"/>
			<define name="BrowserName" value="Unknown"/>
			<define name="isWAP">
				<pattern type="string" value="true">WAP</pattern>				
			</define>
			<branch name="iTunes">
				<match type="any">
					<pattern type="string">iTunes-</pattern>
				</match>
				<define name="BrowserName" value="iTunes"/>
				<define name="isBrowser" value="false"/>
			</branch>
		</branch>
		
		<!-- Detect Mobile OS -->
		<branch type="common" name="MobileOS">
			<branch name="Tizen">
				<match>
					<pattern type="string">Tizen</pattern>					
				</match>
				<define name="OSFamily" value="Tizen"/>
				<define name="isTouch" value="true"/>
				<define name="OSVersion">
					<pattern type="regex" value="$1">Tizen/(&ver;)</pattern>					
					<pattern type="regex" value="$1">Tizen (&ver;)</pattern>
				</define>
			</branch>
			<branch name="Android">
				<match>
					<pattern type="string">Android</pattern>										
					<pattern type="regex">\(Linux;.*;\s?2\.[23]\.\d+;</pattern>
					<pattern type="regex">\(Linux;.*;\s?3\.[012]\.\d+;</pattern>
					<pattern type="regex">Mac OS X \d[\d\_]+;.*HTC[_/]</pattern>
				</match>
				<define name="OSFamily" value="Android"/>
				<define name="isTouch" value="true"/>
				<define name="OSVersion">
					<pattern type="regex" value="$1">Android\s?(&ver;)</pattern>
					<pattern type="regex" value="$1">\(Linux;.*;\s?(2\.&ver;);</pattern>
					<pattern type="regex" value="$1">\(Linux;.*;\s?(3\.&ver;);</pattern>
				</define>
				<define name="isTablet">
					<pattern type="string" value="true">Android 3</pattern>
					<pattern type="string" value="true">Linux;U;3</pattern>
					<pattern type="regex" value="true">Android.*Tablet</pattern>
				</define>
				<define name="OSName">
					<pattern type="regex" value="Android Astro">(?:Android|\(Linux;.*;)\s?1\.0</pattern>
					<pattern type="regex" value="Android Bender">(?:Android|\(Linux;.*;)\s?1\.1</pattern>
					<pattern type="regex" value="Android Cupcake">(?:Android|\(Linux;.*;)\s?1\.5</pattern>
					<pattern type="regex" value="Android Donut">(?:Android|\(Linux;.*;)\s?1\.6</pattern>
					<pattern type="regex" value="Android Eclair">(?:Android|\(Linux;.*;)\s?2\.[0-1]</pattern>
					<pattern type="regex" value="Android Froyo">(?:Android|\(Linux;.*;)\s?2\.2</pattern>
					<pattern type="regex" value="Android Gingerbread">(?:Android|\(Linux;.*;)\s?2\.3</pattern>
					<pattern type="regex" value="Android Honeycomb">(?:Android|\(Linux;.*;)\s?3\.[0-2]</pattern>
					<pattern type="regex" value="Android Ice Cream Sandwich">(?:Android|\(Linux;.*;)\s?4\.0</pattern>
					<pattern type="regex" value="Android Jelly Bean">(?:Android|\(Linux;.*;)\s?4\.[12]</pattern>
				</define>
				<branch name="DeviceName">
					<match>
						<pattern type="regex">Android.* Build/</pattern>
						<pattern type="regex">Mac OS X.*; HTC_</pattern>
					</match>
					<define name="DeviceVendor">
						<pattern type="string" value="HTC">HTC_</pattern>
						<pattern type="string" value="LG Electronics">LG-</pattern>
						<pattern type="string" value="SAMSUNG">SAMSUNG</pattern>
						<pattern type="string" value="Sony Ericsson">SonyEricsson</pattern>
						<pattern type="string" value="Sony">Sony </pattern>
						<pattern type="string" value="SAMSUNG"> GT-</pattern>
						<pattern type="string" value="SAMSUNG"> SGH-</pattern>						
						<pattern type="string" value="Huawei">Huawei</pattern>
					</define>
				</branch>				
				<define name="MultiTouch">
					<pattern type="regex" value="true">(?:Android|\(Linux;.*;)\s?(?:2\.[23]|[345]\.).*WebKit</pattern>
					<pattern type="string" value="true">Opera Mobi/</pattern>
					<pattern type="string" value="true">Opera Tablet/</pattern>					
				</define>
				
			</branch>
			<branch name="iPhoneOS">
				<match>
					<pattern type="string">iPhone</pattern>
					<pattern type="string">iPad</pattern>
					<pattern type="string">iPod</pattern>					
				</match>
				<define name="OSFamily" value="iOS"/>
				<define name="DeviceVendor" value="Apple"/>
				<define name="isTouch">
					<pattern type="string" value="true">(iPhone</pattern>
					<pattern type="string" value="true">(iPad</pattern>
					<pattern type="string" value="true">(iPod</pattern>
				</define>
				<define name="OSVersion">
					<pattern type="regex" value="$1.$2.$3">(?:iPhone|CPU) OS (\d)_(\d)_(\d)</pattern>
					<pattern type="regex" value="$1.$2">(?:iPhone|CPU) OS (\d)_(\d)</pattern>
					<pattern type="regex" value="$1">(?:iPhone|CPU) OS (\d)</pattern>									
					<pattern type="regex" value="$1">iTunes-[\w\-]+/(&ver;)</pattern>
				</define>
				<define name="isTablet">
					<pattern type="string" value="true">iPad</pattern>
				</define>
				<define name="isEmulator">
					<pattern type="string" value="true">iPhone Simulator</pattern>					
				</define>									
				<define name="MultiTouch">
					<pattern type="string" value="true">WebKit</pattern>	
				</define>				
			</branch>			
			<branch name="Symbian">
				<match>
					<pattern type="string">SymbianOS</pattern>
					<pattern type="string">Symbian</pattern>
					<pattern type="string">Series60</pattern>
					<pattern type="string">Series 60</pattern>
					<pattern type="string">SymbOS</pattern>
					<pattern type="string">S60</pattern>
					<pattern type="string">Series80</pattern>
					<pattern type="string">Series90</pattern>														
					<pattern type="regex">^Nokia.*AppleWebKit</pattern>
				</match>
				<define name="OSFamily" value="Symbian"/>
				<define name="DeviceVendor">
					<pattern type="string" value="Nokia">Nokia</pattern>					
				</define>
				<define name="OSVersion">
					<pattern type="regex" value="$1">SymbianOS/(&ver;)</pattern>
					<pattern type="regex" value="Symbian^$1">Symbian/(&ver;)</pattern>
				</define>
			</branch>
			<branch name="Series40">
				<match>
					<pattern type="string">Series40</pattern>
				</match>
				<define name="OSFamily" value="Series40"/>
				<define name="DeviceVendor" value="Nokia"/>
			</branch>
			<branch name="Bada">
				<match>
					<pattern type="string">Bada</pattern>
				</match>
				<define name="OSFamily" value="Bada"/>
				<define name="DeviceVendor" value="Samsung"/>
				<define name="isTouch" value="true"/>
				<define name="OSVersion">
					<pattern type="regex" value="$1">Bada/(&ver;)</pattern>
				</define>				
				<define name="MultiTouch">
					<pattern type="string" value="true">WebKit</pattern>	
				</define>					
			</branch>
			<branch name="BlackBerry">
				<match>
					<pattern type="string">BlackBerry</pattern>
				</match>
				<define name="OSFamily" value="BlackBerry"/>
				<define name="DeviceVendor" value="RIM"/>
				<define name="MultiTouch">
					<pattern type="string" value="true">WebKit</pattern>
				</define>				
			</branch>
			<branch name="BlackberryTablet">
				<match type="any">					
					<pattern type="string">RIM Tablet OS</pattern>					
				</match>
				<define name="isTouch" value="true"/>
				<define name="isTablet" value="true"/>
				<define name="OSFamily" value="RIMTabletOS"/>
				<define name="DeviceVendor" value="RIM"/>
				<define name="OSVersion">
					<pattern type="regex" value="$1">RIM Tablet OS (&ver;)</pattern>					
				</define>
				<define name="MultiTouch">
					<pattern type="string" value="true">WebKit</pattern>
				</define>
			</branch>
			<branch name="MeeGo">
				<match>
					<pattern type="string">MeeGo</pattern>
					<pattern type="string">Maemo</pattern>
				</match>
				<define name="OSFamily" value="MeeGo"/>
				<define name="isTouch" value="true"/>
			</branch>			
			<branch name="WindowsRT">
				<match>
					<pattern type="regex">Windows NT.*ARM;</pattern>					
				</match>
				<define name="OSFamily" value="WindowsRT"/>				
				<define name="isTouch" value="true"/>
				<define name="isTablet" value="true"/>
				<define name="OSVersion">
					<pattern type="regex" value="$1">Windows NT (&ver;)</pattern>					
				</define>				
			</branch>
			<branch name="WindowsPhone">
				<match>					
					<pattern type="string">ZuneWP7</pattern>
					<pattern type="string">Lumia</pattern>
					<pattern type="regex">Windows Phone [^6]</pattern>					
					<pattern type="regex">MSIE.*NOKIA</pattern>
				</match>
				<define name="OSFamily" value="WindowsPhone"/>
				<define name="DeviceVendor">
					<pattern type="string" value="Nokia">Nokia</pattern>					
				</define>
				<define name="isTouch" value="true"/>
				<define name="OSVersion">
					<pattern type="regex" value="$1">Windows Phone OS (&ver2d;)</pattern>
					<pattern type="regex" value="$1">Windows Phone (&ver2d;)</pattern>
					<pattern type="regex" value="$1">WP(&ver;)</pattern>
				</define>
				<define name="isEmulator">
					<pattern type="string" value="true">XDeviceEmulator</pattern>					
				</define>	
			</branch>
			<branch name="WindowsMobile">
				<match>
					<pattern type="string">Windows Mobile</pattern>
					<pattern type="string">Windows CE</pattern>
					<pattern type="string">Microsoft Windows</pattern>
					<pattern type="regex">Windows NT(?!UNTRUSTED)</pattern>
					<pattern type="string">WindowsMobile</pattern>
					<pattern type="string">PPC;</pattern>					
				</match>
				<define name="OSFamily" value="WindowsMobile"/>
			</branch>
			<branch name="WebOS">
				<match>
					<pattern type="string">hpwOS</pattern>
					<pattern type="string">webOS</pattern>
				</match>	
				<define name="OSFamily">WebOS</define>
				<define name="DeviceVendor" value="HP"/>
				<define name="OSVersion">
					<pattern type="regex" value="$1">hpwOS/(&ver2d;)</pattern>
					<pattern type="regex" value="$1">webOS/(&ver2d;)</pattern>
				</define>
			</branch>
			<branch name="Linux">
				<match>
					<pattern type="string">Linux</pattern>
				</match>
				<define name="OSFamily">
					<pattern type="string" value="Linux">Linux</pattern>
				</define>
			</branch>	
			<branch name="BREW">
				<match>
					<pattern type="string">(BREW</pattern>					
				</match>	
				<define name="OSFamily">BREW</define>
				<define name="OSVersion">
					<pattern type="regex" value="$1">BREW\s(&ver3d;)</pattern>					
				</define>
			</branch>	
			<branch name="Nucleus">
				<match>
					<pattern type="string">Nucleus</pattern>					
				</match>	
				<define name="OSFamily">Nucleus</define>				
			</branch>				
			<branch name="Java">
				<match>
					<pattern type="string">J2ME/MIDP</pattern>										
				</match>	
				<define name="OSFamily">Java</define>				
			</branch>			
			<branch type="default">
				<define name="OSFamily" value="Unknown"/>
			</branch>
			<define name="J2ME">				
				<pattern type="string" value="true">J2ME</pattern>					
				<pattern type="string" value="true">MIDP-</pattern>
				<pattern type="string" value="true">CLDC-</pattern>			
			</define>
		</branch>
	</branch>
	<branch type="default" name="Desktop">
		<define name="isMobile" value="false"/>
		<define name="isBrowser" value="true"/>
		<branch name="Opera">
			<match type="any">
				<pattern type="string">Opera/</pattern>
				<pattern type="string">Opera </pattern>
			</match>
			<define name="BrowserEngine" value="Presto"/>
			<define name="BrowserEngineVersion">
				<pattern type="regex" value="$1">Presto/(&ver3d;)</pattern>
			</define>
			<define name="BrowserName" value="Opera"/>
			<define name="BrowserVersion">
				<pattern type="regex" value="$1">Version/(&ver;)</pattern>
				<pattern type="regex" value="$1">Opera/(&ver;)</pattern>
				<pattern type="regex" value="$1">Opera (&ver;)</pattern>
			</define>

			<define name="isBeta">
				<pattern type="string" value="true">Edition Next</pattern>
			</define>
		</branch>
		<branch name="Gecko">
			<match type="any">
				<pattern type="regex">(?&lt;!like )Gecko</pattern>
				<pattern type="string">Firefox/</pattern>				
				<pattern type="regex">\srv:&ver;;</pattern>
			</match>
			<define name="BrowserEngine" value="Gecko"/>
			<define name="BrowserEngineVersion">
				<pattern type="regex" value="$1">rv:(&ver;)</pattern>
			</define>

			<branch name="Epiphany">
				<match type="any">
					<pattern type="string">Epiphany</pattern>
				</match>
				<define name="BrowserName" value="Epiphany"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Epiphany/(&ver;)</pattern>
				</define>
			</branch>
			
			<branch name="AvantBrowser">
				<match type="any">
					<pattern type="string">Avant Browser</pattern>
				</match>
				<define name="BrowserName" value="AvantBrowser"/>				
			</branch>

			<branch name="Camino">
				<match type="any">
					<pattern type="string">Camino/</pattern>
				</match>
				<define name="BrowserName" value="Camino"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Camino/(&ver3d;)</pattern>
				</define>
			</branch>

			<branch name="Flock">
				<match type="any">
					<pattern type="string">Flock/</pattern>
				</match>
				<define name="BrowserName" value="Flock"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Flock/(&ver;)</pattern>
				</define>
			</branch>

			<branch name="Galeon">
				<match type="any">
					<pattern type="string">Galeon/</pattern>
				</match>
				<define name="BrowserName" value="Galeon"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Galeon/(&ver;)</pattern>
				</define>
			</branch>

			<branch name="K-Meleon">
				<match type="any">
					<pattern type="string">K-Meleon/</pattern>
					<pattern type="regex">K-Meleon &ver;</pattern>
				</match>
				<define name="BrowserName" value="K-Meleon"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">K-Meleon/(&ver;)</pattern>
					<pattern type="regex" value="$1">K-Meleon (&ver;)</pattern>
				</define>
			</branch>

			<branch name="SeaMonkey">
				<match type="any">
					<pattern type="string">SeaMonkey/</pattern>
				</match>
				<define name="BrowserName" value="SeaMonkey"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">SeaMonkey/(&ver2d;)</pattern>
				</define>
			</branch>
			
			<branch name="PaleMoon">
				<match type="any">
					<pattern type="string">PaleMoon/</pattern>
				</match>
				<define name="BrowserName" value="PaleMoon"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">PaleMoon/(&ver2d;)</pattern>
				</define>
			</branch>
			
			<branch name="Netscape">
				<match type="any">
					<pattern type="regex">Netscape[\d]?/</pattern>
				</match>
				<define name="BrowserName" value="Netscape"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Netscape[\d]?/(&ver2d;)</pattern>
				</define>
			</branch>

			<branch name="Firefox">
				<match type="any">
					<pattern type="string">Firefox</pattern>
					<pattern type="string">Namoroka/</pattern>
					<pattern type="string">Shiretoko/</pattern>
					<pattern type="string">Iceweasel/</pattern>
					<pattern type="string">Iceape/</pattern>
					<pattern type="string">GranParadiso/</pattern>					
					<pattern type="string">Minefield/</pattern>
					<pattern type="string">Thunderbird/</pattern>
					<pattern type="string">Firebird/</pattern>
					<pattern type="string">BonEcho/</pattern>
				</match>
				<define name="BrowserName" value="Firefox"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Firefox/(&ver2d;)</pattern>
					<pattern type="regex" value="$1">Namoroka/(&ver2d;)</pattern>
					<pattern type="regex" value="$1">Shiretoko/(&ver2d;)</pattern>
					<pattern type="regex" value="$1">Iceweasel/(&ver2d;)</pattern>
					<pattern type="regex" value="$1">Minefield/(&ver2d;)</pattern>
					<pattern type="regex" value="$1">Thunderbird/(&ver2d;)</pattern>
					<pattern type="regex" value="$1">Firebird/(&ver2d;)</pattern>
					<pattern type="regex" value="$1">GranParadiso/(&ver2d;)</pattern>
					<pattern type="regex" value="$1">Iceape/(&ver2d;)</pattern>
					<pattern type="regex" value="$1">BonEcho/(&ver2d;)</pattern>
				</define>
			</branch>
			
			<branch name="DefaultGecko" type="default">
				<branch name="MozillaSuite">
					<match>
						<pattern type="regex">\srv:0\.[6-9]</pattern>
						<pattern type="regex">\srv:1\.[0-7]</pattern>
					</match>
					<define name="BrowserName">Mozilla</define>
					<define name="BrowserVersion">
						<pattern type="regex" value="$1">\srv:(&ver;)</pattern>
					</define>
				</branch>
				<branch name="FirefoxPre5">
					<match>						
						<pattern type="regex">\srv:1\.[8-9]</pattern>
						<pattern type="regex">\srv:2.</pattern>
					</match>
					<define name="BrowserName">Firefox</define>
					<define name="BrowserVersion">
						<pattern type="regex" value="1.5">rv:1.8.0</pattern>
						<pattern type="regex" value="2.0">rv:1.8</pattern>
						<pattern type="regex" value="3.0">rv:1.9.0</pattern>
						<pattern type="regex" value="3.5">rv:1.9.1</pattern>
						<pattern type="regex" value="3.6">rv:1.9.2</pattern>
						<pattern type="regex" value="3.7">rv:1.9</pattern>
						<pattern type="regex" value="4.0">rv:2.0</pattern>						
					</define>
				</branch>
				<branch name="FirefoxPost5">
					<match>												
						<pattern type="regex">\srv:([5-9]\.|\d\d+\.)</pattern>
					</match>
					<define name="BrowserName">Firefox</define>
					<define name="BrowserVersion">
						<pattern type="regex" value="$1">\srv:(&ver;)</pattern>
					</define>
				</branch>
			</branch>
		</branch>

		<branch name="WebKit">
			<match type="any">
				<pattern type="string">WebKit</pattern>				
			</match>
			<define name="BrowserEngine" value="WebKit"/>
			<define name="BrowserEngineVersion">
				<pattern type="regex" value="$1">WebKit/(&ver;)</pattern>
			</define>
			<branch name="YandexInternet">
				<match type="any">
					<pattern type="string"> YI</pattern>									
				</match>
				<define name="BrowserName" value="YandexInternet"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Chrome/(&ver3d;)</pattern>
				</define>
			</branch>
			
			<branch name="YandexBrowser">
				<match type="any">
					<pattern type="string"> YandexBrowser/</pattern>									
					<pattern type="string"> YaBrowser/</pattern>
				</match>
				<define name="BrowserName" value="YandexBrowser"/>
				<define name="BrowserVersion">					
					<pattern type="regex" value="$1">YaBrowser/(&ver;)</pattern>
					<pattern type="regex" value="$1">Chrome/(&ver3d;)</pattern>
					<pattern type="regex" value="$1">Ya[\w]*Browser/(&ver3d;)</pattern>
				</define>
			</branch>
			
			<branch name="Chromium">
				<match type="any">
					<pattern type="string">Chromium/</pattern>
				</match>
				<define name="BrowserName" value="Chromium"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Chromium/(&ver3d;)</pattern>
				</define>
			</branch>

			<branch name="Flock">
				<match type="any">
					<pattern type="string">Flock/</pattern>
				</match>
				<define name="BrowserName" value="Flock"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Flock/(&ver;)</pattern>
				</define>
			</branch>

			<branch name="Chrome">
				<match type="any">
					<pattern type="string">Chrome/</pattern>
				</match>
				<define name="BrowserName" value="Chrome"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Chrome/(&ver3d;)</pattern>
				</define>
			</branch>
			
			<branch name="Midori">
				<match type="any">
					<pattern type="string">Midori/</pattern>
				</match>
				<define name="BrowserName" value="Midori"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">^Midori/(&ver;)</pattern>
				</define>
			</branch>
			
			<branch name="Epiphany">
				<match type="any">
					<pattern type="string">Epiphany</pattern>
				</match>
				<define name="BrowserName" value="Epiphany"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Epiphany/(&ver;)</pattern>
				</define>
			</branch>
			
			<branch name="QtWeb">
				<match type="any">
					<pattern type="string">QtWeb</pattern>
				</match>
				<define name="BrowserName" value="QtWeb"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">QtWeb Internet Browser/(&ver;)</pattern>
				</define>
			</branch>	
			
			<branch name="QupZilla">
				<match type="any">
					<pattern type="string">QupZilla/</pattern>
				</match>
				<define name="BrowserName" value="QupZilla"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">QupZilla/(&ver;)</pattern>
				</define>
			</branch>			

			<branch name="Arora">
				<match type="any">
					<pattern type="string">Arora</pattern>
				</match>
				<define name="BrowserName" value="Arora"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Arora/(&ver3d;)</pattern>
				</define>
			</branch>

			<branch name="OmniWeb">
				<match type="any">
					<pattern type="string">OmniWeb/</pattern>
				</match>
				<define name="BrowserName" value="OmniWeb"/>
				<define name="BrowserVersion">					
					<pattern type="regex" value="$1">OmniWeb/v(&ver2d;)</pattern>
				</define>
			</branch>

			<branch name="Maxthon">
				<match type="any">
					<pattern type="string">Maxthon/</pattern>
				</match>
				<define name="BrowserName" value="Maxthon"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Maxthon/(&ver2d;)</pattern>
				</define>
			</branch>
			<branch name="Rekonq">
				<match type="any">
					<pattern type="string">rekonq</pattern>
				</match>
				<define name="BrowserName" value="Rekonq"/>
			</branch>
			
			<branch name="LGBrowser">
				<match type="any">
					<pattern type="string">LG Browser/</pattern>
				</match>
				<define name="BrowserName" value="LGBrowser"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">LG Browser/(&ver;)</pattern>
				</define>
			</branch>			
			
			<branch name="AdobeAIR">
				<match type="any">
					<pattern type="regex">Adobe ?AIR</pattern>
				</match>
				<define name="BrowserName" value="AdobeAIR"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">AdobeAIR/(&ver;)</pattern>
				</define>
				<define name="isBrowser" value="false"/>
			</branch>
			
			<branch name="Safari">
				<match type="any">
					<pattern type="string">Safari/</pattern>
				</match>
				<define name="BrowserName" value="Safari"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Version/(&ver2d;)</pattern>
				</define>
				<define name="historySupport">
					<pattern type="regex" value="true">Version/(?:5\.[1-9]|[6-9])</pattern>
				</define>

				<branch name="iCab">
					<match type="any">
						<pattern type="string">iCab</pattern>
					</match>
					<define name="BrowserShell" value="iCab"/>
					<define name="BrowserShellVersion">
						<pattern type="regex" value="$1">iCab/(&ver3d;)</pattern>
					</define>
				</branch>

			</branch>
		</branch>
		<branch name="KHTML">
			<match type="any">
				<pattern type="string">KHTML</pattern>
				<pattern type="string">Konqueror</pattern>
			</match>
			<define name="BrowserEngine" value="KHTML"/>
			<define name="BrowserEngineVersion">
				<pattern type="regex" value="$1">KHTML/(&ver;)</pattern>
			</define>
			<branch name="Konqueror">
				<match type="any">
					<pattern type="string">Konqueror/</pattern>
				</match>
				<define name="BrowserName" value="Konqueror"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Konqueror/(&ver2d;)</pattern>
				</define>
			</branch>
		</branch>

		<branch name="Trident">
			<match type="any">
				<pattern type="string">Trident/</pattern>
				<pattern type="string">Microsoft Office/</pattern>
				<pattern type="regex">MSIE &ver2d;</pattern>				
			</match>
			<define name="BrowserEngine">Trident</define>
			<define name="BrowserEngineVersion">
				<pattern type="regex" value="$1">Trident/(&ver2d;)</pattern>
			</define>
			<define name="BrowserName">MSIE</define>
			<define name="BrowserVersion">
				<pattern type="string" value="8.0">Trident/4.0</pattern>
				<pattern type="regex" value="$1">MSIE (&ver2d;)</pattern>
			</define>			
			<branch name="Maxthon">
				<match type="any">
					<pattern type="string">Maxthon</pattern>
				</match>
				<define name="BrowserShell" value="Maxthon"/>
				<define name="BrowserShellVersion">
					<pattern type="regex" value="$1">Maxthon(?:/|\s)(&ver2d;)</pattern>
				</define>
			</branch>
			<define name="BrowserShell">				
				<pattern type="string" value="GreenBrowser">GreenBrowser</pattern>
				<pattern type="string" value="AvantBrowser">Avant Browser</pattern>				
				<pattern type="string" value="MyIE2">MyIE2</pattern>
				<pattern type="string" value="MyIE">MyIE</pattern>
				<pattern type="string" value="SlimBrowser">SlimBrowser</pattern>				
				<pattern type="string" value="NetCaptor">NetCaptor</pattern>
				<pattern type="string" value="MicrosoftOffice">Microsoft Office</pattern>
			</define>				
		</branch>

		<branch name="TextBased">
			<match type="any">
				<pattern type="string">libwww</pattern>
				<pattern type="string">libcurl</pattern>
				<pattern type="string">Python-urllib</pattern>				
				<pattern type="string">Wget</pattern>
				<pattern type="regex">^PHP/</pattern>
				<pattern type="regex">^Java/</pattern>
				<pattern type="regex">E?Links</pattern>							
			</match>
			<define name="BrowserEngine">
				<pattern type="regex" value="TextBased">E?Links</pattern>
				<pattern type="string" value="TextBased">Lynx</pattern>
			</define>
			<define name="BrowserName">
				<pattern type="string" value="ELinks">ELinks</pattern>
				<pattern type="string" value="Links">Links</pattern>
				<pattern type="string" value="Lynx">Lynx</pattern>			
			</define>
			<define name="isBrowser">
				<pattern type="string" value="false">libcurl</pattern>
				<pattern type="string" value="false">Python-urllib</pattern>				
				<pattern type="string" value="false">Wget</pattern>
				<pattern type="regex" value="false">^PHP/</pattern>
				<pattern type="regex" value="false">^Java/</pattern>
				<pattern type="string" value="false">libwww-perl</pattern>
			</define>
		</branch>

		<branch type="default" name="UnknownEngine">
			<define name="BrowserEngine">Unknown</define>
			<define name="BrowserName">Unknown</define>
			<define name="isBrowser">false</define>
			<branch name="iTunes">
				<match type="any">
					<pattern type="string">iTunes/</pattern>
				</match>
				<define name="BrowserName" value="iTunes"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">iTunes/(&ver2d;)</pattern>
				</define>
			</branch>
			<branch name="NetSurf">
				<match type="any">
					<pattern type="string">NetSurf/</pattern>
				</match>
				<define name="BrowserName" value="NetSurf"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">NetSurf/(&ver2d;)</pattern>
				</define>
				<define name="isBrowser" value="true"/>
			</branch>
			<branch name="UnixNetscape">
				<match type="any">
					<pattern type="regex">Mozilla/4.*X11</pattern>
				</match>
				<define name="BrowserName" value="Netscape"/>
				<define name="BrowserVersion">
					<pattern type="regex" value="$1">Mozilla/(&ver2d;)</pattern>
				</define>
				<define name="isBrowser" value="true"/>
			</branch>
		</branch>

		<branch type="common" name="BrowserToolbars">
			<branch name="YandexBar">
				<match type="any">
					<pattern type="string">YB/</pattern>
				</match>
				<define name="YandexBar" value="true"/>
				<define name="YandexBarVersion">
					<pattern type="regex" value="$1">YB/(&ver;)</pattern>
				</define>
			</branch>

			<branch name="MailRuSputnik">
				<match type="any">
					<pattern type="string">sputnik</pattern>
				</match>
				<define name="MailRuSputnik" value="true"/>
				<define name="MailRuSputnikVersion">
					<pattern type="regex" value="$1.$2">MRSPUTNIK (\d+),\s+(\d+)</pattern>
					<pattern type="regex" value="$1">sputnik (&ver;)</pattern>
				</define>
			</branch>

			<branch name="MailRuAgent">
				<match type="any">
					<pattern type="string">MRA</pattern>
				</match>
				<define name="MailRuAgent" value="true"/>
				<define name="MailRuAgentVersion">
					<pattern type="regex" value="$1">MRA (&ver;)</pattern>
				</define>
			</branch>

			<branch name="GoogleToolBar">
				<match type="any">
					<pattern type="string">GTB</pattern>
					<pattern type="string">GoogleT</pattern>
				</match>
				<define name="GoogleToolBar" value="true"/>
				<define name="GoogleToolBarVersion">
					<pattern type="regex" value="$1">GTB(&ver;)</pattern>
					<pattern type="regex" value="$1">GoogleT(&ver;)</pattern>
				</define>
			</branch>
		</branch>

		<branch type="common" name="DesktopOS">
			<branch name="Windows">
				<match type="any">
					<pattern type="string">Windows</pattern>
					<pattern type="string">Win16</pattern>
					<pattern type="string">WinNT</pattern>
					<pattern type="string">Win9</pattern>
					<pattern type="string">Win32</pattern>
					<pattern type="string">Win64</pattern>

				</match>
				<define name="OSFamily">Windows</define>
				<define name="OSName">
					<pattern type="string" value="Windows 98">Windows 98</pattern>
					<pattern type="string" value="Windows 98">Win98</pattern>
					<pattern type="string" value="Windows 2000">Windows NT 5.0</pattern>
					<pattern type="string" value="Windows 2000">Windows 2000</pattern>
					<pattern type="string" value="Windows XP">Windows NT 5.1</pattern>
					<pattern type="string" value="Windows XP">Windows XP</pattern>
					<pattern type="string" value="Windows Server 2003">Windows NT 5.2</pattern>
					<pattern type="string" value="Windows Vista">Windows NT 6.0</pattern>
					<pattern type="string" value="Windows 7">Windows NT 6.1</pattern>					
					<pattern type="string" value="Windows 8">Windows NT 6.2</pattern>					
					<pattern type="string" value="Windows NT 4.0">Windows NT;</pattern>					
					<pattern type="string" value="Windows NT 4.0">WinNT</pattern>
					<pattern type="string" value="Windows ME">Windows ME</pattern>
					<pattern type="string" value="Windows 95">Windows 95</pattern>
					<pattern type="string" value="Windows 95">Win95</pattern>
					<pattern type="string" value="Windows 3.11">Win16</pattern>
				</define>				
				<define name="OSVersion">
					<pattern type="string" value="4.1.1998">Windows 98</pattern>
					<pattern type="string" value="4.1.1998">Win98</pattern>
					<pattern type="regex" value="$1">Windows NT (&ver;)</pattern>
					<pattern type="string" value="5.0.2195">Windows 2000</pattern>					
					<pattern type="string" value="5.1.2600">Windows XP</pattern>										
					<pattern type="string" value="4.0.1381">Windows NT;</pattern>					
					<pattern type="string" value="4.0.1381">WinNT</pattern>
					<pattern type="string" value="4.90.3000">Windows ME</pattern>
					<pattern type="string" value="4.0.950">Windows 95</pattern>
					<pattern type="string" value="4.0.950">Win95</pattern>
					<pattern type="string" value="3.11">Win16</pattern>					
				</define>				
				<define name="x64">
					<pattern type="string" value="true">WOW64</pattern>
					<pattern type="string" value="true">Win64</pattern>
					<pattern type="string" value="true">x64</pattern>
				</define>
				<define name="isTouch">
					<pattern type="string" value="true">Tablet PC</pattern>					
					<pattern type="string" value="true">Touch</pattern>
				</define>
			</branch>

			<branch name="Unix">
				<match type="any">
					<pattern type="string">OpenBSD</pattern>
					<pattern type="string">NetBSD</pattern>
					<pattern type="string">FreeBSD</pattern>
					<pattern type="string">Linux</pattern>
					<pattern type="string">SunOS</pattern>									
					<pattern type="string">QNX</pattern>
					<pattern type="string">UNIX</pattern>
					<pattern type="string">AIX</pattern>
					<pattern type="string">IRIX</pattern>
					<pattern type="string"> CrOS</pattern>					
					<pattern type="regex">X11[^\d]</pattern>
				</match>
				<define name="OSFamily">
					<pattern type="string" value="OpenBSD">OpenBSD</pattern>
					<pattern type="string" value="Linux">Linux</pattern>					
					<pattern type="string" value="QNX">QNX</pattern>
					<pattern type="string" value="SunOS">SunOS</pattern>
					<pattern type="string" value="FreeBSD">FreeBSD</pattern>
					<pattern type="string" value="NetBSD">NetBSD</pattern>
					<pattern type="string" value="UNIX">UNIX</pattern>
					<pattern type="string" value="AIX">AIX</pattern>
					<pattern type="string" value="IRIX">IRIX</pattern>
					<pattern type="string" value="ChromeOS"> CrOS</pattern>
					<pattern type="string" value="HP-UX">HP-UX</pattern>
					<pattern type="string" value="UnknownNix">X11</pattern>					
				</define>
				<define name="x64">
					<pattern type="string" value="true">x86_64</pattern>
					<pattern type="string" value="true">amd64</pattern>
				</define>
				<branch name="LinuxDistr">
					<match>
						<pattern type="string">Linux</pattern>
					</match>
					<branch name="Ubuntu">
						<match>
							<pattern type="string">Ubuntu</pattern>
						</match>
						<define name="OSName">Ubuntu</define>
						<define name="OSVersion">
							<pattern type="regex" value="$1">Ubuntu/(&ver;)</pattern>
						</define>
					</branch>
					<branch name="Mint">
						<match>
							<pattern type="string">Mint</pattern>
						</match>
						<define name="OSName">Mint</define>
						<define name="OSVersion">
							<pattern type="regex" value="$1">Mint/(&ver;)</pattern>
						</define>
					</branch>
					<branch name="Fedora">
						<match>
							<pattern type="string">Fedora</pattern>
						</match>
						<define name="OSName">Fedora</define>
						<define name="OSVersion">
							<pattern type="regex" value="$1">fc(&ver;)</pattern>
						</define>
					</branch>
					<branch name="Mandriva">
						<match>
							<pattern type="string">Mandriva</pattern>
						</match>
						<define name="OSName">Mandriva</define>
						<define name="OSVersion">
							<pattern type="regex" value="$1">mdv(&ver;)</pattern>
						</define>
					</branch>
					<branch name="RedHat">
						<match>
							<pattern type="string">Red Hat/</pattern>
						</match>
						<define name="OSName">RedHat</define>
						<define name="OSVersion">
							<pattern type="regex" value="$1.$2">el(\d+)_(\d+)</pattern>
							<pattern type="regex" value="$1">el(\d+)</pattern>
						</define>
					</branch>
					<branch name="CentOS">
						<match>
							<pattern type="string">CentOS</pattern>
						</match>
						<define name="OSName">CentOS</define>
						<define name="OSVersion">
							<pattern type="regex" value="$1">el(&ver;)</pattern>
						</define>
					</branch>
					<branch name="ASPLinux">
						<match>
							<pattern type="string">ASPLinux</pattern>
						</match>
						<define name="OSName">ASPLinux</define>
						<define name="OSVersion">
							<pattern type="regex" value="$1">ASPLinux/(&ver3d;)</pattern>
						</define>
					</branch>
					<branch name="OtherDistr" type="default">						
						<define name="OSName">
							<pattern type="string" value="Debian">Debian</pattern>
							<pattern type="string" value="SUSE">SUSE</pattern>
							<pattern type="string" value="Gentoo">Gentoo</pattern>
							<pattern type="string" value="ALTLinux">ALTLinux</pattern>
							<pattern type="string" value="SplashTop">Splashtop</pattern>
						</define>						
					</branch>
				</branch>
			</branch>
			<branch name="MacOS">
				<match type="any">
					<pattern type="string">Macintosh</pattern>
					<pattern type="string">Mac OS X</pattern>
					<pattern type="string">PPC</pattern>
					<pattern type="string">Darwin</pattern>
					<pattern type="string">Mac_PowerPC</pattern>					
				</match>
				<define name="OSFamily">MacOS</define>
				<define name="OSVersion">
					<pattern type="regex" value="$1.$2.$3">Mac OS X (\d+)_(\d+)_(\d+)</pattern>
					<pattern type="regex" value="$1">Mac OS X (&ver;)</pattern>
				</define>
				<define name="OSName">
					<pattern type="regex" value="Mac OS X Tiger">10[_\.]4</pattern>
					<pattern type="regex" value="Mac OS X Leopard">10[_\.]5</pattern>
					<pattern type="regex" value="Mac OS X Snow Leopard">10[_\.]6</pattern>
					<pattern type="regex" value="Mac OS X Lion">10[_\.]7</pattern>
					<pattern type="regex" value="Mac OS X Mountain Lion">10[_\.]8</pattern>
				</define>
			</branch>
			
			<branch name="OS2">
				<match>
					<pattern type="string">OS/2</pattern>					
				</match>
					<define name="OSFamily">OS/2</define>
			</branch>
			
			<branch type="default" name="UnknownOS">
				<define name="OSFamily">Unknown</define>
			</branch>
		</branch>
	</branch>
	<branch type="common" name="Misc">
		<define name="historySupport">
			<pattern type="regex" value="true">MSIE [1-9]\d</pattern>
			<pattern type="regex" value="true">Chrome/(?:[1-9]\d|[5-9])</pattern>
			<pattern type="regex" value="true">Firefox/(?:[1-9]\d|[4-9])</pattern>
			<pattern type="regex" value="true">Opera .* Version/(?:[1-9][2-9]|[2-9][0-9])</pattern>
			<pattern type="regex" value="true">iPhone OS .* Version/[5-9].* Safari/</pattern>
		</define>
		<define name="isRobot">
			<pattern type="string" value="true">baiduspider</pattern>
			<pattern type="string" value="true">bingbot</pattern>
			<pattern type="string" value="true">googlebot</pattern>
			<pattern type="string" value="true">google web preview</pattern>
			<pattern type="string" value="true">mediapartners-google</pattern>
			<pattern type="string" value="true">msnbot</pattern>
			<pattern type="string" value="true">yahoo! slurp</pattern>
			<pattern type="string" value="true">+http://yandex.com/bots</pattern>
			<pattern type="string" value="true">YandexBot</pattern>
			<pattern type="string" value="true">Feedfetcher-Google;</pattern>
			<pattern type="string" value="true">WebAlta</pattern>
			<pattern type="string" value="true">StackRambler</pattern>
			<pattern type="string" value="true">msnbot</pattern>
			<pattern type="string" value="true">bingbot</pattern>
			<pattern type="string" value="true">Aport</pattern>
			<pattern type="string" value="true">Mail.Ru/</pattern>
			<pattern type="string" value="true">Yandex/</pattern>
			<pattern type="string" value="true">Statbox/</pattern>
			<pattern type="string" value="true">YandexSomething/</pattern>
			<pattern type="string" value="true">YandexBlog/</pattern>
			<pattern type="string" value="true">Yandex.Server/</pattern>
			<pattern type="string" value="true">YaDirectBot</pattern>
			<pattern type="string" value="true">Jakarta Commons-HttpClient/</pattern>
			<pattern type="string" value="true">TurtleScanner</pattern>
			<pattern type="string" value="true">Novoteka</pattern>
			<pattern type="string" value="true">ia_archiver</pattern>
			<pattern type="string" value="true">heritrix</pattern>
			<pattern type="string" value="true">Twiceler-</pattern>
			<pattern type="string" value="true">psbot/</pattern>
			<pattern type="string" value="true">Alchemy Eye Agent</pattern>
			<pattern type="string" value="true">Echoping/</pattern>
			<pattern type="string" value="true">Friends/</pattern>
			<pattern type="string" value="true">WhatsUp</pattern>			
			<pattern type="string" value="true">; HttpSatPinger)</pattern>
			<pattern type="string" value="true">MSRBOT (http://research.microsoft.com/research/sv/msrbot/</pattern>
			<pattern type="string" value="true">MJ12bot/</pattern>
			<pattern type="string" value="true">ichiro/</pattern>
			<pattern type="string" value="true">TECOMAC-Crawler/</pattern>
			<pattern type="string" value="true">Gigabot</pattern>
			<pattern type="string" value="true">Sogou Push Spider</pattern>
			<pattern type="string" value="true">check_http/</pattern>
			<pattern type="string" value="true">http_ping</pattern>
			<pattern type="string" value="true">KeepAliveClient</pattern>
			<pattern type="string" value="true">SamSunf</pattern>
			<pattern type="string" value="true">GenHash</pattern>
			<pattern type="string" value="true">IRLbot</pattern>
			<pattern type="string" value="true">UptimeInspector</pattern>
			<pattern type="string" value="true">liveinternet spider</pattern>
			<pattern type="string" value="true">Begun Robot Crawler</pattern>
			<pattern type="string" value="true">InternetSeer.com</pattern>
			<pattern type="string" value="true">Refer.Ru Favicon Bot</pattern>
			<pattern type="string" value="true">Robot Semonitor</pattern>
			<pattern type="string" value="true">Robot PagePromoter</pattern>
			<pattern type="string" value="true">SESpider</pattern>
			<pattern type="string" value="true">Jakarta Commons-HttpClient</pattern>
			<pattern type="string" value="true">Parasite Eliminator</pattern>
			<pattern type="string" value="true">Spinn3r</pattern>			
			<pattern type="string" value="true">YandexImages/</pattern>
			<pattern type="string" value="true">YandexVideo/</pattern>
			<pattern type="string" value="true">YandexMedia/</pattern>
			<pattern type="string" value="true">YandexBlogs/</pattern>
			<pattern type="string" value="true">YandexFavicons/</pattern>
			<pattern type="string" value="true">YandexAddurl/</pattern>
			<pattern type="string" value="true">YandexImageResizer/</pattern>
			<pattern type="string" value="true">YandexDirect/</pattern>
			<pattern type="string" value="true">YandexMetrika/</pattern>
			<pattern type="string" value="true">YandexNews/</pattern>
			<pattern type="string" value="true">YandexCatalog/</pattern>
			<pattern type="string" value="true">YandexWebmaster/</pattern>
		</define>
	</branch>
</rules>
