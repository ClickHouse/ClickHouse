' ' -> String = ' '. AST: ' '
'Hello' -> String = 'Hello'. AST: 'Hello'
'Hello, world' -> String = 'Hello, world'. AST: 'Hello, world'
'World' -> String = 'World'. AST: 'World'
0.5 -> Float64 = 0.5. AST: 0.5
1 -> UInt8 = 1. AST: 1
20 -> UInt8 = 20. AST: 20
[1, -1, 0.1] -> Array(Float64) = [1., -1., 0.1]. AST: [1, -1, 0.1]
concat('Hello', ' ', 'World') -> String = 'Hello World'. AST: concat('Hello', ' ', 'World') AS world
count() -> UInt64. AST: count()
e -> Float64 = 2.718281828459045. AST: e() AS e
e() -> Float64 = 2.718281828459045. AST: e() AS e
pi() -> Float64 = 3.141592653589793. AST: pi()
plus(e, pi()) -> Float64 = 5.859874482048838. AST: e + pi()
quantileTiming(0.5)(1) -> Float32. AST: quantileTiming(0.5)(1)
rand() -> UInt32. AST: rand()
sleep(1) -> UInt8. AST: sleep(1)
sum(e) -> Float64. AST: sum(e)
system.numbers.number -> UInt64. AST: system.numbers.number
toFixedString('Hello, world', 20) -> FixedString(20) = 'Hello, world\0\0\0\0\0\0\0\0'. AST: toFixedString('Hello, world', 20)
tuple('Hello', 1) -> Tuple(String, UInt8) = ('Hello', 1). AST: ('Hello', 1)
tupleElement(tuple('Hello', 1), 1) -> String = 'Hello'. AST: ('Hello', 1).1

t.x -> UInt8 = 1. AST: t.x

x -> UInt8 = 1. AST: x

1 -> UInt8 = 1. AST: 1
t.x -> UInt8 = 1. AST: t.x
x -> UInt8 = 1. AST: x

x -> Tuple(UInt8, UInt8) = (1, 2). AST: x
y -> Tuple(UInt8, UInt8) = (3, 4). AST: y
z -> String = 'Hello, world'. AST: z
