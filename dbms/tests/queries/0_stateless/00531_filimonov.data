SELECT toNullable(CAST('\0' AS Nullable(String)));
SELECT assumeNotNull(CAST('\0' AS Nullable(String)));
SELECT tan(NULL);
SELECT sin(NULL);
SELECT lgamma(NULL);
SELECT erfc(NULL);
SELECT erf(NULL);
SELECT sqrt(NULL);
SELECT log10(NULL);
SELECT tgamma(NULL);
SELECT exp10(NULL);
SELECT exp2(NULL);
SELECT exp(NULL);
SELECT decodeURLComponent(NULL);
SELECT cutFragment(NULL);
SELECT cutQueryString(NULL);
SELECT cutWWW(NULL);
SELECT cutToFirstSignificantSubdomain(NULL);
SELECT queryStringAndFragment(NULL);
SELECT queryString(NULL);
SELECT firstSignificantSubdomain(NULL);
SELECT domainWithoutWWW(NULL);
SELECT domain(NULL);
SELECT cbrt(NULL);
SELECT reverse(NULL);
SELECT lowerUTF8(NULL);
SELECT lower(NULL);
SELECT lengthUTF8(NULL);
SELECT notEmpty(CAST('\0' AS Nullable(FixedString(1))));
SELECT notEmpty(NULL);
SELECT trunc(NULL);
SELECT floor(NULL);
SELECT round(NULL);
SELECT roundAge(NULL);
SELECT roundDuration(NULL);
SELECT reinterpretAsDateTime(NULL);
SELECT reinterpretAsDate(NULL);
SELECT reinterpretAsFloat64(NULL);
SELECT reinterpretAsFloat32(NULL);
SELECT reinterpretAsInt32(NULL);
SELECT upperUTF8(NULL);
SELECT reinterpretAsInt8(NULL);
SELECT reinterpretAsUInt64(NULL);
SELECT reinterpretAsUInt32(NULL);
SELECT reinterpretAsUInt16(NULL);
SELECT randConstant(CAST( 0  AS Nullable(Int8)));
SELECT randConstant(CAST( 0  AS Nullable(Int16)));
SELECT randConstant(CAST( 0  AS Nullable(Int32)));
SELECT randConstant(CAST( 0  AS Nullable(Int64)));
SELECT randConstant(CAST( 0  AS Nullable(UInt8)));
SELECT randConstant(CAST( 0  AS Nullable(UInt16)));
SELECT randConstant(CAST( 0  AS Nullable(UInt32)));
SELECT randConstant(CAST( 0  AS Nullable(UInt64)));
SELECT randConstant(CAST( 0  AS Nullable(Float32)));
SELECT randConstant(CAST( 0  AS Nullable(Float64)));
SELECT randConstant(CAST( 0  AS Nullable(Date)));
SELECT randConstant(CAST( 0  AS Nullable(DateTime)));
SELECT randConstant(CAST(  '0' AS Nullable(Enum8('0' = 0, 'z' = 1))));
SELECT randConstant(CAST('\0' AS Nullable(String)));
SELECT randConstant(CAST('\0' AS Nullable(FixedString(1))));
SELECT randConstant(CAST(NULL AS Nullable(Int8)));
SELECT randConstant(CAST(NULL AS Nullable(Int16)));
SELECT randConstant(CAST(NULL AS Nullable(Int32)));
SELECT randConstant(CAST(NULL AS Nullable(Int64)));
SELECT randConstant(CAST(NULL AS Nullable(UInt8)));
SELECT randConstant(CAST(NULL AS Nullable(UInt16)));
SELECT randConstant(CAST(NULL AS Nullable(UInt32)));
SELECT randConstant(CAST(NULL AS Nullable(UInt64)));
SELECT randConstant(CAST(NULL AS Nullable(Float32)));
SELECT randConstant(CAST(NULL AS Nullable(Float64)));
SELECT randConstant(CAST(NULL AS Nullable(Date)));
SELECT randConstant(CAST(NULL AS Nullable(DateTime)));
SELECT randConstant(CAST(NULL AS Nullable(Enum8('0' = 0, 'z' = 1))));
SELECT randConstant(CAST(NULL AS Nullable(String)));
SELECT isInfinite(NULL);
SELECT isNaN(NULL);
SELECT isFinite(NULL);
SELECT length(CAST('\0' AS Nullable(FixedString(1))));
SELECT length(NULL);
SELECT identity(CAST( 0  AS Nullable(Int8)));
SELECT identity(CAST( 0  AS Nullable(Int16)));
SELECT identity(CAST( 0  AS Nullable(Int32)));
SELECT identity(CAST( 0  AS Nullable(Int64)));
SELECT identity(CAST( 0  AS Nullable(UInt8)));
SELECT identity(CAST( 0  AS Nullable(UInt16)));
SELECT identity(CAST( 0  AS Nullable(UInt32)));
SELECT identity(CAST( 0  AS Nullable(UInt64)));
SELECT identity(CAST( 0  AS Nullable(Float32)));
SELECT identity(CAST( 0  AS Nullable(Float64)));
SELECT identity(CAST( 0  AS Nullable(Date)));
SELECT identity(CAST( 0  AS Nullable(DateTime)));
SELECT identity(CAST(  '0' AS Nullable(Enum8('0' = 0, 'z' = 1))));
SELECT identity(CAST('\0' AS Nullable(String)));
SELECT identity(CAST('\0' AS Nullable(FixedString(1))));
SELECT identity(CAST(NULL AS Nullable(Int8)));
SELECT identity(CAST(NULL AS Nullable(Int16)));
SELECT identity(CAST(NULL AS Nullable(Int32)));
SELECT identity(CAST(NULL AS Nullable(Int64)));
SELECT identity(CAST(NULL AS Nullable(UInt8)));
SELECT identity(CAST(NULL AS Nullable(UInt16)));
SELECT identity(CAST(NULL AS Nullable(UInt32)));
SELECT identity(CAST(NULL AS Nullable(UInt64)));
SELECT identity(CAST(NULL AS Nullable(Float32)));
SELECT identity(CAST(NULL AS Nullable(Float64)));
SELECT identity(CAST(NULL AS Nullable(Date)));
SELECT identity(CAST(NULL AS Nullable(DateTime)));
SELECT identity(CAST(NULL AS Nullable(Enum8('0' = 0, 'z' = 1))));
SELECT identity(CAST(NULL AS Nullable(String)));
SELECT substring(NULL);
SELECT empty(CAST('\0' AS Nullable(FixedString(1))));
SELECT empty(NULL);
SELECT fragment(NULL);
SELECT ceil(NULL);
SELECT URLHash(NULL);
SELECT not(NULL);
SELECT intHash64(NULL);
SELECT toUInt8OrZero(NULL);
SELECT toRelativeSecondNum(NULL);
SELECT toFloat32(NULL);
SELECT toUInt64(NULL);
SELECT ceiling(NULL);
SELECT toStartOfMinute(NULL);
SELECT toUInt32(NULL);
SELECT cutQueryStringAndFragment(NULL);
SELECT toUInt8(NULL);
SELECT UUIDStringToNum(NULL);
SELECT upper(NULL);
SELECT roundToExp2(NULL);
SELECT cos(NULL);
SELECT UUIDNumToString(NULL);
SELECT log2(NULL);
SELECT toTime(NULL);
SELECT path(NULL);
SELECT toUInt16(NULL);
SELECT IPv4StringToNum(NULL);
SELECT reinterpretAsString(NULL);
SELECT IPv4NumToStringClassC(NULL);
SELECT toHour(NULL);
SELECT MACNumToString(NULL);
SELECT toInt64(NULL);
SELECT log(NULL);
SELECT toStringCutToZero(NULL);
SELECT toYYYYMMDDhhmmss(NULL);
SELECT toSecond(NULL);
SELECT SHA224(NULL);
SELECT MACStringToOUI(NULL);
SELECT toUInt64OrZero(NULL);
SELECT toDayOfMonth(NULL);
SELECT IPv4NumToString(NULL);
SELECT bar(NULL);
SELECT toDayOfWeek(NULL);
SELECT reinterpretAsInt64(NULL);
SELECT bitNot(NULL);
SELECT IPv6NumToString(NULL);
SELECT reinterpretAsUInt8(NULL);
SELECT toStartOfYear(NULL);
SELECT arrayConcat(NULL);
SELECT toDate(NULL);
SELECT reverseUTF8(NULL);
SELECT toStartOfQuarter(NULL);
SELECT toYYYYMMDD(NULL);
SELECT abs(NULL);
SELECT negate(NULL);
SELECT bitmaskToArray(NULL);
SELECT toDateTime(NULL);
SELECT toFloat64(NULL);
SELECT unhex(NULL);
SELECT toInt32(NULL);
SELECT topLevelDomain(NULL);
SELECT truncate(NULL);
SELECT toRelativeMinuteNum(NULL);
SELECT IPv4ToIPv6(NULL);
SELECT sipHash64(NULL);
SELECT protocol(NULL);
SELECT toInt16OrZero(NULL);
SELECT formatReadableSize(NULL);
SELECT concatAssumeInjective(NULL);
SELECT toString(NULL);
SELECT MACStringToNum(NULL);
SELECT toUnixTimestamp(NULL);
SELECT reinterpretAsInt16(NULL);
SELECT toInt16(NULL);
SELECT toUInt32OrZero(NULL);
SELECT toInt8OrZero(NULL);
SELECT toStartOfMonth(NULL);
SELECT toInt32OrZero(NULL);
SELECT pathFull(NULL);
SELECT toInt64OrZero(NULL);
SELECT toFloat32OrZero(NULL);
SELECT toFloat64OrZero(NULL);
SELECT atan(NULL);
SELECT toYear(NULL);
SELECT IPv6StringToNum(NULL);
SELECT toMonth(NULL);
SELECT concat(NULL);
SELECT toMinute(NULL);
SELECT toStartOfDay(NULL);
SELECT toMonday(NULL);
SELECT toUInt16OrZero(NULL);
SELECT toStartOfFiveMinute(NULL);
SELECT halfMD5(NULL);
SELECT toStartOfHour(NULL);
SELECT toRelativeYearNum(NULL);
SELECT toRelativeMonthNum(NULL);
SELECT toRelativeWeekNum(NULL);
SELECT toRelativeDayNum(NULL);
SELECT toRelativeHourNum(NULL);
SELECT farmHash64(CAST( 0  AS Nullable(Int8)));
SELECT farmHash64(CAST( 0  AS Nullable(Int16)));
SELECT farmHash64(CAST( 0  AS Nullable(Int32)));
SELECT farmHash64(CAST( 0  AS Nullable(Int64)));
SELECT farmHash64(CAST( 0  AS Nullable(UInt8)));
SELECT farmHash64(CAST( 0  AS Nullable(UInt16)));
SELECT farmHash64(CAST( 0  AS Nullable(UInt32)));
SELECT farmHash64(CAST( 0  AS Nullable(UInt64)));
SELECT farmHash64(CAST( 0  AS Nullable(Float32)));
SELECT farmHash64(CAST( 0  AS Nullable(Float64)));
SELECT farmHash64(CAST( 0  AS Nullable(Date)));
SELECT farmHash64(CAST( 0  AS Nullable(DateTime)));
SELECT farmHash64(CAST(  '0' AS Nullable(Enum8('0' = 0, 'z' = 1))));
SELECT farmHash64(CAST('\0' AS Nullable(String)));
SELECT farmHash64(CAST('\0' AS Nullable(FixedString(1))));
SELECT farmHash64(CAST(NULL AS Nullable(Int8)));
SELECT farmHash64(CAST(NULL AS Nullable(Int16)));
SELECT farmHash64(CAST(NULL AS Nullable(Int32)));
SELECT farmHash64(CAST(NULL AS Nullable(Int64)));
SELECT farmHash64(CAST(NULL AS Nullable(UInt8)));
SELECT farmHash64(CAST(NULL AS Nullable(UInt16)));
SELECT farmHash64(CAST(NULL AS Nullable(UInt32)));
SELECT farmHash64(CAST(NULL AS Nullable(UInt64)));
SELECT farmHash64(CAST(NULL AS Nullable(Float32)));
SELECT farmHash64(CAST(NULL AS Nullable(Float64)));
SELECT farmHash64(CAST(NULL AS Nullable(Date)));
SELECT farmHash64(CAST(NULL AS Nullable(DateTime)));
SELECT farmHash64(CAST(NULL AS Nullable(Enum8('0' = 0, 'z' = 1))));
SELECT farmHash64(CAST(NULL AS Nullable(String)));
SELECT timeSlot(NULL);
SELECT hex(NULL);
SELECT toYYYYMM(NULL);
SELECT toInt8(NULL);
SELECT metroHash64(CAST( 0  AS Nullable(Int8)));
SELECT metroHash64(CAST( 0  AS Nullable(Int16)));
SELECT metroHash64(CAST( 0  AS Nullable(Int32)));
SELECT metroHash64(CAST( 0  AS Nullable(Int64)));
SELECT metroHash64(CAST( 0  AS Nullable(UInt8)));
SELECT metroHash64(CAST( 0  AS Nullable(UInt16)));
SELECT metroHash64(CAST( 0  AS Nullable(UInt32)));
SELECT metroHash64(CAST( 0  AS Nullable(UInt64)));
SELECT metroHash64(CAST( 0  AS Nullable(Float32)));
SELECT metroHash64(CAST( 0  AS Nullable(Float64)));
SELECT metroHash64(CAST( 0  AS Nullable(Date)));
SELECT metroHash64(CAST( 0  AS Nullable(DateTime)));
SELECT metroHash64(CAST(  '0' AS Nullable(Enum8('0' = 0, 'z' = 1))));
SELECT metroHash64(CAST('\0' AS Nullable(String)));
SELECT metroHash64(CAST('\0' AS Nullable(FixedString(1))));
SELECT metroHash64(CAST(NULL AS Nullable(Int8)));
SELECT metroHash64(CAST(NULL AS Nullable(Int16)));
SELECT metroHash64(CAST(NULL AS Nullable(Int32)));
SELECT metroHash64(CAST(NULL AS Nullable(Int64)));
SELECT metroHash64(CAST(NULL AS Nullable(UInt8)));
SELECT metroHash64(CAST(NULL AS Nullable(UInt16)));
SELECT metroHash64(CAST(NULL AS Nullable(UInt32)));
SELECT metroHash64(CAST(NULL AS Nullable(UInt64)));
SELECT metroHash64(CAST(NULL AS Nullable(Float32)));
SELECT metroHash64(CAST(NULL AS Nullable(Float64)));
SELECT metroHash64(CAST(NULL AS Nullable(Date)));
SELECT metroHash64(CAST(NULL AS Nullable(DateTime)));
SELECT metroHash64(CAST(NULL AS Nullable(Enum8('0' = 0, 'z' = 1))));
SELECT metroHash64(CAST(NULL AS Nullable(String)));
SELECT acos(NULL);
SELECT toUUID(NULL);
SELECT runningDifference(CAST( 0  AS Nullable(Int8)));
SELECT runningDifference(CAST( 0  AS Nullable(Int16)));
SELECT runningDifference(CAST( 0  AS Nullable(Int32)));
SELECT runningDifference(CAST( 0  AS Nullable(Int64)));
SELECT runningDifference(CAST( 0  AS Nullable(UInt8)));
SELECT runningDifference(CAST( 0  AS Nullable(UInt16)));
SELECT runningDifference(CAST( 0  AS Nullable(UInt32)));
SELECT runningDifference(CAST( 0  AS Nullable(UInt64)));
SELECT runningDifference(CAST( 0  AS Nullable(Float32)));
SELECT runningDifference(CAST( 0  AS Nullable(Float64)));
SELECT runningDifference(CAST( 0  AS Nullable(Date)));
SELECT runningDifference(CAST( 0  AS Nullable(DateTime)));
SELECT runningDifference(CAST(NULL AS Nullable(Int8)));
SELECT runningDifference(CAST(NULL AS Nullable(Int16)));
SELECT runningDifference(CAST(NULL AS Nullable(Int32)));
SELECT runningDifference(CAST(NULL AS Nullable(Int64)));
SELECT runningDifference(CAST(NULL AS Nullable(UInt8)));
SELECT runningDifference(CAST(NULL AS Nullable(UInt16)));
SELECT runningDifference(CAST(NULL AS Nullable(UInt32)));
SELECT runningDifference(CAST(NULL AS Nullable(UInt64)));
SELECT runningDifference(CAST(NULL AS Nullable(Float32)));
SELECT runningDifference(CAST(NULL AS Nullable(Float64)));
SELECT runningDifference(CAST(NULL AS Nullable(Date)));
SELECT runningDifference(CAST(NULL AS Nullable(DateTime)));
SELECT bitmaskToList(NULL);
SELECT MD5(NULL);
SELECT SHA256(NULL);
SELECT asin(NULL);
SELECT SHA1(NULL);
SELECT sipHash128(NULL);
SELECT cityHash64(CAST( 0  AS Nullable(Int8)));
SELECT cityHash64(CAST( 0  AS Nullable(Int16)));
SELECT cityHash64(CAST( 0  AS Nullable(Int32)));
SELECT cityHash64(CAST( 0  AS Nullable(Int64)));
SELECT cityHash64(CAST( 0  AS Nullable(UInt8)));
SELECT cityHash64(CAST( 0  AS Nullable(UInt16)));
SELECT cityHash64(CAST( 0  AS Nullable(UInt32)));
SELECT cityHash64(CAST( 0  AS Nullable(UInt64)));
SELECT cityHash64(CAST( 0  AS Nullable(Float32)));
SELECT cityHash64(CAST( 0  AS Nullable(Float64)));
SELECT cityHash64(CAST( 0  AS Nullable(Date)));
SELECT cityHash64(CAST( 0  AS Nullable(DateTime)));
SELECT cityHash64(CAST(  '0' AS Nullable(Enum8('0' = 0, 'z' = 1))));
SELECT cityHash64(CAST('\0' AS Nullable(String)));
SELECT cityHash64(CAST('\0' AS Nullable(FixedString(1))));
SELECT cityHash64(CAST(NULL AS Nullable(Int8)));
SELECT cityHash64(CAST(NULL AS Nullable(Int16)));
SELECT cityHash64(CAST(NULL AS Nullable(Int32)));
SELECT cityHash64(CAST(NULL AS Nullable(Int64)));
SELECT cityHash64(CAST(NULL AS Nullable(UInt8)));
SELECT cityHash64(CAST(NULL AS Nullable(UInt16)));
SELECT cityHash64(CAST(NULL AS Nullable(UInt32)));
SELECT cityHash64(CAST(NULL AS Nullable(UInt64)));
SELECT cityHash64(CAST(NULL AS Nullable(Float32)));
SELECT cityHash64(CAST(NULL AS Nullable(Float64)));
SELECT cityHash64(CAST(NULL AS Nullable(Date)));
SELECT cityHash64(CAST(NULL AS Nullable(DateTime)));
SELECT cityHash64(CAST(NULL AS Nullable(Enum8('0' = 0, 'z' = 1))));
SELECT cityHash64(CAST(NULL AS Nullable(String)));
SELECT intHash32(NULL);
SELECT topK(arrayPopBack([CAST('\0' AS Nullable(FixedString(1)))]));
SELECT topK([ [ [1], [2] ], [ [3], [4]]  ]);
