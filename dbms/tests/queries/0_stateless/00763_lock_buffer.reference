[milovidov-Pro-P30] 2018.11.28 22:08:15.804398 {b382b34d-e62b-4a0a-bb8b-5671b9d82a40} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:15.839436 {12df6433-eab4-4494-8647-1eee0dda68a3} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:15.879572 {8117c51b-d65b-4ec1-b4b7-e9a77407ced2} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:15.886553 {aa40f63b-8632-45a2-bc38-ef891efb1dff} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:15.924566 {f20c3ceb-5efb-4d69-96a0-d8eadf558a77} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:15.930785 {06b4ed5e-9851-4ce5-b545-04af59655729} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:15.967409 {a0a04a9d-5088-47e9-a3de-944a28746862} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:15.973558 {4b580694-b7a4-422e-bb3a-4b185ddf8ae8} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.010300 {9dbfaeff-08e5-47ed-8bbd-d9276446382c} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.016618 {c994f4e5-ac82-49d6-90d2-a9c857a7fe61} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.052850 {1d26d531-2005-4f49-9f66-6962a3ebf796} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.059333 {eb95a219-c505-436b-93b9-ebbaf36ecbb0} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.097461 {6276b2af-ce73-4ac4-826a-a73dc1a3eaf3} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.105200 {0caa94fe-74b6-4471-b9ac-c7d85fe33007} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.143043 {93b81cb5-525b-4e94-86c0-d5919d7608ea} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.150518 {fd8c908a-e0b5-4fb2-b419-bd08c21c3c13} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.190703 {7f788212-7a46-4f3c-acb4-c583b28e9df2} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.197392 {878132f9-5219-4aea-914b-0dbd7b58a764} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.233792 {8d04aba7-9125-467e-8ea6-0e16bc7bf7c6} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.239797 {094bd4d8-0eac-4e84-8b3c-2ea07d3b4916} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.278886 {d599a104-eaeb-4b60-b603-12b65892dc38} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.285176 {69888f58-b324-43f8-80c5-b0b8e6561649} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.324470 {583d7fc9-db34-4550-81ae-6ff31a1d96b8} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.330644 {b518f495-9f63-4b92-aa39-75a24398866b} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.369672 {28378d76-b475-49ee-8908-9be52469e0a1} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.375686 {b0f79188-0e4f-4980-9d1f-78ce9db2f7cf} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.412233 {6fc614df-02d1-4c3a-aff1-f03bc3ef0aaa} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.418180 {54059a5c-7754-4552-b140-c0e4a86ef40e} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.458263 {5fa1e884-db86-451a-80a0-d8274019c10c} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.465598 {b5bec235-c220-4a4b-b5e4-2c57179c2e91} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.502333 {78149d68-ab22-4898-9596-15b207f99ef6} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.509010 {6c533a36-c9fc-4c79-b334-9fdb066d9464} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.547343 {8f4e117f-c957-4955-a7a3-466a3df25a89} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.553354 {acada29b-8541-4054-bb97-bb35e88eab27} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.590795 {89266bb1-4e35-44ec-bf2d-9bc1c26f1a74} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.596932 {7b0f1862-2909-4b1a-b476-e169d65b5dfc} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.634903 {f3449d01-002e-46a5-9bd4-120777f6bfec} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.640730 {fe17c38b-0b23-4615-814f-7903fb2cde0c} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.678091 {8c0bcdbb-ca41-4827-b170-cd933fb8b651} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.683945 {872c146c-d6bd-4cf1-b61d-0e26884097d1} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.719134 {931a96e6-7973-403c-9ba9-951a22711f14} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.725387 {56c9ef93-b51e-49e1-9044-75a8e1adb420} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.761859 {4ab5c13c-b88f-47f0-b95e-0fe36678b000} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.769417 {585d204d-88ea-43f2-bbe3-31caa4626e4b} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.805721 {692534b6-6558-4913-92e1-8aaefe56ed57} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.811425 {e027f56f-f8a1-4b24-8d49-6f4bd5b340ed} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.846068 {610c8387-3df4-424f-9c5e-9d7eb18debae} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.851569 {76a2eb5e-1370-4e12-8715-21750af16bed} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.887480 {86c45297-16ab-473d-b201-e2236e5b6116} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.893490 {9f2e0e03-8363-48b8-8829-d922084ba301} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.929084 {70ef1316-e73c-4ac8-b417-e53dd38722ea} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.936277 {5d2fa797-629c-4568-99b6-0e65ab27be7f} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.972299 {f3a0a47b-2399-4022-9d54-f37af9eff412} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:16.978024 {5a74a293-7e13-41b9-a80d-f5a4e9b2e868} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.016729 {d92291d9-f4fc-4823-bbc6-71785fb5d07c} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.022342 {30486679-6c7f-4877-88b3-f3242d483466} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.060484 {70852fb6-c64c-47e4-b1f4-e8d7f8432522} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.066117 {2fba7d1c-b08c-4a2b-bea4-9d4dd80e4975} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.102132 {c3918e15-7842-4887-bde0-1928a36bda2c} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.107582 {97a724d7-97d7-4466-af61-23e3e34ba601} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.142054 {771188c8-f84f-4463-a559-1583432eba4b} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.147795 {b09b2a35-a72a-4d3e-8d74-f09f57d449db} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.184394 {f982786e-131d-42e5-8214-ae3aab11328d} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.217858 {38f72a08-ecd5-45ab-8899-ff2fbcec0579} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.223712 {742b544a-7c8d-4466-bf15-f9584991e311} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.257521 {5382a35e-3be7-4a30-9b7b-058a8601f264} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.262962 {4bfae50b-e211-4be2-9d76-d0aba72eb2eb} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.301359 {8c2b0b6f-0f3b-4c29-83db-6840b05f2837} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.307158 {a6dc969f-192c-46c2-ab0e-00856a63bcb3} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.343061 {a129bb03-266b-4562-8a6d-00a0e73ee8f1} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.350189 {22e13b6d-958b-4429-980a-9637f0d2f676} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.384017 {ae678170-bcc3-4679-b883-9715af969b78} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.389498 {f82bd3f7-1b76-44bc-af73-7dbaf1c699f0} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.425316 {80c8d353-e8f9-423c-8a24-c3d374bb3145} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.431225 {df4e4518-3853-4528-b159-ecd9eda8ff09} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.465149 {5b535596-a956-43b1-a2f7-2da7c656b5f6} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.470614 {8f63bd16-446a-4fae-8ad7-f7dee705a21a} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.506173 {b833c309-001b-4a29-a16d-9486c6f9cd20} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.511528 {0268a36b-c2ab-4dbc-8382-23964f1259b1} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.544800 {987ed9ac-be0a-4ef6-9171-0f50740ad8db} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.550231 {a3f8b19b-a42e-4e5b-a0f3-914421f11405} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.583151 {75233a53-9450-4cfb-9a2a-791ba27cd2d7} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.588621 {579b7452-06f6-400a-b25b-201d81e8f705} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.626467 {99852f0e-0063-499a-8391-4f8b63a1d455} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.632010 {e8743ea8-ab0e-4f89-bff5-e07ae11c14d1} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.667868 {6240085d-c1fb-4173-b9ea-a8435fe6a445} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.674577 {511fd4e2-d615-4413-a560-889ac496b886} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.709817 {dc2485cd-6028-4cbc-bf9c-7bc17393260e} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.715129 {8c7fba23-6e43-4f9b-ad3e-3d2116eb1e08} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.748908 {e404b337-cd8a-4a35-8d56-750dd327d2be} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.754181 {6291c4ae-3d6e-496d-87f5-eed780a6a2b0} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.788946 {8326522b-1a7d-45ae-ad79-97bf5f44c617} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.794666 {02a7b413-613b-42d8-ab7c-4342f2b6a669} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.829819 {40180165-0671-415a-b3ee-75711f5bcf3b} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.835307 {08e18b86-0925-40ac-a73c-739d3758ffc1} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.871530 {bb1b2073-4709-40ca-aed8-1eb0d5983cab} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.878301 {3630c665-036c-4b70-b9f0-3d99e79e983d} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.913240 {96fda9b7-54f2-4b16-84b8-f551a5ec8abf} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.918661 {555cec54-7d2d-481e-994e-6ec08626cefd} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.952820 {6e9bb6ac-4d91-4fcc-b3cd-f0fc440f50d1} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.958480 {85942327-3b97-475b-9b94-07fdea68e5fa} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.993680 {80aee0e2-7712-4c5e-a919-d9f0f64ca0da} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:17.999245 {cd705bb9-9402-4d61-b05a-d8142209b78d} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.033388 {abaf0831-9199-4cb8-8010-8637caf73715} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.038605 {dfd8a3a0-5e50-4afe-ae4b-d1a2b88383f7} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.073803 {b3737f44-61a2-44b1-9dae-3fff37021d32} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.078988 {573e82f0-3fa6-4ed5-a6bd-9836d4c376d2} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.116072 {8005c879-14fc-4f4d-a65b-cdd8ccb95f02} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.121410 {04cc6056-7e88-425f-b5c0-ccd3f913b128} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.157133 {c0475c4c-86b2-4f77-90ea-e787beff8e79} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.162408 {88849363-2290-4e35-9bfc-4fa059991725} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.195365 {6dacc238-b4e6-4229-a124-5bdce40b2315} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.202200 {ecded22b-1ffa-4a09-9f98-65b60daed8f2} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.239109 {85a22162-577b-436b-8ea5-5dd04b971362} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.244307 {1c5fbc39-87fc-4d1c-b0e9-f151f6e5320d} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.277030 {d88bc3fa-0534-40f9-bd34-7f102702b971} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.282619 {fe704672-05a9-431b-9248-27ba2d50da2b} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.316182 {fe0bcc92-42f2-471c-a54a-99bee226c12c} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.321458 {d2a4cb2d-d450-419f-86eb-fc34543ad4e2} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.354352 {a12c0c42-2a78-48ed-bfd6-9b0c8486b97f} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.359477 {f73fd3f6-ada8-4d16-94b7-d682753e8814} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.392610 {e18daa32-8309-46ca-9b21-89d922f52df9} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.397918 {f518e531-736a-4811-855d-950ba52acd3d} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.431508 {fbf7a0c3-ce49-4b92-8c0f-f68049d04242} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.438271 {f33025eb-42be-4d3c-b7a2-02f47668e987} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.471301 {88aae2db-b56f-4b8b-9545-123c5a22052a} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.476369 {6739091d-fdd5-4a5b-ba7f-16b468222467} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.510199 {ff128f44-605b-49a2-863c-d45c557ab6ef} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.516160 {d1d3b6d0-7e38-473c-8455-e16fb059baae} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.549400 {142da820-42d7-4d60-8f90-a014b8d5978f} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.554544 {d0bf63f6-9458-40fd-96e7-8430634896e7} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.587420 {b7df241e-b337-4a9c-a400-694ece7745ac} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.592825 {d62c459f-a84a-406d-96dc-50615862df94} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.624438 {b1dd3f0a-d2c2-420a-89fe-739caffa972c} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.629489 {a88a9512-0d41-4b74-b010-d316d099fc6c} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.660508 {79e5a325-c92a-41db-9743-eba05c45bfa1} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.665771 {f1cdea6e-d097-4633-a4dc-04542c1f9e01} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.699952 {94144751-cb9c-449b-8090-9cd064d4e10c} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.704897 {85ae60e6-fd10-4abd-b42f-a29208b46b3b} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.735563 {2a6c79f1-3839-46c0-b310-2850b7e23eba} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.740511 {a3aedcd6-49a7-4309-a191-ca698e6a419e} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.771576 {b0932dd8-dce1-4339-9b7d-b8340b1874a0} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.776862 {0e71cf19-2563-48ed-bf66-f15a309f29f5} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.810621 {75dc62a3-8c9f-44e9-b194-233f7819bda8} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.815959 {eee05c7a-05ed-47e6-9032-7ae4cc27c262} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.851936 {f3391943-b4db-4fd2-bcc5-67c522672a2b} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.857406 {1d40ead8-ed6f-4552-9e06-9889cb616e06} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.889979 {5b02c382-5c76-4fc4-b52f-a367dd2a34e2} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.894979 {a4102dba-66e7-4c23-a79f-18372bc18eda} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.928024 {74a886a1-18a0-4da7-8179-b305e14306b4} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.932999 {89679622-084d-422a-a412-8da65ab4a152} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.967572 {c4d1efeb-abb5-4afc-bce9-f0a83ddc52f3} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:18.972741 {ecfef9e5-7656-4440-93d7-6b0de9dc5936} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.005420 {16b6a55c-3f1a-40fe-9197-8ef1fee26ad6} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.010876 {4bf80c2f-f584-4634-a4cb-afd2da5f17f2} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.042372 {3f8516f7-1630-413b-9f1a-c6e10a3489d3} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.047239 {416eff96-a99c-44d1-8a9c-43aea8620633} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.052187 {c8f87f7a-86dc-487d-a2e7-0d345426fba0} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.084790 {4a5ea3c0-1d66-488f-9735-10e35c4fa20c} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.091202 {ec69c65b-8666-4d5d-a9e0-cc5f1f9bc5d7} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.124920 {6e993fe5-d826-4c93-9afb-cf56666d99de} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.129856 {bfc0f2b4-ed16-471b-94d7-a84c1e712700} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.163197 {934d9b62-9279-4e1a-ba5e-dc49b1537c41} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.167999 {ecc36b79-a499-43ed-8d11-d9246353a6a7} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.199826 {41623caa-87c5-4c45-90e5-786eb64927d8} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.204546 {a3a8403a-1db4-4b1a-bcda-b3e6df050b7d} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.235716 {58068b04-dd39-4efc-90c3-472a80c63581} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.242427 {08fe6947-b10c-4d2c-8f66-874867f96e26} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.281260 {998ed272-ce7f-4d73-8e8e-7337b83411e3} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.286139 {0539dbe3-2fa1-42ec-ac7d-a6fc178e08e6} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.318034 {30d2f17f-eb27-445d-aa94-4d1849cd17d4} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.324364 {14205a4d-d99c-4f36-be39-b92fffd1f4d1} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.356909 {0b482022-ef79-49e9-a280-f7654a59b652} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.362271 {f483b92e-e257-4569-9908-be72d6467878} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.395056 {8690f680-f715-47be-8f60-bfc23073ccff} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.401412 {b00ecf03-4094-4d84-a999-e16bd3c955e6} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.439565 {aaf84738-51d9-4664-b0d1-05eab0673069} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.444273 {f5942cd3-9ac8-44f0-bffa-649635c7f846} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.478090 {aed97b0a-37a1-4858-bbfa-431a5e8f7a8a} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.483467 {18de9ba6-96a6-44af-9342-1841e273ad1b} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.515387 {73491b80-9470-464e-ae2a-37dad11887a5} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.520106 {b56c5c49-5af0-4329-b81f-cf0ee0a1807f} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.550740 {c9fac8fd-b266-4612-a231-4e8a9dfc7c09} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.555584 {18f6af96-bcc5-4877-ba87-994492302d83} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.588382 {680e7447-65f1-4a34-b326-18d7eef0ac4d} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.593073 {1c0d3ac2-de89-4fe6-94f5-1c31f68e9ae5} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.625452 {0d8c5081-3a3b-4c0c-842c-04dbcd46796d} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.631467 {943503e7-4311-4ecf-85d6-09103b6301b9} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.662721 {92b83212-21fb-4562-b152-3d83c1984ec2} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.667347 {e9313bf0-74ba-419f-b388-f9f74b916d34} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.697209 {c1ae5516-ce7a-41bc-bc3a-4ed84cbeac31} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.701821 {169682d3-59ee-4315-a69d-d30a63484a2e} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.732723 {dc58c84f-e2a7-487e-8635-f7b90e37e6b0} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.737300 {abb290a9-2475-4f3e-92e7-210f422e6c35} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.768092 {022060f1-46a9-4c06-ab85-eb89228d5ac1} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.772777 {c54a77a3-6bd3-4a1e-a463-8c1617fe1729} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.806728 {622acf90-b971-469e-a275-efaeb127d5fe} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.811228 {3ceaed60-d474-402f-9475-7656e201e555} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.843577 {be73cadf-ddec-4986-a225-bc3bfafd746e} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.848357 {665df9d2-5875-48a7-a342-aff8c1ecd46c} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.880431 {970e148e-5956-4b87-bce7-be4fbfdf1d9f} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.885736 {27463163-3b99-4724-b6eb-e4273078d8a9} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.916999 {c1fa3ba7-9304-41f7-975c-907ddd2ce75d} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.921450 {fad8c602-fad8-4247-9454-b36481b728b2} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.951894 {25914ff5-f9dd-4ddc-9a55-175d7d8fef8b} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.956453 {699ef1e1-f156-415d-8622-745b53062cbe} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.987658 {70d63626-1fbb-489c-b6ea-46a0567b17ad} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:19.993569 {722151c3-a9b0-4561-9e3a-1d48f29f6827} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.022976 {abcaa296-89d1-4bbd-9275-1fc453e86068} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.027557 {047ab3ed-352b-4fd1-8f73-3e37e25b050d} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.057591 {6b815328-2da8-4fa3-97f6-73a21c3b01f1} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.062077 {4a971198-7f58-4b99-8a4f-b2daff9f1c6d} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.093527 {226f296a-14a5-4520-b98d-8d5d99140501} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.098204 {41e9d5a9-64bc-48fd-98f0-7e8ffef20278} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.130253 {7455a815-8033-447b-ae19-ecb1473d36c6} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.134640 {8aa61cd8-368e-483b-b982-7051a7ba3837} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.164241 {81d57bd3-b317-4b8b-abc0-cd49f60ddc9d} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.168740 {0c5cda5f-24df-4a42-8dbb-56bf25136c09} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.197977 {6daacab3-966e-4f4b-8542-b8d3418224be} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.202256 {f7f90e2c-754e-4177-9dab-3ff27d26e8be} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.238348 {90e90244-0c21-4dd2-9603-f89b2f93ff16} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.242716 {0218e165-2f06-4132-ac45-29a5e8b5d69e} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.271237 {842d61b2-bd50-47cb-96cc-c89d627c4557} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.275480 {89c59a16-4dae-4cc0-800e-f429021fd569} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.304508 {e9d696b9-f85f-4e10-ae42-1cf49574a93a} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.308857 {b358b7af-de26-42d1-965e-6747f20d5710} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.340686 {396f1a07-db15-481b-8f2d-5b7d4c55ec84} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.346514 {d5c89f7e-b0a9-435d-ad26-15825c40f5e5} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.376483 {591e8be1-de5e-4b41-8516-125310d6b9f6} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.381852 {e3e17728-9d29-44e1-a593-1d95a8e9cd19} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.417500 {ecb7eedf-6368-4060-adbb-fba20354f920} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.421741 {18fc2fa7-09ad-44d4-9cc3-50612274d94a} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.451213 {17114c8a-9463-4c70-ac77-c6181520ce84} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.455464 {456a1868-fa09-4c07-8439-d12b7127b458} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.484071 {7ad7609b-d972-4ba0-a960-627c93a9675b} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.488277 {39c90739-32e8-4079-932a-5768c230a0dc} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.517682 {95ddd3f3-5bcd-4265-8089-ae1fa9e7e57c} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.521952 {3d34cd36-35a9-4ac1-a8ba-f09775867824} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.559705 {82746161-fb45-48d8-9095-2180a7cfb97b} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.564957 {c0e15d93-4de6-4a79-9284-e26c451a2bc2} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.610499 {9c89f274-e0be-4f98-ac78-1796725e0cd5} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.616906 {c365e03c-4f7d-49b6-8ca6-05b31ad52b29} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.653925 {5a5dfa1f-452a-4371-9f16-24a40fe48b45} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.659995 {852f83f3-77b3-45cd-8e24-7c5ada6f725a} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.695582 {c13fa2a1-7353-489b-b777-dd7c4a8910f0} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.700837 {ae8aad39-824b-4dc3-ac2d-81890a584686} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.734103 {184bd1e5-3802-4805-8722-71dc244ff1e7} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.738855 {37e36a10-6c38-4eba-bf62-302888a4949a} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.743649 {0320f6a2-9055-4096-9a25-3ecc05537f57} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.748421 {c5e1651d-b24f-472a-9381-c040b15a8785} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.781298 {c58754eb-a630-4cbd-b478-7b6df6731c58} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.786145 {9e2ea8d0-8007-46fe-9708-d9fe722c5947} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.819800 {ed99c5cc-7eef-49a9-9a18-4ff5c44ffb86} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.824973 {37311630-ddae-4b94-9604-1d35f7640a27} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.857977 {3fdacdea-1206-49df-969c-935089fc405e} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.863958 {252d64cb-fba8-4da8-a2c1-2dc2a3a57a71} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.896295 {ad9236ac-2a09-4080-87de-fd0694c88785} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.902358 {d71cf112-dd5a-4a53-96ef-c709137f33cf} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.934575 {9e53f86c-6822-4881-ad36-f7b6bd0c313d} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.940409 {8e9a166f-2e44-417f-94d1-c3583d60f430} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.980619 {c9b7a5a0-d83e-4d2a-a23c-0b52b1e0acdd} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:20.985243 {5cd7aaea-1c9f-4952-bd06-37ff3ca5010c} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.022250 {2a6a2714-898f-4f09-9568-050843a2dc17} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.026802 {79f88e5a-f0ca-44ab-8fac-12483d2a1ea6} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.055087 {b519581a-8619-498e-b12d-35c2956a082f} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.060776 {e64853c7-519e-4bde-91f2-5662658dd35c} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.088767 {e7118161-2398-49e6-a9b7-8c028beefb09} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.093843 {16a7e16a-f3b3-4294-a2c9-49458e9397ce} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.129158 {416bfe21-aa0a-4b8d-af54-d7256a23b199} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.133101 {9700ec2e-1762-4fa0-823c-4e697d6d2f9f} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.167084 {47cff90f-d2b3-46f6-89d9-f8026770bef3} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.171544 {5d448d45-0d28-45a5-a105-6e639c1ffc6d} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.206945 {3a8be4c7-08c3-45ed-a869-28388d209ed3} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.211038 {cb1b6771-8fd5-456c-99ea-dea467509e07} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.239332 {c0f22c53-f251-40d0-922a-f4402204b8dc} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.243419 {cc587e7f-10bc-4a6d-94f0-75d36b341a64} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.272782 {f55a3397-ede3-4d80-9ef5-8f021ff2e1ea} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.277139 {1570d074-e72b-4d71-8843-70880f3dc693} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.312904 {bc878ba3-3864-4fe9-a161-344ea58de8f2} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.316831 {9c6ade4b-6bf0-4a80-8cb3-52d5b411613c} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.360880 {f3f0393d-ca93-465a-8f42-1462e89e2fc3} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.366613 {67b99782-1899-4dfd-b6a2-fdc63f34e497} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.404496 {cc1153af-ef4d-4a28-bf39-a8e931ff94ee} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.408448 {08368686-064c-415a-ac9e-3478dcf99945} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.442690 {569ea309-6dc6-4e65-8034-963cffc86df9} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.447177 {f64c53eb-0f02-439c-9f4c-653a1395fa6d} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.482489 {c1c3a832-f6bc-4b06-8f88-5860583961f2} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.487032 {674931f1-be77-4d43-a1cf-079ab79def0f} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.521585 {96ce195e-30bf-4a3d-8e7f-4771e738fd66} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.525858 {6ee02bca-2ff7-4f17-8e01-eb5e9ff40f46} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.555733 {f90fb44e-609a-4243-bdf1-ca1ba46e70ab} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.560186 {9310b49c-2e6a-4a76-945f-8439896d673b} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.597428 {1a1bcaf8-771f-483a-a2a9-26c3b6389dd2} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.601850 {7ea3d896-be69-438e-8f8b-c47399769250} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.635806 {459e76b3-a659-479d-a893-cdf0ec4c760c} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.641221 {117beeaa-e4a7-40a5-828d-00ccb63100d3} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.670832 {953fe791-17ad-41e2-94d4-6a4d21d6c316} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.675038 {67777efa-3636-48f0-a18c-f1bbb3f7cd5d} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.709370 {5a48eb2a-782c-451d-b80e-5db52dae9547} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.713206 {e72f8682-acef-4ac1-b20d-c7fc80e2e829} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.716976 {48fd92e8-db30-4e3e-a339-07b1f413f3b1} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.745014 {a8938533-738f-4d69-9024-31584f19a8c0} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.749449 {2cb3fa80-9c75-4ee2-af6d-19fd1228deef} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.783188 {f6ec55fc-290e-4b08-8a9d-c701245c2336} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.787876 {547f4674-fd7a-4094-8cc3-05c31d77e0b2} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.822522 {ae378b21-af6b-43a6-a312-94d280aa1d3e} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.826206 {07e57cbf-325a-4c15-b0fb-4f69c5cbc2cf} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.859826 {c5027d5d-0c35-4d77-aff8-ec4ca9bcabae} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.863770 {383ee63a-47be-4745-bd37-04ffaabab9fe} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.892932 {6fae4e99-f838-40aa-97f6-213ae722a8ac} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.897416 {a9bda8c2-3d33-4d56-b0b2-0af63192f968} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.931079 {ba207198-33ff-465b-9db8-398e2002ea56} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.935494 {92d9d25f-9c4a-48b7-b129-771b64699e2e} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.967052 {c442f81f-3674-4b8b-92f0-6be36bb3d916} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:21.970713 {b3953ddb-47d7-4f3f-96a5-25c582665063} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.003257 {57930ed8-fd61-4db2-9297-e075829f0a96} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.007453 {f05f9e22-8b6a-4ced-8037-09728cf5168d} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.039587 {71b7c4ea-bac1-4306-9fee-128babaf2895} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.043201 {5e2e6745-be94-4486-a9df-31e217826d5c} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.074663 {2318b65d-c534-4ef1-a6e1-14d53de61f50} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.078282 {dc2b480e-9e12-42e6-a335-df2563c77b7b} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.081793 {e8a2aaba-ea2f-495a-8c42-59b0d1261e03} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.113369 {6cd7742e-e9bb-4578-a88b-b58f3cc00c45} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.116984 {409adf27-ba86-4aab-b0ce-e31bd00aaf6c} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.147879 {4d8c7357-b35c-4e0a-b71c-13381db4bbfc} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.151655 {fd9aa6a8-67ce-438b-89dc-901c0e8974c1} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.186383 {184ff725-f1b6-4ab1-ab07-d03a4b89c88e} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.190097 {33d4e50c-a721-4e88-9828-1e03b2165ffd} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.224751 {c59dc5cc-3962-403d-92b6-90a5d2d0cf17} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.228239 {3625082e-9a39-47b4-8475-d1dea5d8a9f4} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.231705 {c110320b-7f40-4280-a831-743d58fd3ead} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.260927 {57a49126-2ae2-4d62-8d59-016ad27336f4} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.264474 {68e653d0-838f-4814-bf10-d1a65e24b8f6} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.297853 {6cb0abe9-62a4-4add-b5ca-5d296b0e3479} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.301329 {1c60e3ee-f6a6-4376-8f15-aede2c9dbbd7} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.304826 {4fec22c8-29ef-447b-9092-5ff8b68ef8cc} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.330141 {54afef42-8f7e-4ed5-917c-1dc7e090b415} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.333644 {0241f586-51cd-44e2-a8d6-5fa680edf7bd} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.337019 {6d860f1d-dc87-4f34-8f10-469228394ac9} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.363532 {3d667d64-aacc-4fdd-bacc-dbf61091a4b1} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.367732 {7bfb07f4-654e-4e4a-b095-d1ecb2d38220} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.371268 {1d25d1ed-f480-4497-9c69-a335b3280106} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.404036 {07c1552a-7673-436d-8b6a-57a3fe7a2341} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.407538 {52cf0afb-37f0-4015-aed6-a7217aee7930} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.439175 {1b249ca3-7a79-475b-b7f1-73cb85e51166} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.442568 {b90152f7-7e61-4840-8b6e-34264cc7aa52} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.446038 {167d6b2e-f375-4f09-858c-cf38597299e5} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.471179 {ecef70e6-9ac0-43a5-8d0e-97eb99c19954} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.474501 {810d0e2e-f3c2-4397-bd6b-ea45f793afe6} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.477936 {70cdf0c2-1a75-42bc-ad18-da38edf34050} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.502297 {c5bc8a07-2df2-4460-85de-5ab900e08517} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.505521 {38ec563e-8b76-4538-84d9-0e6eeca66d4e} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.508770 {5f2717be-df8f-4871-87af-b4ec38440007} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.540166 {2ab74fa3-e152-420c-9075-dc3b4aec2e3c} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.543529 {af6e20fb-e2b0-4182-a2b3-b4839abc3ddf} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.547391 {4ef5ff91-0264-4acf-905b-bc3fb69243a3} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.573467 {4dd8834c-fe40-48b4-9c7d-523995a0d675} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.577495 {58acdbc3-2e1e-4833-a824-32db2f9bd3f4} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.580934 {d78de5cd-99f3-4bfb-8fad-b71dd14f154d} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.605796 {dc5b3f9c-b43f-453c-a037-e7bb9d19ee9a} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.609052 {b7ae5542-dba6-43ef-abab-e00399059e5c} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.612499 {be8ede28-54df-468c-b612-d91f30c17807} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.642955 {083740ab-aa80-4f94-8023-eb73472d72c5} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.646944 {eb621a03-4dae-4e0f-baf1-29ce98c8ba7e} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.650230 {f0299548-6254-4d83-9d24-b5c11f8b7421} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.676136 {1fb4a4df-0bd8-4447-b247-866b9daace51} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.679469 {1d60ef94-8041-4b80-a734-2fccf4c06695} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.682835 {86f87c4d-00fe-4a3c-b69e-81e25b8bda72} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.708673 {9f33e957-7c5d-4ace-bda4-866e755d5fee} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.712626 {587b3b9b-bc71-45c5-b5c6-87f32b4944e5} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.716039 {980deada-45ec-4017-a8b4-dcf275ac3dc7} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.741334 {7472d9e5-ec6b-4f5b-a43d-86514852035c} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.745204 {2196a606-cd48-44fc-9fa1-afe1eb322819} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.748456 {7b31c11e-f3bd-422a-b0b7-4e7e29b62f2e} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.779923 {99a855ec-85f3-42b6-8673-1d6c37f604c6} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.783812 {d40b0c66-8548-446c-a6f2-e8f8ade943de} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.787111 {437eceb5-2d4e-4c86-928d-d24d7f1aa863} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.815557 {e78f004c-8d46-4547-90dc-a4300dc737be} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.818804 {fc5be34e-be00-4bbd-986b-8e7cb65a4ec3} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.822552 {4512f33d-4833-441f-97a9-8b254d4bf3e2} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.852604 {91859ba8-d9c8-4d8f-839c-9ff115248b3b} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.855874 {bb5a0059-fb21-43dc-95f4-e584cdae393c} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.859080 {7163fd83-d268-4598-9518-b66a7df1bbae} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.886878 {b83e3cf7-3ea3-4004-bd6c-80ab09e2a83a} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.891245 {97bf6d42-10ed-415b-b06d-8fb08101e891} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.927016 {953f28cb-d0d0-4d5e-a873-15e70bbcb537} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.930995 {792409bb-5d8f-489b-b31c-acdb1f16ea74} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.934174 {f6d79436-9640-4f52-abfc-5194942623a4} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.968763 {828bc1d4-7a36-4d2e-965d-acdeac867afa} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.972760 {d914976f-6de3-4721-8f11-aa73175e3dab} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:22.976011 {45f0bc16-7743-40ad-912d-3aaac7b7078a} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:23.008075 {9c1c97e8-d125-4e8f-84c8-bc722d100a5d} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:23.012461 {73424367-e590-4d5e-8305-99e188abf71a} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:23.015673 {91652558-16fc-4891-a45b-9a7310a942bc} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:23.042437 {c9a9f69d-c3d2-4291-8f91-988e5ae3a341} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:23.046318 {7fd4a8cd-2bf4-4c36-8ed2-001c4412c1cb} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:23.050564 {851144f0-0da6-4a32-8e34-e46e530b3620} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:23.090745 {a0971454-8b1f-4971-9afa-5aa942caffd7} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

[milovidov-Pro-P30] 2018.11.28 22:08:23.095710 {fd284264-56e0-47ee-b66c-623eae90caee} [ 27 ] <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table test.mt doesn't exist., e.what() = DB::Exception (from 127.0.0.1:57420) (in query: SELECT count() FROM test.buffer), Stack trace:

0. ./clickhouse-server(StackTrace::StackTrace()+0x25) [0xb0493d5]
1. ./clickhouse-server(DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)+0x4b) [0xb02972b]
2. ./clickhouse-server(DB::Context::getTableImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Exception*) const+0x458) [0xe92f8c8]
3. ./clickhouse-server(DB::Context::getTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const+0x71) [0xe92f361]
4. ./clickhouse-server(DB::StorageBuffer::getQueryProcessingStage(DB::Context const&) const+0x4c) [0xf094f3c]
5. ./clickhouse-server(DB::InterpreterSelectQuery::executeImpl(DB::InterpreterSelectQuery::Pipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, bool)+0xa5) [0xea86775]
6. ./clickhouse-server(DB::InterpreterSelectQuery::executeWithMultipleStreams()+0x5f) [0xea87fff]
7. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x9a) [0xecc902a]
8. ./clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x4d) [0xecc92bd]
9. ./clickhouse-server() [0xee65008]
10. ./clickhouse-server(DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum)+0x8e) [0xee6484e]
11. ./clickhouse-server(DB::TCPHandler::runImpl()+0x12c3) [0xb0c2313]
12. ./clickhouse-server(DB::TCPHandler::run()+0x1e) [0xb0c6ebe]
13. ./clickhouse-server(Poco::Net::TCPServerConnection::start()+0x18) [0x10abec08]
14. ./clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x267) [0x10abf417]
15. ./clickhouse-server(Poco::PooledThread::run()+0x81) [0x10dfcd91]
16. ./clickhouse-server() [0x10df8959]
17. ./clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x70) [0x10df7980]
18. ./clickhouse-server() [0x10dfa3d4]
19. ./clickhouse-server() [0x10dfa35d]
20. ./clickhouse-server(void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), Poco::ThreadImpl*> >(void*)+0x75) [0x10dfa075]
21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x77fb) [0x7f87222d87fb]
22. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3e) [0x7f8721aa7b5e]

