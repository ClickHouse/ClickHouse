// Bash
cite'about-alias' 362.516
about-alias'common 45.314
aliasgsr='git 18.126
gsr='gitsvn 18.126
svnrebase' 18.126
svndcommit' 18.126
citeabout-plugin 271.887
if[[ 1214.428
[[-n 326.26399999999995
]];then 1042.233
echo"$*" 18.126
curprev 36.252
prevwords 18.126
wordscword 18.126
localw 18.126
forw 18.126
win 18.126
in"$@"; 27.189
"$@";do 27.189
[[$w 18.126
$w= 18.126
="$word" 18.126
"$word"]] 18.126
]]&& 634.403
&&return 145.006
return1 163.13199999999998
[[$(type 45.314
$(type-t 45.314
-tcompopt) 45.314
compopt)= 45.314
="builtin" 45.314
"builtin"]]; 36.252
compopt-o 18.126
-onospace 27.189
if[ 462.20799999999997
${#must_have_one_flag[@]}-ne 18.126
-ne0 54.376999999999995
0]; 45.314
];then 235.63500000000002
COMPREPLY=($(compgen 54.376999999999995
$(compgen-W 90.629
--"$cur") 27.189
"$cur")) 27.189
[["${COMPREPLY[0]}" 18.126
"${COMPREPLY[0]}"== 18.126
]]|| 126.881
compopt+o 18.126
+onospace 18.126
localindex 18.126
[[${index} 18.126
${index}-ge 18.126
-ge0 18.126
0]]; 72.503
[-n 45.314
-n"${ZSH_VERSION}" 18.126
return0; 27.189
${#must_have_one_noun[@]}-ne 18.126
[[${#COMPREPLY[@]} 18.126
${#COMPREPLY[@]}-eq 18.126
-eq0 81.56599999999999
0&& 27.189
-gt0 36.252
declare-F 36.252
>/dev/null&& 18.126
ifdeclare 18.126
&&[[ 99.69200000000001
>/dev/null2>&1 36.252
__pack_debug"${FUNCNAME[0]}: 54.376999999999995
"${FUNCNAME[0]}:c 36.252
cis 36.252
is$c 36.252
$cwords[c] 36.252
words[c]is 36.252
is${words[c]}" 36.252
afterthe 27.189
the= 27.189
"${FUNCNAME[0]}:looking 18.126
lookingfor 18.126
if__pack_contains_word 36.252
__pack_contains_word"${flagname}" 18.126
[[-z 199.38400000000001
-z"${BASH_VERSION}" 18.126
"${BASH_VERSION}"|| 18.126
||"${BASH_VERSINFO[0]}" 18.126
"${BASH_VERSINFO[0]}"-gt 18.126
-gt3 18.126
3]]; 18.126
]; 72.503
;then 280.95
elif[ 45.314
__pack_contains_word"${words[c]}" 45.314
[[$c 36.252
$c-eq 27.189
$cword]]; 18.126
elif__pack_contains_word 27.189
==-* 18.126
-*]]; 27.189
elif[[ 145.006
localcur 27.189
declare-A 18.126
2>/dev/null|| 27.189
||: 18.126
||return 99.69200000000001
complete-o 18.126
-odefault 18.126
-F__start_pack 18.126
__start_packpack 18.126
whileread 18.126
diff--name-only 18.126
|grep 81.56599999999999
||{ 63.440000000000005
about-plugin'load 63.440000000000005
ifyou 54.376999999999995
youare 54.376999999999995
areusing 54.376999999999995
[[-e 18.126
&&source 18.126
if_command_exists 63.440000000000005
then# 18.126
|tr 135.943
aliasuuidl=uuid 18.126
about-plugin'search 18.126
'searchhistory 18.126
historyusing 18.126
usingthe 18.126
alreadyentered' 18.126
[[${SHELLOPTS} 18.126
${SHELLOPTS}=~ 18.126
=~(vi|emacs) 18.126
(vi|emacs)]]; 18.126
function_set_pkg_aliases() 27.189
--rm-i 27.189
#!/usr/bin/envbash 54.376999999999995
(){ 27.189
>/dev/null 18.126
/dev/null2>&1 18.126
mkdir-p 36.252
[["${proto}" 27.189
"${proto}"= 27.189
mount-t 18.126
--verbose-o 18.126
exit1 36.252
[["${BASH_SOURCE[0]}" 18.126
"${BASH_SOURCE[0]}"!= 18.126
!="${0}" 18.126
"${0}"]]; 18.126
export-f 18.126
exit${?} 18.126
setyour 18.126
["$SHORT_TERM_LINE" 18.126
"$SHORT_TERM_LINE"= 18.126
=true 27.189
true] 27.189
]&& 117.818
&&[ 27.189
-gt8 18.126
8] 18.126
&&echo 99.69200000000001
||echo 18.126
citeabout-alias 18.126
forthe 81.56599999999999
aliasvarv="vault 18.126
param'1: 181.258
'1:site 45.314
sitedirectory' 45.314
group'jekyll' 45.314
unsetSITE 45.314
[-z 163.13199999999998
-z"$1" 45.314
"$1"] 90.629
echo"Error: 45.314
"Error:no 45.314
nosite 45.314
sitespecified." 45.314
echo"The 54.376999999999995
"Thesite 45.314
siteis 45.314
isthe 45.314
thename 45.314
nameof 45.314
ofthe 172.19500000000002
thedirectory 45.314
directoryyour 45.314
yourproject 45.314
projectis 45.314
isin." 45.314
forsite 45.314
sitein 45.314
in${SITES[@]} 45.314
["$(basename 45.314
"$(basename$site)" 45.314
$site)"= 45.314
="$1" 45.314
-z"$SITE" 45.314
"$SITE"] 45.314
echo"No 126.881
"Nosuch 45.314
suchsite." 45.314
builtincd 63.440000000000005
cd"$SITE/_posts" 18.126
$POST| 18.126
grep-oE 18.126
|sed 163.13199999999998
>>"$TMPFILE" 45.314
read-p 36.252
anew 208.447
$JEKYLL_FORMATTING= 36.252
="markdown" 18.126
="textile" 18.126
[[$OPTION 54.376999999999995
$OPTION= 54.376999999999995
="Text" 27.189
"Text"]] 27.189
="Quote" 27.189
"Quote"]] 27.189
="Image" 27.189
"Image"]] 27.189
="Audio" 27.189
"Audio"]] 27.189
="Video" 27.189
"Video"]] 27.189
="Link" 27.189
"Link"]] 27.189
-p"Enter 18.126
tr' 27.189
'' 63.440000000000005
echo"---" 18.126
"---">> 18.126
>>$FNAME 235.63500000000002
echo>> 54.376999999999995
[[$JEKYLL_FORMATTING 18.126
[[$POST_TYPE 108.75500000000001
$POST_TYPE= 108.75500000000001
echo"> 18.126
">Quote" 18.126
Quote">> 36.252
echo"&mdash; 18.126
"&mdash;Author" 18.126
Author">> 18.126
echo"<html><audio 18.126
"<html><audiosrc=\"/path/to/audio/file\" 18.126
src=\"/path/to/audio/file\"controls=\"controls\"></audio></html>" 18.126
controls=\"controls\"></audio></html>">> 18.126
echo"<html><video 18.126
"<html><videosrc=\"/path/to/video\" 18.126
src=\"/path/to/video\"controls=\"controls\"></video></html>" 18.126
controls=\"controls\"></video></html>">> 18.126
echo"bq. 18.126
"bq.Quote" 18.126
cd$SITE 27.189
aliasesfor 27.189
list"# 18.126
#List 99.69200000000001
#Generate 18.126
#Show 45.314
install"# 18.126
#Install 54.376999999999995
Installpackage 18.126
#Reinstall 36.252
packagegroup 18.126
#Remove 54.376999999999995
Removepackage 18.126
#Clean 18.126
while[[ 99.69200000000001
"$PWD"!= 18.126
>0 27.189
0)) 18.126
1)) 36.252
return0 117.818
[["$cur" 18.126
"$cur"== 18.126
$cur)); 18.126
"$1"= 45.314
COMPREPLY=(${COMPREPLY[@]}$( 18.126
localIFS=$'\n' 36.252
localcur="${1}" 27.189
COMPREPLY=(${COMPREPLY[@]:-} 45.314
${COMPREPLY[@]:-}$(compgen 45.314
-W"$(tmux 27.189
"$(tmux-q 18.126
2>/dev/null| 45.314
|cut 63.440000000000005
cut-f 18.126
-f1 18.126
1-d 18.126
-d':')" 18.126
':')"-- 18.126
--"${cur}") 45.314
"${cur}")) 45.314
-qlist-sessions 18.126
list-sessions2>/dev/null 18.126
"${cur}"| 18.126
cut-d 36.252
sed-re 18.126
sed-e 54.376999999999995
-e's/:/\\\\:/')" 18.126
locali 18.126
==-f 36.252
for((i=1; 18.126
((i=1;$i<=$COMP_CWORD; 18.126
$i<=$COMP_CWORD;i++)); 18.126
i++));do 18.126
[[${skip_next} 18.126
${skip_next}-eq 18.126
-eq1 45.314
1]]; 18.126
[[${COMP_WORDS[i]} 45.314
${COMP_WORDS[i]}== 36.252
-f]]; 27.189
==-- 18.126
--]]; 18.126
case${cmd} 18.126
case"$prev" 90.629
"$prev"in 90.629
-t)_tmux_complete_session 54.376999999999995
_tmux_complete_session"${cur}" 54.376999999999995
"${cur}";; 108.75500000000001
*)options="-t 18.126
options="-t-d" 18.126
-d";; 18.126
esac;; 90.629
-t)_tmux_complete_client 36.252
_tmux_complete_client"${cur}" 45.314
*)options="-t" 63.440000000000005
options="-t";; 63.440000000000005
options="-d-n 18.126
-n-s 18.126
-s-t 27.189
-t--" 18.126
fi# 18.126
complete-F 18.126
tothe 36.252
theindex 27.189
[[-f 163.13199999999998
echo"Please 54.376999999999995
"Pleasecheck 18.126
checkyour 18.126
yourconfiguration. 18.126
isnot 45.314
nota 27.189
avalid 36.252
validvalue 18.126
valuefor 18.126
thesetting 18.126
[[$("$markdown_bin" 18.126
$("$markdown_bin"<<< 18.126
<<<$'line 18.126
$'line1\n\nline 18.126
1\n\nline2') 18.126
2')== 18.126
==$'<p>line 18.126
2</p>']] 18.126
]];do 90.629
"$1"> 18.126
-z$global_analytics_file 18.126
(function(){ 18.126
=true; 27.189
vars 18.126
s= 18.126
-z$global_disqus_username 27.189
$global_disqus_username]] 18.126
echo'<div 45.314
/** 36.252
** 72.503
*CONFIGURATION 18.126
CONFIGURATIONVARIABLES: 18.126
VARIABLES:EDIT 18.126
EDITBEFORE 18.126
BEFOREPASTING 18.126
PASTINGINTO 18.126
INTOYOUR 18.126
YOURWEBPAGE 18.126
WEBPAGE* 18.126
**/ 36.252
vardisqus_shortname 18.126
disqus_shortname= 18.126
='"'$global_disqus_username'"'; 18.126
'"'$global_disqus_username'"';// 18.126
required:replace 18.126
replaceexample 18.126
examplewith 18.126
withyour 18.126
yourforum 18.126
forumshortname 18.126
*DONT 18.126
DONTEDIT 18.126
EDITBELOW 18.126
BELOWTHIS 18.126
THISLINE 18.126
LINE* 18.126
=document.createElement("script"); 18.126
="text/javascript"; 18.126
="//" 18.126
"//"+ 18.126
+disqus_shortname 18.126
disqus_shortname+ 18.126
poweredby 18.126
$1begin 18.126
$2end 18.126
&&!/<!-- 27.189
end-->/) 18.126
!/<!--text 18.126
textend 18.126
[[! 135.943
!-f 99.69200000000001
echo"Can't 18.126
touse 36.252
&&exit 54.376999999999995
date-r 72.503
-r"${1%%.*}.html" 18.126
[[$2 72.503
$2== 72.503
$EDITOR"$1" 18.126
[[${1##*.} 18.126
${1##*.}== 18.126
==md 63.440000000000005
md]]; 27.189
if(($? 27.189
(($?!= 45.314
!=0)); 27.189
0));then 27.189
echo"Markdown 18.126
"Markdownis 18.126
notworking, 18.126
working,please 18.126
pleaseedit 18.126
editHTML 18.126
HTMLfile 18.126
filedirectly." 18.126
get_html_file_content'text' 27.189
'text''text' 18.126
$EDITOR"$TMPFILE" 18.126
rm"$filename" 27.189
parse_file"$TMPFILE" 27.189
"$TMPFILE""$edit_timestamp" 18.126
#this 18.126
thiscommand 18.126
commandsets 18.126
sets$filename 18.126
$filenameas 18.126
asthe 27.189
thehtml 18.126
htmlprocessed 18.126
processedfile 18.126
md]] 18.126
&&mv 18.126
rm"$TMPFILE" 18.126
touch-t 36.252
-t"$touch_timestamp" 18.126
chmod644 72.503
644"$filename" 27.189
echo"Posted 18.126
"Posted$filename" 18.126
'| 18.126
|sort 45.314
tr'\n' 18.126
'\n'' 18.126
!-z 18.126
$relevant_tags]]; 18.126
relevant_posts="$(posts_with_tags$relevant_tags) 18.126
$relevant_tags)$filename" 18.126
rebuild_tags"$relevant_posts" 18.126
"$relevant_posts""$relevant_tags" 18.126
-z$global_twitter_username 18.126
$global_twitter_username]] 18.126
echo"<meta 45.314
"$1"| 36.252
|head 36.252
#Check 18.126
echo"<p 27.189
"<pid='twitter'><a 18.126
echo"<a 18.126
echo" 190.321
foritem 18.126
itemin 18.126
&&cat 45.314
#Get 18.126
[[$index 27.189
$index== 27.189
==no 27.189
no]]; 18.126
echo'<!-- 27.189
'<!--entry 18.126
begin-->' 18.126
-->'# 27.189
marksthe 18.126
thebeginning 27.189
beginningof 27.189
-z$timestamp 18.126
$timestamp]]; 18.126
echo"<!-- 18.126
"<!--$date_inpost: 18.126
$date_inpost:#$(LC_ALL=$date_locale 18.126
#$(LC_ALL=$date_localedate 18.126
echo-n 163.13199999999998
-n"<div 18.126
"<divclass=\"subtitle\">$(LC_ALL=$date_locale 18.126
class=\"subtitle\">$(LC_ALL=$date_localedate 18.126
echo-e 126.881
textbegin 45.314
thetext 27.189
end-->' 18.126
thepost 27.189
}> 27.189
whileIFS='' 63.440000000000005
IFS=''read 63.440000000000005
read-r 90.629
"$line"| 18.126
-n$convert_filename 18.126
$convert_filename]] 18.126
"$title"| 18.126
|eval 18.126
eval"$convert_filename") 18.126
-n$filename 18.126
$filename]] 18.126
[[$line 18.126
$line== 18.126
-d":" 18.126
":"-f 18.126
>>"$content" 27.189
done< 54.376999999999995
no"$title" 18.126
==-html 18.126
-html]] 18.126
&&fmt=html 18.126
[[$extension 18.126
$extension== 27.189
==html 18.126
html]] 18.126
[[$fmt 36.252
$fmt== 36.252
cat<< 18.126
<<EOF 18.126
EOF>> 18.126
restof 18.126
textfile 18.126
fileis 36.252
blogpost. 18.126
post.The 18.126
Theprocess 18.126
processwill 18.126
willcontinue 18.126
assoon 18.126
asyou 18.126
youexit 18.126
exityour 18.126
keep-this-tag-format,tags-are-optional, 18.126
chmod600 27.189
[[$post_status 18.126
$post_status!= 18.126
&&rm 36.252
#Delete 81.56599999999999
htmlfile, 18.126
$post_status== 18.126
mv"$TMPFILE" 18.126
-n"Creating 18.126
"Creatingan 18.126
anindex 18.126
indexpage 18.126
pagewith 18.126
withall 18.126
allthe 27.189
-f$contentfile 27.189
$contentfile]]; 27.189
-ri; 54.376999999999995
i;do 54.376999999999995
is_boilerplate_file"$i" 54.376999999999995
"$i"&& 54.376999999999995
&&continue 27.189
-n"." 54.376999999999995
"."1>&3 36.252
-r"$i" 54.376999999999995
echo"</ul>" 27.189
echo"<ul>" 18.126
title=$(get_post_title"$i") 18.126
<<(ls 45.314
<(ls-t 45.314
-t./*.html) 45.314
echo"" 63.440000000000005
""1>&3 18.126
echo"<div 45.314
"<divid=\"all_posts\"><a 27.189
id=\"all_posts\"><ahref=\"./$index_file\">$template_archive_index_page</a></div>" 18.126
}3>&1 36.252
3>&1>"$contentfile" 18.126
create_html_page"$contentfile" 36.252
yes"$global_title 27.189
"$global_title&mdash; 27.189
rm"$contentfile" 36.252
fori 45.314
iin 54.376999999999995
in$prefix_tags*.html; 18.126
$prefix_tags*.html;do 18.126
-f"$i" 18.126
"$i"]] 18.126
||break 18.126
nposts=$(grep-c 18.126
-c"<\!-- 18.126
"<\!--text 18.126
begin-->" 18.126
-->""$i") 18.126
-n"Rebuilding 27.189
&&continue; 27.189
((n>= 18.126
-n$cut_do 18.126
$cut_do]]; 18.126
get_html_file_content'entry' 36.252
'entry''entry' 36.252
'entry''cut' 18.126
'cut'<"$i" 18.126
<"$i"| 18.126
|awk 36.252
awk"/$cut_line/ 18.126
"/$cut_line/{ 18.126
{print 27.189
print\"<p 18.126
\"<pclass=\\\"readmore\\\"><a 18.126
class=\\\"readmore\\\"><ahref=\\\"$i\\\">$template_read_more</a></p>\" 18.126
href=\\\"$i\\\">$template_read_more</a></p>\"; 18.126
;next 18.126
next} 18.126
}1" 18.126
'entry'<"$i" 18.126
n=$((n 27.189
n+ 27.189
+1 27.189
$global_feedburner]]; 18.126
&mdash;<a 27.189
sed-n 18.126
(($#< 27.189
1))&& 18.126
set-- 45.314
2>/dev/null 18.126
if(($# 18.126
files=$(ls-t 18.126
$1| 27.189
-n$all_tags 18.126
&>/dev/null 126.881
print}'"$1" 18.126
==-n 18.126
-n]]; 18.126
!=0)) 18.126
0))&& 18.126
"Noposts 18.126
postsyet. 18.126
yet.Use 18.126
Use'bb.sh 18.126
'bb.shpost' 18.126
post'to 18.126
tocreate 18.126
createone" 18.126
one"&& 18.126
-e"$lines" 27.189
"$lines"| 27.189
|column 27.189
column-t 27.189
-t-s 27.189
-s"#" 27.189
ls./*.html 18.126
./*.html&> 18.126
thencp 18.126
else{ 18.126
echo'<meta 18.126
echo"<link 18.126
"<linkrel=\"alternate\" 18.126
rel=\"alternate\"type=\"application/rss+xml\" 18.126
type=\"application/rss+xml\"title=\"$template_subscribe_browser_button\" 18.126
-fmain.css 18.126
main.css]]; 18.126
ln-s 27.189
-t"$timestamp" 18.126
"$timestamp""$i" 18.126
timestamp=$(LC_ALL=Cdate 18.126
orthe 27.189
ofa 18.126
"use 36.252
published.html 18.126
andrebuilds 18.126
rebuildsthe 18.126
theblog" 18.126
use'-n' 18.126
'-n'to 18.126
insteadof 27.189
"list 18.126
listall 18.126
numberof 27.189
ina 18.126
--version>/dev/null 18.126
2>&1; 18.126
date(){ 18.126
[[$1 99.69200000000001
$1== 90.629
commanddate 18.126
date-j 18.126
$1!= 63.440000000000005
&&$1 54.376999999999995
"$@"&& 18.126
==edit 18.126
edit]]; 18.126
||[[ 27.189
"Pleaseenter 18.126
entera 18.126
fileto 18.126
ifls 18.126
&>/dev/null; 27.189
/dev/null;then 27.189
==rebuild 18.126
&&rebuild_tags 18.126
edit"$3" 18.126
[-x 18.126
-x$(which 18.126
-L-C 18.126
-C- 18.126
branch-D' 27.189
commit-v 27.189
thelast 27.189
checkout-b' 18.126
fetch--all 36.252
--all--prune 27.189
fetchorigin 18.126
-v;git 18.126
&&git 45.314
log--graph 27.189
#Git 18.126
if! 54.376999999999995
!_command_exists 36.252
pushorigin 18.126
push--set-upstream 18.126
aliasgrm='git 18.126
shortlog-sn' 18.126
stashpop' 18.126
pop'# 18.126
stashpush' 18.126
stashpush 18.126
push-m' 18.126
case$OSTYPE 54.376999999999995
$OSTYPEin 54.376999999999995
tag-l 36.252
-l| 18.126
Listlast 18.126
lastDocker 27.189
Dockercontainer 36.252
ps-l 18.126
$(dockerps 18.126
-q)'# 18.126
Dockercontainers 27.189
Listall 27.189
allDocker 18.126
Dockerimages 27.189
Deleteall 36.252
aliasdkrmui='docker 18.126
dkrmui='dockerimages 18.126
images-q 18.126
-q-f 18.126
-fdangling=true 18.126
dangling=true| 18.126
|xargs 18.126
dockerrmi' 18.126
rmi'# 18.126
alluntagged 27.189
untaggedDocker 18.126
[! 54.376999999999995
Deletemost 18.126
mostrecent 18.126
recent(i.e., 18.126
(i.e.,last) 18.126
last)Docker 18.126
exec-it 18.126
rm-f 18.126
-it' 18.126
run--rm 36.252
-v$PWD:/cwd 18.126
$PWD:/cwd-w 18.126
-w/cwd 18.126
/cwd' 18.126
--rm-it 18.126
prune-a 18.126
-a-f' 18.126
forbetter 18.126
about-alias'puppet 18.126
update&& 18.126
usingit' 45.314
[[`which 27.189
2>/dev/null`]] 18.126
&&eval 36.252
eval"$(pyenv 18.126
init- 45.314
-bash)" 54.376999999999995
virtualenv-init- 18.126
commandto 45.314
toextract 18.126
local-r 27.189
extract-h 18.126
[$# 36.252
$#-eq 45.314
while[ 27.189
];do 27.189
-f"$1" 27.189
--$1) 18.126
"$1"]; 27.189
case"$1" 27.189
"$1"in 27.189
"$1"-C 45.314
-C"$filedirname/$targetdirname" 45.314
"$filedirname/$targetdirname";; 54.376999999999995
"$1";; 63.440000000000005
"$1""${1:0:-4}" 18.126
"${1:0:-4}";; 18.126
--"$@" 18.126
-selectionclipboard" 18.126
-selectionclipboard 18.126
clipboard-o" 18.126
helperfunctions' 36.252
]]; 145.006
ifcommand 36.252
command-v 54.376999999999995
4]; 18.126
bind-x 18.126
taskabbreviations' 18.126
AWScredentials 36.252
filenot 18.126
[[$# 36.252
1]] 18.126
[["$1" 36.252
-eq2 18.126
2]] 18.126
Showthe 18.126
theAWS 18.126
AWSkeys 18.126
toa 18.126
fromthe 36.252
"${AWS_SHARED_CREDENTIALS_FILE}"| 27.189
tail-n 18.126
-n+${ln} 18.126
+${ln}"${AWS_SHARED_CREDENTIALS_FILE}" 18.126
|egrep 18.126
egrep-m 18.126
tr-d 27.189
foundin 27.189
incredentials 27.189
credentialsfile" 27.189
-n"${p_keys}" 18.126
"${p_keys}"]]; 18.126
echo"Profile 18.126
"Profile$1 18.126
$1not 18.126
notfound 18.126
--${cur}) 18.126
${cur})) 18.126
toexplain 36.252
example'$ 208.447
'$explain 18.126
-o| 18.126
onequoted 18.126
quotedcommand 18.126
["$#" 18.126
"$#"-eq 18.126
curl-Gs 18.126
-Gs"https://www.mankier.com/api/explain/?cols="$(tput 18.126
"https://www.mankier.com/api/explain/?cols="$(tputcols) 18.126
cols)--data-urlencode 18.126
1]; 27.189
echo"explain 18.126
-p-u' 18.126
[["$(uname 18.126
"$(uname-s)" 18.126
'Darwin']] 18.126
;do 27.189
[-r 27.189
&&export 18.126
--depth=02>/dev/null' 18.126
$(fc-ln 18.126
-ln-1)' 18.126
-p' 72.503
-q' 27.189
--no-install-q 18.126
-q-p 36.252
--no-install--ignore-existing 36.252
--ignore-existing' 18.126
--ignore-existing-p 18.126
--ignore-existing-q 27.189
Removethe 27.189
theapplication 63.440000000000005
maintenancemode 18.126
thecurrent 27.189
#Run 18.126
Runthe 18.126
thedatabase 18.126
databasemigrations 18.126
onthe 18.126
anaddon. 36.252
#Publish 36.252
theconfiguration 18.126
configurationand 18.126
andtranslations 18.126
translationsfor 18.126
#Uninstall 27.189
#Set 27.189
Setthe 18.126
#Clear 18.126
#Flush 36.252
thecache 18.126
#Create 253.761
Createa 244.698
amigration 45.314
migrationfor 45.314
databasetable 36.252
cachefile 36.252
filefor 18.126
forfaster 18.126
Installa 18.126
aextension. 27.189
Reinstalla 18.126
Uninstalla 18.126
newevent 18.126
andre-run 18.126
re-runall 18.126
allmigrations 18.126
#Rollback 18.126
amodule. 27.189
allof 27.189
thefailed 27.189
failedqueue 45.314
queuejobs 36.252
jobsdatabase 18.126
Flushall 18.126
afailed 18.126
queuejob 18.126
thequeue 18.126
asa 18.126
routecache 18.126
#Import 18.126
Importthe 18.126
thegiven 18.126
givenmodel 18.126
modelinto 18.126
intothe 27.189
thesearch 18.126
searchindex 18.126
streamsentry 18.126
entrymodels. 18.126
&&function 18.126
{command 18.126
commandmvim 18.126
--remote-tab-silent"$@" 18.126
"$@"|| 18.126
||command 18.126
"$@";} 18.126
commandgvim 18.126
apt-getdist-upgrade 18.126
dist-upgrade-V 18.126
-V&& 18.126
&&sudo 27.189
sudoapt-get 27.189
apt-getautoremove' 18.126
_command_existsgoenv 18.126
-x"$GOENV_ROOT/bin/goenv" 18.126
]]\ 18.126
[[-x 90.629
[$(uname) 45.314
$(uname)= 54.376999999999995
="Darwin" 45.314
"Darwin"]; 27.189
iftype 18.126
$?-eq 18.126
0]] 36.252
group'osx' 63.440000000000005
tellapplication 18.126
[$1 18.126
$1= 18.126
defaultswrite 27.189
writecom.apple.dock 27.189
com.apple.dockno-glass 18.126
no-glass-boolean 18.126
killallDock 27.189
echo"dock-switch 18.126
echo"Sorry, 18.126
"Sorry,this 18.126
thisonly 18.126
onlyworks 27.189
workson 18.126
onMac 18.126
MacOS 36.252
OSX" 27.189
inPreview' 27.189
"${1}"| 18.126
|open 27.189
open-fa 27.189
-fa$PREVIEW 27.189
about'display 18.126
fileand 18.126
inmacOS' 27.189
for(( 18.126
((i 18.126
i= 18.126
=0; 18.126
0;i 18.126
i< 18.126
<${#JVMS[@]}; 18.126
${#JVMS[@]};i++ 18.126
i++)); 18.126
));do 18.126
-f"${JVMS_DIR}/${JVMS[$i]}/Contents/Info.plist" 18.126
"${JVMS_DIR}/${JVMS[$i]}/Contents/Info.plist"]]; 18.126
thedefault 18.126
!"$OPTION" 18.126
"$OPTION"=~ 18.126
=~^[0-9]+$ 18.126
OPTION-ge 18.126
-ge"${#JVMS[@]}" 18.126
"${#JVMS[@]}"]]; 18.126
sudomv 18.126
[[-r 27.189
&&_command_exists 18.126
theselected 18.126
filein 18.126
inthe 18.126
group"fzf" 18.126
param"1: 18.126
-f"${templateSrc}" 18.126
echo"ERROR: 27.189
"ERROR:Template 18.126
needsto 18.126
tobe 18.126
ifgrep 18.126
sudoat 18.126
atthe 18.126
currentor 18.126
theprevious 18.126
previouscommand 18.126
commandby 18.126
byhitting 18.126
hittingthe 18.126
theESC 18.126
ESCkey 18.126
-1| 18.126
-d. 18.126
.&> 18.126
#Compact 18.126
Compactview, 18.126
view,show 18.126
..'# 18.126
#Go 36.252
Goup 27.189
upone 18.126
onedirectory 18.126
about'Converts 18.126
intoan 27.189
aninto 18.126
group'gif' 18.126
filename(s)' 18.126
param'2: 27.189
<num>; 63.440000000000005
;Optional: 126.881
inpixels' 18.126
param'3: 27.189
param'4: 18.126
param'5: 18.126
-d; 18.126
Optional:delete 18.126
deletethe 18.126
theoriginal 18.126
fileif 18.126
ifsucceeded' 18.126
param'6: 18.126
-t; 18.126
Optional:Tag 18.126
Tagthe 18.126
theresult 18.126
resultwith 18.126
withquality 18.126
qualitystamp 18.126
stampfor 18.126
forcomparison 18.126
comparisonuse' 18.126
param'7: 18.126
-f<num> 18.126
Optional:Change 18.126
Changenumber 18.126
offrames 18.126
framesper 18.126
-a<num> 18.126
Optional:Alert 18.126
Alertif 27.189
ifresulting 18.126
resultingfile 18.126
isover 18.126
over<num> 18.126
<num>kilobytes 18.126
kilobytes(default 18.126
(defaultis 18.126
is5000, 18.126
5000,0 18.126
0turns 18.126
turnsoff)' 18.126
Alsocreate 18.126
createa 18.126
'$v2gif 45.314
;[[ 45.314
{echo 54.376999999999995
found!"; 54.376999999999995
;return 54.376999999999995
return2 108.75500000000001
2;} 45.314
-l"width:" 18.126
"width:"-l 18.126
-ldel,delete 18.126
del,delete-l 18.126
-ltag 18.126
-l"fps:" 18.126
"fps:"-l 18.126
-lwebm 18.126
webm-o 18.126
--"$@") 18.126
[$? 27.189
$?-ne 18.126
echo'Terminating...' 18.126
'Terminating...'>&2 18.126
evalset 18.126
--"$args" 18.126
localopt_del_after="" 18.126
localdefaultfps=10 18.126
localfps="" 18.126
localalert=5000 18.126
$#-ge 18.126
-ge1 18.126
shift2 72.503
-z"$*" 18.126
"$*"]]; 18.126
echo"$(tput 90.629
"$(tputsetaf 90.629
setaf1)No 18.126
1)Noinput 18.126
inputfiles 18.126
filesgiven. 18.126
given.Example: 18.126
file[file...] 18.126
[file...][-w 18.126
[-w<max 18.126
<maxwidth 18.126
width(pixels)>] 18.126
$(tputsgr 18.126
sgr0)" 90.629
(usefulfor 18.126
forfile 18.126
file; 18.126
localdel_after=$opt_del_after 18.126
$ffmpeg-loglevel 36.252
-loglevelpanic 36.252
panic-i 36.252
-i"$file" 36.252
"$file"\ 18.126
-c:vlibvpx 18.126
libvpx-crf 18.126
-crf4 18.126
4-threads 18.126
-threads0 18.126
0-an 18.126
-an-b:v 18.126
-auto-alt-ref0 18.126
0\ 18.126
-qualitybest 18.126
-loop0 18.126
fps=$($mediainfo"$file" 18.126
"$file"| 18.126
|sed's/.*: 18.126
's/.*:\([0-9.]\+\) 18.126
\([0-9.]\+\).*/\1/' 18.126
.*/\1/'| 18.126
head-1) 18.126
setaf2)Creating 18.126
2)Creating'$output_file' 18.126
...$(tputsgr 18.126
="true" 27.189
"true"]] 45.314
-r$fps 18.126
$fps-vcodec 18.126
-vcodecpng 18.126
pngv2gif-tmp-%05d.png 18.126
v2gif-tmp-%05d.png&& 18.126
&&\ 18.126
"$output_file"|| 27.189
[[$alert 18.126
$alert-gt 18.126
localout_size=$(wc 18.126
out_size=$(wc--bytes 18.126
--bytes< 18.126
<"$output_file") 18.126
[[$out_size 18.126
$out_size-gt 18.126
-gt$(( 18.126
$((alert 18.126
alert* 18.126
*1000 18.126
1000)) 18.126
))]] 18.126
setaf3)Warning: 36.252
3)Warning:'$output_file' 18.126
'$output_file'is 18.126
is$((out_size/1000))kb.$(tput 18.126
$((out_size/1000))kb.$(tputsgr 18.126
[["$del_after" 36.252
"$del_after"== 18.126
=="true" 18.126
3)Warning:Keeping 18.126
Keeping'$file' 18.126
'$file'even 18.126
eventhough 18.126
though--del 18.126
--delrequested.$(tput 18.126
requested.$(tputsgr 18.126
"$del_after"= 18.126
rm"$file" 18.126
setaf2)Done.$(tput 18.126
2)Done.$(tputsgr 18.126
'$any2webm 18.126
-a'/Applications/Adobe 18.126
-aFinder 18.126
writecom.apple.finder 18.126
com.apple.finderAppleShowAllFiles 18.126
-e'set 18.126
'setvolume 18.126
volumeoutput 18.126
outputmuted 18.126
group'base' 135.943
echo"You 18.126
"Youdon't 18.126
don'thave 18.126
commandinstalled!" 18.126
about'checks 18.126
$file| 18.126
param'if 18.126
ormore 18.126
moredirectories 18.126
'$mkcd 36.252
filesto 18.126
-s/dev/null 18.126
-n"$1" 18.126
du-hd 18.126
-hd1 18.126
du-h 18.126
-h--max-depth=1 18.126
!-e 18.126
&&local 27.189
||local 27.189
cite 512.749
'about-alias' 277.162
about-alias 311.807
abbreviations' 152.439
alias 5245.2880000000005
-f 408.81399999999996
up" 20.787
'common 34.644999999999996
gsr='git 13.857999999999999
svn 41.574
rebase' 27.715999999999998
dcommit' 13.857999999999999
info' 48.503
about-plugin 415.743
pack 20.787
aliases' 97.00699999999999
if 1746.12
[[ 1746.12
-n 526.6080000000001
]]; 866.131
then 1753.049
echo 1877.7720000000002
"$*" 48.503
>> 263.30400000000003
COMPREPLY=() 27.715999999999998
"$@" 97.00699999999999
cur 27.715999999999998
prev 27.715999999999998
words 13.857999999999999
cword 13.857999999999999
local 776.053
w 27.715999999999998
shift 145.51
for 471.17499999999995
in 526.6080000000001
"$@"; 34.644999999999996
do 332.594
$w 13.857999999999999
= 561.253
"$word" 13.857999999999999
]] 879.9889999999999
&& 1060.144
return 478.10400000000004
done 381.09799999999996
1 277.162
__pack_debug 48.503
case 207.871
$cur 27.715999999999998
$(type 34.644999999999996
-t 214.8
compopt) 34.644999999999996
"builtin" 34.644999999999996
compopt 27.715999999999998
-o 103.936
nospace 34.644999999999996
[ 505.82
${#must_have_one_flag[@]} 13.857999999999999
-ne 48.503
0 325.66499999999996
]; 200.942
else 491.96200000000005
COMPREPLY=( 69.28999999999999
$(compgen 69.28999999999999
-W 69.28999999999999
-- 194.013
"$cur") 20.787
) 124.723
"${COMPREPLY[0]}" 13.857999999999999
== 485.033
|| 401.885
+o 13.857999999999999
index 62.361000000000004
flag 13.857999999999999
__pack_index_of_word 13.857999999999999
"${flags_with_completion[@]}" 13.857999999999999
${index} 13.857999999999999
-ge 55.431999999999995
${flags_completion[${index}]} 13.857999999999999
"${ZSH_VERSION}" 13.857999999999999
eval 124.723
0; 34.644999999999996
esac 194.013
"${prev}" 13.857999999999999
!= 180.155
${#must_have_one_noun[@]} 13.857999999999999
${#COMPREPLY[@]} 13.857999999999999
-eq 124.723
-gt 76.22
declare 41.574
-F 62.361000000000004
__custom_func 13.857999999999999
>/dev/null 48.503
__ltrim_colon_completions 13.857999999999999
"$cur" 27.715999999999998
_filedir 13.857999999999999
2>&1 55.431999999999995
-d 131.65200000000002
"${FUNCNAME[0]}: 41.574
c 27.715999999999998
is 270.233
$c 55.431999999999995
words[c] 27.715999999999998
${words[c]}" 27.715999999999998
flagvalue 13.857999999999999
# 1205.654
as 117.794
after 34.644999999999996
the 879.9889999999999
everything 13.857999999999999
but 13.857999999999999
back 27.715999999999998
looking 13.857999999999999
__pack_contains_word 48.503
"${flagname}" 13.857999999999999
must_have_one_flag=() 83.149
commands=() 83.149
-z 304.878
"${BASH_VERSION}" 13.857999999999999
"${BASH_VERSINFO[0]}" 13.857999999999999
3 20.787
] 291.02
; 436.53
elif 187.084
$((c+1)) 13.857999999999999
"true" 41.574
"${words[c]}" 41.574
c=$((c+1)) 27.715999999999998
$cword 13.857999999999999
must_have_one_noun=() 90.078
-* 20.787
__pack_handle_command 20.787
__pack_handle_noun 13.857999999999999
__pack_handle_word 13.857999999999999
command_aliases=() 69.28999999999999
flags=() 76.22
two_word_flags=() 76.22
local_nonpersistent_flags=() 76.22
flags_with_completion=() 76.22
flags_completion=() 76.22
flags+=("--builder=") 13.857999999999999
local_nonpersistent_flags+=("--builder=") 13.857999999999999
flags+=("--buildpack=") 13.857999999999999
local_nonpersistent_flags+=("--buildpack=") 13.857999999999999
flags+=("--clear-cache") 13.857999999999999
local_nonpersistent_flags+=("--clear-cache") 13.857999999999999
flags+=("--env=") 13.857999999999999
two_word_flags+=("-e") 13.857999999999999
local_nonpersistent_flags+=("--env=") 13.857999999999999
flags+=("--env-file=") 13.857999999999999
local_nonpersistent_flags+=("--env-file=") 13.857999999999999
flags+=("--help") 69.28999999999999
flags+=("-h") 69.28999999999999
local_nonpersistent_flags+=("--help") 69.28999999999999
flags+=("--no-pull") 27.715999999999998
local_nonpersistent_flags+=("--no-pull") 27.715999999999998
flags+=("--path=") 13.857999999999999
two_word_flags+=("-p") 13.857999999999999
local_nonpersistent_flags+=("--path=") 13.857999999999999
flags+=("--publish") 20.787
local_nonpersistent_flags+=("--publish") 20.787
flags+=("--run-image=") 20.787
local_nonpersistent_flags+=("--run-image=") 20.787
flags+=("--no-color") 69.28999999999999
flags+=("--quiet") 69.28999999999999
flags+=("-q") 69.28999999999999
flags+=("--timestamps") 69.28999999999999
noun_aliases=() 69.28999999999999
-A 13.857999999999999
2>/dev/null 76.22
: 34.644999999999996
_init_completion 13.857999999999999
-s 90.078
complete 34.644999999999996
default 41.574
__start_pack 13.857999999999999
-e 228.659
config 48.503
exit 173.226
while 180.155
read 124.723
;; 381.09799999999996
*) 90.078
continue 62.361000000000004
$z40 13.857999999999999
delete 48.503
not 110.86500000000001
list_files="git 13.857999999999999
-r 256.375
--name-only 20.787
diff 34.644999999999996
! 194.013
| 692.905
grep 83.149
{ 692.905
break 131.65200000000002
cat 103.936
<<EOF 13.857999999999999
at 34.644999999999996
curl 34.644999999999996
\ 124.723
EOF 41.574
'load 48.503
you 76.22
are 55.431999999999995
using 83.149
and 256.375
completions' 20.787
source 97.00699999999999
_command_exists 117.794
tr 103.936
uuidl=uuid 13.857999999999999
like 13.857999999999999
'search 20.787
history 27.715999999999998
already 34.644999999999996
entered' 13.857999999999999
${SHELLOPTS} 13.857999999999999
=~ 48.503
(vi|emacs) 13.857999999999999
bind 41.574
#!/bin/bash 27.715999999999998
function 381.09799999999996
_set_pkg_aliases() 20.787
get 48.503
describe 20.787
--all-namespaces' 13.857999999999999
run 62.361000000000004
+%s) 20.787
--rm 34.644999999999996
-i 55.431999999999995
--tty 13.857999999999999
_set_pkg_aliases 20.787
#!/usr/bin/env 41.574
bash 62.361000000000004
megamount 20.787
() 152.439
pass 20.787
host 20.787
"${url}" 48.503
"${target}" 34.644999999999996
> 117.794
/dev/null 138.581
true 48.503
mkdir 34.644999999999996
-p 166.297
"${proto}" 20.787
mount 13.857999999999999
--verbose 13.857999999999999
ls 69.28999999999999
"${BASH_SOURCE[0]}" 13.857999999999999
"${0}" 13.857999999999999
export 200.942
"${@}" 13.857999999999999
${?} 13.857999999999999
set 55.431999999999995
your 145.51
title 20.787
with 138.581
"$SHORT_TERM_LINE" 13.857999999999999
8 13.857999999999999
set_xterm_title 13.857999999999999
command 228.659
aliases 27.715999999999998
show 55.431999999999995
plugins' 13.857999999999999
help 41.574
search" 13.857999999999999
enable 27.715999999999998
completion" 20.787
status' 27.715999999999998
add' 34.644999999999996
-m' 41.574
up' 13.857999999999999
cleanup' 20.787
list' 97.00699999999999
delete' 20.787
diff' 13.857999999999999
commit 76.22
editor 13.857999999999999
.' 13.857999999999999
update 27.715999999999998
install' 62.361000000000004
list" 34.644999999999996
varv="vault 13.857999999999999
status" 13.857999999999999
version" 13.857999999999999
login 13.857999999999999
jekyll 27.715999999999998
site' 13.857999999999999
about 270.233
a 505.82
post' 27.715999999999998
param 304.878
'1: 138.581
site 145.51
directory' 34.644999999999996
group 256.375
'jekyll' 34.644999999999996
unset 69.28999999999999
SITE 34.644999999999996
"$1" 367.23900000000003
"Error: 34.644999999999996
no 83.149
specified." 34.644999999999996
"The 41.574
name 34.644999999999996
of 249.446
directory 62.361000000000004
project 34.644999999999996
in." 34.644999999999996
${SITES[@]} 34.644999999999996
"$(basename 34.644999999999996
$site)" 34.644999999999996
SITE=$site 34.644999999999996
"$SITE" 34.644999999999996
"No 97.00699999999999
such 34.644999999999996
site." 34.644999999999996
builtin 48.503
cd 83.149
"$SITE/_posts" 13.857999999999999
* 145.51
$POST 13.857999999999999
-oE 13.857999999999999
"title: 13.857999999999999
sed 145.51
"$TMPFILE" 110.86500000000001
+ 76.22
$TMPFILE 13.857999999999999
post 62.361000000000004
to 450.388
" 297.949
"$JEKYLL_EDITOR" 20.787
"${POSTS[$POST_TO_EDIT]}" 13.857999999999999
new 180.155
loc=0 13.857999999999999
loc=$(($loc+1)) 13.857999999999999
$JEKYLL_FORMATTING 27.715999999999998
"markdown" 13.857999999999999
"textile" 13.857999999999999
select 13.857999999999999
OPTION 27.715999999999998
$OPTION 41.574
"Text" 20.787
"Quote" 20.787
"Image" 20.787
"Audio" 20.787
"Video" 20.787
"Link" 20.787
"Enter 13.857999999999999
' 249.446
touch 34.644999999999996
"---" 13.857999999999999
$FNAME 187.084
%d 13.857999999999999
%Y 13.857999999999999
$POST_TYPE 83.149
"> 13.857999999999999
Quote" 27.715999999999998
"&mdash; 13.857999999999999
Author" 13.857999999999999
"<html><audio 13.857999999999999
src=\"/path/to/audio/file\" 13.857999999999999
controls=\"controls\"></audio></html>" 13.857999999999999
"<html><video 13.857999999999999
src=\"/path/to/video\" 13.857999999999999
controls=\"controls\"></video></html>" 13.857999999999999
"bq. 13.857999999999999
$SITE 20.787
rm 180.155
remote 27.715999999999998
host' 13.857999999999999
artisan 900.776
env' 13.857999999999999
help' 13.857999999999999
serve' 13.857999999999999
List 83.149
packages 20.787
list 76.22
package 83.149
Generate 13.857999999999999
cache 69.28999999999999
Show 48.503
information 20.787
Search 13.857999999999999
dnf 48.503
install" 13.857999999999999
Install 41.574
Reinstall 27.715999999999998
Remove 41.574
clean 34.644999999999996
Clean 13.857999999999999
into 69.28999999999999
environment 27.715999999999998
when 27.715999999999998
typeset 13.857999999999999
home 13.857999999999999
_file 20.787
-a 194.013
$( 20.787
"$PWD" 13.857999999999999
"${_file}" 13.857999999999999
(( 34.644999999999996
)) 62.361000000000004
$(( 20.787
$? 34.644999999999996
_log_warning 34.644999999999996
Please 13.857999999999999
install 34.644999999999996
_tmux_expand 13.857999999999999
compgen 20.787
-P 13.857999999999999
-u 41.574
)); 34.644999999999996
fi; 13.857999999999999
_tmux_filedir 20.787
COMPREPLY=(${COMPREPLY[@]} 13.857999999999999
IFS=$'\n' 27.715999999999998
cur="${1}" 20.787
${COMPREPLY[@]:-} 34.644999999999996
"$(tmux 20.787
-q 97.00699999999999
cut 48.503
':')" 13.857999999999999
"${cur}") 34.644999999999996
list-sessions 13.857999999999999
"${cur}" 97.00699999999999
-re 13.857999999999999
"${session_name}" 13.857999999999999
's/:/\\\\:/')" 13.857999999999999
"${sessions}" 13.857999999999999
i 83.149
cmd 13.857999999999999
cur="${COMP_WORDS[COMP_CWORD]}" 13.857999999999999
prev="${COMP_WORDS[COMP_CWORD-1]}" 13.857999999999999
skip_next=0 13.857999999999999
((i=1; 13.857999999999999
$i<=$COMP_CWORD; 13.857999999999999
i++)); 13.857999999999999
${skip_next} 13.857999999999999
skip_next=0; 13.857999999999999
${COMP_WORDS[i]} 34.644999999999996
skip_next=1 13.857999999999999
break; 20.787
-d' 20.787
${cmd} 13.857999999999999
"$prev" 69.28999999999999
-t) 76.22
_tmux_complete_session 41.574
options="-t 13.857999999999999
-d" 13.857999999999999
_tmux_complete_client 34.644999999999996
options="-t" 48.503
options="-d 13.857999999999999
--" 13.857999999999999
-c 55.431999999999995
-t" 13.857999999999999
fi 41.574
specified 13.857999999999999
"${options}" 13.857999999999999
blog" 20.787
blog 34.644999999999996
more 27.715999999999998
posts" 27.715999999999998
use 76.22
form 13.857999999999999
items 13.857999999999999
this 117.794
please 48.503
URL 20.787
that 20.787
other 13.857999999999999
%Y" 13.857999999999999
[:lower:] 13.857999999999999
Markdown.pl 13.857999999999999
which 13.857999999999999
markdown 55.431999999999995
2>/dev/null) 13.857999999999999
$header_file 13.857999999999999
.header.html 13.857999999999999
"Please 41.574
check 13.857999999999999
configuration. 13.857999999999999
valid 27.715999999999998
value 13.857999999999999
setting 13.857999999999999
$footer_file 13.857999999999999
.footer.html 20.787
$markdown_bin 13.857999999999999
$("$markdown_bin" 13.857999999999999
<<< 34.644999999999996
$'line 13.857999999999999
1\n\nline 13.857999999999999
2') 13.857999999999999
$'<p>line 13.857999999999999
2</p>' 13.857999999999999
$out 13.857999999999999
"$out" 13.857999999999999
$global_analytics_file 13.857999999999999
var 55.431999999999995
_gaq 13.857999999999999
(function() 13.857999999999999
true; 20.787
? 13.857999999999999
s 13.857999999999999
})(); 13.857999999999999
"$global_analytics_file" 13.857999999999999
$global_disqus_username 20.787
'<div 34.644999999999996
type="text/javascript"> 13.857999999999999
/* 27.715999999999998
CONFIGURATION 13.857999999999999
VARIABLES: 13.857999999999999
EDIT 27.715999999999998
BEFORE 13.857999999999999
PASTING 13.857999999999999
INTO 13.857999999999999
YOUR 13.857999999999999
WEBPAGE 13.857999999999999
*/ 27.715999999999998
disqus_shortname 27.715999999999998
'"'$global_disqus_username'"'; 13.857999999999999
required: 13.857999999999999
replace 27.715999999999998
example 235.588
forum 13.857999999999999
shortname 13.857999999999999
DONT 13.857999999999999
BELOW 13.857999999999999
THIS 13.857999999999999
LINE 13.857999999999999
document.createElement("script"); 13.857999999999999
"text/javascript"; 13.857999999999999
"//" 13.857999999999999
view 13.857999999999999
<a 48.503
powered 13.857999999999999
by 55.431999999999995
awk 48.503
$1 194.013
begin 55.431999999999995
/<!-- 13.857999999999999
$2 76.22
end 55.431999999999995
-->/ 13.857999999999999
!/<!-- 20.787
-->/) 20.787
print 41.574
text 76.22
"${1%%.*}.html" 20.787
"Can't 13.857999999999999
edit 90.078
-1 27.715999999999998
date 110.86500000000001
+"$date_format_timestamp") 13.857999999999999
full 20.787
$EDITOR 34.644999999999996
filename=$1 20.787
${1##*.} 13.857999999999999
md 48.503
test_markdown 20.787
(($? 34.644999999999996
0)); 20.787
"Markdown 13.857999999999999
working, 13.857999999999999
HTML 27.715999999999998
file 242.517
directly." 13.857999999999999
"$1") 13.857999999999999
get_post_title 13.857999999999999
get_html_file_content 48.503
'text' 34.644999999999996
"$filename" 76.22
keep 13.857999999999999
parse_file 27.715999999999998
"$edit_timestamp" 13.857999999999999
sets 13.857999999999999
$filename 41.574
html 55.431999999999995
processed 20.787
mv 76.22
"${filename%%.*}.md" 13.857999999999999
"$touch_timestamp" 13.857999999999999
chmod 83.149
644 55.431999999999995
"Posted 13.857999999999999
$filename" 27.715999999999998
'\n' 20.787
sort 48.503
$relevant_tags 13.857999999999999
relevant_posts="$(posts_with_tags 13.857999999999999
$relevant_tags) 13.857999999999999
rebuild_tags 27.715999999999998
"$relevant_posts" 13.857999999999999
"$relevant_tags" 13.857999999999999
$global_twitter_username 13.857999999999999
"<meta 34.644999999999996
/>" 55.431999999999995
-v 138.581
head 34.644999999999996
image 34.644999999999996
$image 13.857999999999999
Check 13.857999999999999
absolute 13.857999999999999
"<p 20.787
id='twitter'><a 13.857999999999999
"<a 20.787
item 20.787
$name 13.857999999999999
( 13.857999999999999
"$index_file" 20.787
"$archive_index" 20.787
"$tags_index" 20.787
"$footer_file" 13.857999999999999
"$header_file" 13.857999999999999
".header.html" 20.787
"$content" 48.503
"$title" 41.574
title, 13.857999999999999
Get 13.857999999999999
$index 20.787
'<!-- 20.787
entry 27.715999999999998
-->' 27.715999999999998
marks 13.857999999999999
beginning 20.787
class=\"ablack\" 13.857999999999999
$timestamp 20.787
"<!-- 13.857999999999999
$date_inpost: 13.857999999999999
#$(LC_ALL=$date_locale 13.857999999999999
-->" 27.715999999999998
"<div 48.503
class=\"subtitle\">$(LC_ALL=$date_locale 13.857999999999999
+"$date_format")" 13.857999999999999
&mdash; 55.431999999999995
content 20.787
} 90.078
IFS='' 48.503
$title 13.857999999999999
title=$(echo 13.857999999999999
"$line" 20.787
$convert_filename 13.857999999999999
"$convert_filename") 13.857999999999999
don't 20.787
$line 13.857999999999999
":" 13.857999999999999
*//' 13.857999999999999
's/, 13.857999999999999
< 103.936
create_html_page 41.574
"$2" 55.431999999999995
"$global_author" 34.644999999999996
fmt=html 20.787
-html 13.857999999999999
exist" 13.857999999999999
delete_includes 20.787
$extension 20.787
on 48.503
$fmt 27.715999999999998
<< 13.857999999999999
rest 13.857999999999999
an 110.86500000000001
post. 13.857999999999999
The 20.787
process 27.715999999999998
will 13.857999999999999
soon 13.857999999999999
keep-this-tag-format, 13.857999999999999
tags-are-optional, 13.857999999999999
600 27.715999999999998
$post_status 27.715999999999998
Delete 69.28999999999999
generated 13.857999999999999
file, 13.857999999999999
any 34.644999999999996
"$html_from_md" 13.857999999999999
entry, 13.857999999999999
open 48.503
d 13.857999999999999
"drafts/" 13.857999999999999
"$draft" 13.857999999999999
draft 13.857999999999999
$filename) 13.857999999999999
"Creating 13.857999999999999
page 20.787
all 166.297
posts 20.787
contentfile=$archive_index.$RANDOM 13.857999999999999
$contentfile 20.787
i; 41.574
is_boilerplate_file 41.574
"$i" 173.226
"." 41.574
1>&3 41.574
"</ul>" 20.787
first 13.857999999999999
header 13.857999999999999
"<ul>" 13.857999999999999
title=$(get_post_title 13.857999999999999
"$i") 34.644999999999996
"<li><a 13.857999999999999
<(ls 34.644999999999996
./*.html) 34.644999999999996
"" 55.431999999999995
id=\"all_posts\"><a 20.787
href=\"./$index_file\">$template_archive_index_page</a></div>" 13.857999999999999
3>&1 27.715999999999998
>"$contentfile" 13.857999999999999
"$contentfile" 69.28999999999999
"$archive_index.tmp" 13.857999999999999
yes 27.715999999999998
"$global_title 20.787
tags 27.715999999999998
contentfile=$tags_index.$RANDOM 13.857999999999999
$prefix_tags*.html; 13.857999999999999
nposts=$(grep 13.857999999999999
"<\!-- 13.857999999999999
tagname=${i#"$prefix_tags"} 13.857999999999999
$nposts 20.787
1) 20.787
"$tags_index.tmp" 13.857999999999999
"Rebuilding 20.787
newindexfile=$index_file.$RANDOM 13.857999999999999
contentfile=$newindexfile.content 13.857999999999999
n=0 20.787
continue; 20.787
((n 13.857999999999999
>= 13.857999999999999
$cut_do 20.787
'entry' 62.361000000000004
'cut' 13.857999999999999
<"$i" 41.574
"/$cut_line/ 13.857999999999999
\"<p 13.857999999999999
class=\\\"readmore\\\"><a 13.857999999999999
href=\\\"$i\\\">$template_read_more</a></p>\" 13.857999999999999
next 13.857999999999999
1" 13.857999999999999
n=$(( 20.787
n 27.715999999999998
$global_feedburner 13.857999999999999
"$newindexfile" 13.857999999999999
(($# 20.787
1)) 13.857999999999999
class="ablack" 20.787
2> 13.857999999999999
files=$(ls 13.857999999999999
tag 69.28999999999999
pages 20.787
$all_tags 13.857999999999999
&> 117.794
"$tmpfile" 13.857999999999999
"$files" 13.857999999999999
print}' 13.857999999999999
0)) 13.857999999999999
yet. 13.857999999999999
Use 27.715999999999998
'bb.sh 13.857999999999999
create 34.644999999999996
one" 13.857999999999999
lines="" 13.857999999999999
lines+=$line\\n 13.857999999999999
"$lines" 20.787
column 20.787
"#" 20.787
2 173.226
./*.html 20.787
+"$date_format_full") 13.857999999999999
type=\"application/rss+xml\" 20.787
max 13.857999999999999
10 13.857999999999999
"$blog_feed" 13.857999999999999
".title.html" 13.857999999999999
cp 34.644999999999996
'<meta 13.857999999999999
/>' 13.857999999999999
printf 20.787
"<link 13.857999999999999
rel=\"alternate\" 13.857999999999999
title=\"$template_subscribe_browser_button\" 13.857999999999999
script 20.787
".footer.html" 13.857999999999999
!important;} 27.715999999999998
0px;} 13.857999999999999
main.css 20.787
ln 20.787
1px 27.715999999999998
12px 13.857999999999999
blockquote 13.857999999999999
}' 13.857999999999999
"$timestamp" 20.787
timestamp=$(LC_ALL=C 13.857999999999999
"$i.rebuilt" 13.857999999999999
"Usage: 13.857999999999999
$0 13.857999999999999
[filename] 20.787
or 110.86500000000001
it 48.503
it's 13.857999999999999
override 13.857999999999999
even 20.787
published 13.857999999999999
.html 20.787
.md 13.857999999999999
manually 13.857999999999999
rebuilds 13.857999999999999
'-n' 13.857999999999999
was 13.857999999999999
instead 20.787
just 13.857999999999999
deletes 13.857999999999999
rebuild 20.787
posts, 13.857999999999999
reset 41.574
up 48.503
number 20.787
write 41.574
I 13.857999999999999
line 20.787
You 13.857999999999999
--version 13.857999999999999
gdate 13.857999999999999
date() 13.857999999999999
-j 13.857999999999999
add 27.715999999999998
file" 41.574
"list" 13.857999999999999
usage 27.715999999999998
enter 13.857999999999999
/dev/null; 20.787
tar 41.574
".backup.tar.gz" 13.857999999999999
.yesterday.tar.gz 20.787
"$3" 13.857999999999999
-x 110.86500000000001
$(which 13.857999999999999
-L 27.715999999999998
-O' 13.857999999999999
-C 55.431999999999995
- 124.723
/dev/null' 13.857999999999999
exec' 13.857999999999999
update' 34.644999999999996
package' 20.787
git 90.078
-p' 13.857999999999999
branch' 13.857999999999999
branch 48.503
-D' 20.787
-a' 34.644999999999996
--track' 20.787
%09 13.857999999999999
-v' 13.857999999999999
HEAD' 20.787
Add 13.857999999999999
last 62.361000000000004
-am' 13.857999999999999
-S 20.787
checkout 41.574
-b' 13.857999999999999
-b 20.787
master' 34.644999999999996
fetch 55.431999999999995
--all 27.715999999999998
--prune 20.787
--verbose' 20.787
origin 34.644999999999996
-v; 13.857999999999999
upstream 13.857999999999999
log 27.715999999999998
--graph 20.787
. 48.503
files 97.00699999999999
Git 13.857999999999999
-1' 13.857999999999999
push' 27.715999999999998
push 76.22
--set-upstream 13.857999999999999
pull' 13.857999999999999
pull 27.715999999999998
grm='git 13.857999999999999
rebase 27.715999999999998
master 20.787
status 20.787
-s' 13.857999999999999
shortlog 13.857999999999999
-sn' 13.857999999999999
show' 20.787
stash 62.361000000000004
pop' 13.857999999999999
switch 20.787
-l' 13.857999999999999
$OSTYPE 41.574
darwin*) 27.715999999999998
-l 152.439
-V' 13.857999999999999
dotfiles" 90.078
destroy" 13.857999999999999
exec 27.715999999999998
help" 13.857999999999999
link 13.857999999999999
editor' 13.857999999999999
linux*) 13.857999999999999
-t' 13.857999999999999
sudo 55.431999999999995
completion 27.715999999999998
bash)" 48.503
ps 34.644999999999996
Docker 90.078
container 41.574
ID 13.857999999999999
$(docker 13.857999999999999
-q)' 13.857999999999999
IP 13.857999999999999
containers 27.715999999999998
images 48.503
dkrmui='docker 13.857999999999999
dangling=true 13.857999999999999
xargs 13.857999999999999
docker 13.857999999999999
rmi' 13.857999999999999
untagged 20.787
"$(command 13.857999999999999
most 13.857999999999999
recent 13.857999999999999
(i.e., 13.857999999999999
last) 13.857999999999999
supplied 13.857999999999999
IDs 13.857999999999999
environmental 13.857999999999999
variables 13.857999999999999
-it 27.715999999999998
commands 27.715999999999998
$PWD:/cwd 13.857999999999999
-w 27.715999999999998
/cwd 13.857999999999999
prune 20.787
-f' 20.787
volume 20.787
system 13.857999999999999
man 27.715999999999998
better 13.857999999999999
'puppet 13.857999999999999
*.pp" 13.857999999999999
agent 13.857999999999999
browser' 13.857999999999999
config' 13.857999999999999
init' 13.857999999999999
outdated' 27.715999999999998
remove' 27.715999999999998
--dev' 13.857999999999999
search' 20.787
self-update' 13.857999999999999
upgrade' 20.787
validate' 20.787
brew 13.857999999999999
uninstall' 20.787
doctor' 13.857999999999999
edit' 13.857999999999999
it' 34.644999999999996
pathmunge 48.503
`which 20.787
pyenv 13.857999999999999
2>/dev/null` 13.857999999999999
"$(pyenv 13.857999999999999
init 34.644999999999996
virtualenv-init 13.857999999999999
global 13.857999999999999
publish' 13.857999999999999
run' 20.787
test' 20.787
check' 13.857999999999999
ls' 13.857999999999999
login' 13.857999999999999
logout' 13.857999999999999
'one 20.787
extract 27.715999999999998
-h 41.574
>&2 27.715999999999998
$# 55.431999999999995
$1) 13.857999999999999
"$filedirname/$targetdirname" 48.503
"${1:0:-4}" 13.857999999999999
gunzip 13.857999999999999
x 13.857999999999999
unzip 13.857999999999999
be 20.787
via 13.857999999999999
-selection 27.715999999999998
clipboard" 13.857999999999999
clipboard 13.857999999999999
-o" 13.857999999999999
helper 27.715999999999998
functions' 34.644999999999996
"after" 13.857999999999999
npm 13.857999999999999
terminal 13.857999999999999
4 27.715999999999998
have 20.787
Bash 20.787
current 41.574
version 13.857999999999999
&' 13.857999999999999
public 20.787
test 20.787
task 13.857999999999999
apps 48.503
create' 20.787
start' 20.787
restart' 27.715999999999998
stop' 20.787
logs' 34.644999999999996
env 55.431999999999995
set' 13.857999999999999
get' 13.857999999999999
view' 13.857999999999999
phx.server' 13.857999999999999
deps.compile' 13.857999999999999
ecto.migrate' 13.857999999999999
awskeys 20.787
AWS 41.574
credentials 69.28999999999999
file' 20.787
"${AWS_SHARED_CREDENTIALS_FILE}" 27.715999999999998
__awskeys_list 13.857999999999999
__awskeys_unset 13.857999999999999
__awskeys_show 13.857999999999999
__awskeys_export 13.857999999999999
__awskeys_help 13.857999999999999
keys 20.787
profile 13.857999999999999
from 69.28999999999999
tail 20.787
+${ln} 13.857999999999999
egrep 13.857999999999999
-m 27.715999999999998
$(echo 13.857999999999999
found 27.715999999999998
"${p_keys}" 20.787
"Profile 13.857999999999999
__awskeys_comp 13.857999999999999
${cur}) 13.857999999999999
explain 55.431999999999995
'$ 159.36800000000002
interactive 13.857999999999999
one 48.503
quoted 13.857999999999999
"$#" 13.857999999999999
-Gs 13.857999999999999
"https://www.mankier.com/api/explain/?cols="$(tput 13.857999999999999
cols) 13.857999999999999
--data-urlencode 13.857999999999999
"explain 13.857999999999999
-u' 13.857999999999999
"$(uname 13.857999999999999
-s)" 13.857999999999999
'Darwin' 20.787
only 27.715999999999998
&>/dev/null 34.644999999999996
"$_comp_path" 13.857999999999999
"Darwin" 41.574
--save' 20.787
--save-dev' 20.787
install-test 13.857999999999999
uninstall 13.857999999999999
--depth=0 13.857999999999999
2>/dev/null' 20.787
$(fc 13.857999999999999
-ln 20.787
-1)' 13.857999999999999
--no-install 55.431999999999995
--ignore-existing 48.503
compiled 20.787
class 97.00699999999999
application 69.28999999999999
maintenance 13.857999999999999
mode 13.857999999999999
framework 13.857999999999999
Run 13.857999999999999
database 55.431999999999995
migrations 27.715999999999998
Optimize 13.857999999999999
addon. 34.644999999999996
Publish 27.715999999999998
configuration 27.715999999999998
translations 13.857999999999999
Uninstall 20.787
Set 27.715999999999998
Clear 13.857999999999999
Flush 27.715999999999998
password 13.857999999999999
Create 194.013
migration 62.361000000000004
table 34.644999999999996
faster 13.857999999999999
records 13.857999999999999
missing 13.857999999999999
registration 20.787
extension. 20.787
key 20.787
routes 13.857999999999999
event 13.857999999999999
model 27.715999999999998
job 27.715999999999998
streams 27.715999999999998
namespace. 13.857999999999999
re-run 13.857999999999999
Rollback 13.857999999999999
each 13.857999999999999
module. 20.787
failed 34.644999999999996
queue 62.361000000000004
jobs 34.644999999999996
given 20.787
their 13.857999999999999
route 20.787
Import 13.857999999999999
search 13.857999999999999
models. 13.857999999999999
mvim 13.857999999999999
--remote-tab-silent 13.857999999999999
gvim 13.857999999999999
apt-get 62.361000000000004
dist-upgrade 13.857999999999999
-V 20.787
autoremove' 13.857999999999999
goenv 13.857999999999999
"$GOENV_ROOT/bin/goenv" 13.857999999999999
"$(goenv 13.857999999999999
version-name)" 13.857999999999999
GOENV_OLD_VERSION 13.857999999999999
snapshot 13.857999999999999
'osx-specific 13.857999999999999
$(uname) 41.574
type 20.787
'osx' 48.503
tell 27.715999999999998
"Terminal" 13.857999999999999
down 13.857999999999999
2d 13.857999999999999
defaults 27.715999999999998
com.apple.dock 20.787
no-glass 13.857999999999999
-boolean 13.857999999999999
killall 20.787
Dock 20.787
"dock-switch 13.857999999999999
"Sorry, 13.857999999999999
works 20.787
Mac 27.715999999999998
OS 27.715999999999998
X" 20.787
pman 13.857999999999999
Preview' 20.787
"${1}" 13.857999999999999
-fa 20.787
$PREVIEW 20.787
pri 13.857999999999999
'display 13.857999999999999
Ruby 13.857999999999999
url' 13.857999999999999
macOS' 20.787
];then 13.857999999999999
${#JVMS[@]}; 13.857999999999999
i++ 13.857999999999999
"${JVMS_DIR}/${JVMS[$i]}/Contents/Info.plist" 20.787
"$OPTION" 13.857999999999999
^[0-9]+$ 13.857999999999999
"${#JVMS[@]}" 13.857999999999999
"${DEFAULT_JVM_DIR}/Contents/Info.plist.disable" 13.857999999999999
/etc/bash_completion 13.857999999999999
/etc/profile.d/bash_completion.sh 13.857999999999999
"$BREW_PREFIX"/etc/profile.d/bash_completion.sh 13.857999999999999
JAR 20.787
MANIFEST 13.857999999999999
fzf 13.857999999999999
~/.fzf.bash 13.857999999999999
"${XDG_CONFIG_HOME:-$HOME/.config}"/fzf/fzf.bash 13.857999999999999
selected 13.857999999999999
"fzf" 13.857999999999999
"1: 13.857999999999999
dir 20.787
-type 13.857999999999999
-print 13.857999999999999
"${templateSrc}" 20.787
"ERROR: 20.787
Template 13.857999999999999
needs 20.787
"${templateDst}" 34.644999999999996
$ENV{$1} 13.857999999999999
templater 13.857999999999999
previous 13.857999999999999
hitting 13.857999999999999
ESC 13.857999999999999
Compact 13.857999999999999
view, 13.857999999999999
hidden 13.857999999999999
..' 13.857999999999999
Go 27.715999999999998
directories 27.715999999999998
gif 20.787
WebM 20.787
v2gif 48.503
'Converts 13.857999999999999
'gif' 13.857999999999999
name(s)' 13.857999999999999
'2: 20.787
<num> 62.361000000000004
Optional: 97.00699999999999
width 27.715999999999998
pixels' 13.857999999999999
'3: 20.787
'4: 13.857999999999999
high 13.857999999999999
quality 34.644999999999996
gifski 13.857999999999999
'5: 13.857999999999999
original 27.715999999999998
succeeded' 13.857999999999999
'6: 13.857999999999999
Tag 13.857999999999999
result 13.857999999999999
stamp 13.857999999999999
comparison 13.857999999999999
use' 13.857999999999999
'7: 13.857999999999999
Change 13.857999999999999
frames 13.857999999999999
per 20.787
(default 20.787
FPS 20.787
mediainfo 13.857999999999999
Alert 20.787
resulting 20.787
over 27.715999999999998
kilobytes 20.787
5000, 13.857999999999999
turns 13.857999999999999
off)' 13.857999999999999
Also 13.857999999999999
found!" 41.574
;} 34.644999999999996
gifsicle 13.857999999999999
"width:" 13.857999999999999
del,delete 13.857999999999999
"fps:" 13.857999999999999
webm 20.787
"$@") 13.857999999999999
'Terminating...' 13.857999999999999
"$args" 13.857999999999999
opt_del_after="" 13.857999999999999
giftag="" 13.857999999999999
defaultfps=10 13.857999999999999
fps="" 13.857999999999999
alert=5000 13.857999999999999
--) 13.857999999999999
-d|--del|--delete) 13.857999999999999
opt_del_after="true" 13.857999999999999
$2" 20.787
-t|--tag) 13.857999999999999
-f|--fps) 13.857999999999999
-a|--alert) 13.857999999999999
alert="$2" 13.857999999999999
"$(tput 69.28999999999999
setaf 69.28999999999999
1)No 13.857999999999999
input 13.857999999999999
given. 13.857999999999999
Example: 13.857999999999999
[file...] 13.857999999999999
[-w 13.857999999999999
<max 13.857999999999999
(pixels)>] 13.857999999999999
$(tput 13.857999999999999
sgr 69.28999999999999
0)" 69.28999999999999
vid 13.857999999999999
N 41.574
output 20.787
(useful 13.857999999999999
del_after=$opt_del_after 13.857999999999999
$ffmpeg 27.715999999999998
-loglevel 27.715999999999998
panic 27.715999999999998
"$file" 62.361000000000004
-c:v 13.857999999999999
libvpx 13.857999999999999
-crf 13.857999999999999
-threads 13.857999999999999
-an 13.857999999999999
-b:v 13.857999999999999
2M 13.857999999999999
-auto-alt-ref 13.857999999999999
-quality 13.857999999999999
best 13.857999999999999
-loop 13.857999999999999
fps=$($mediainfo 13.857999999999999
|sed 13.857999999999999
's/.*: 13.857999999999999
\([0-9.]\+\) 13.857999999999999
.*/\1/' 13.857999999999999
-1) 13.857999999999999
2)Creating 13.857999999999999
'$output_file' 27.715999999999998
$fps 27.715999999999998
...$(tput 13.857999999999999
-vcodec 13.857999999999999
png 13.857999999999999
v2gif-tmp-%05d.png 13.857999999999999
v2gif-tmp-*.png 20.787
"$output_file" 20.787
$alert 13.857999999999999
out_size=$(wc 13.857999999999999
--bytes 13.857999999999999
"$output_file") 13.857999999999999
$out_size 13.857999999999999
alert 20.787
1000 13.857999999999999
3)Warning: 27.715999999999998
$((out_size/1000))kb.$(tput 13.857999999999999
"$del_after" 27.715999999999998
Keeping 13.857999999999999
'$file' 13.857999999999999
though 13.857999999999999
--del 13.857999999999999
requested.$(tput 13.857999999999999
del_after="" 13.857999999999999
2)Done.$(tput 13.857999999999999
any2webm 20.787
webmtag="" 13.857999999999999
plan' 13.857999999999999
apply' 13.857999999999999
destroy' 13.857999999999999
-Dmaven.test.skip=true' 13.857999999999999
'/Applications/Adobe 13.857999999999999
Fireworks 13.857999999999999
CS3/Adobe 13.857999999999999
Finder 13.857999999999999
com.apple.finder 13.857999999999999
AppleShowAllFiles 13.857999999999999
'set 20.787
muted 13.857999999999999
cask 55.431999999999995
ip 34.644999999999996
'base' 103.936
ifconfig 20.787
"You 13.857999999999999
installed!" 13.857999999999999
down4me 13.857999999999999
'checks 13.857999999999999
website 13.857999999999999
pickfrom 20.787
random 13.857999999999999
$file 13.857999999999999
passgen 13.857999999999999
'if 13.857999999999999
pmdown 13.857999999999999
mkcd 34.644999999999996
~/.macromedia 13.857999999999999
~/.adobe 13.857999999999999
name' 13.857999999999999
du 27.715999999999998
-hd 13.857999999999999
--max-depth=1 13.857999999999999
todo 13.857999999999999
~/.t 13.857999999999999
command_exists 13.857999999999999
src/path' 13.857999999999999
"${destpath}${isoname}.iso" 13.857999999999999
folder 13.857999999999999
daemon-reload' 13.857999999999999
--user 27.715999999999998
// Python
from__future__ 59.276999999999994
__future__import 59.369
import(absolute_import, 35.77
(absolute_import,division, 35.77
division,print_function) 35.677
__metaclass__= 49.651999999999994
=type 49.419999999999995
importos 30.355999999999998
importsys 18.971999999999998
fromansible.module_utils._text 11.43
ansible.module_utils._textimport 11.43
froma 17.491
inthe 165.614
thecurrent 23.415
insteadof 13.651
ofthe 321.14
thenumber 49.883
numberof 115.777
forthe 102.21900000000001
=[] 118.09100000000001
nameof 19.111
ofa 49.513
def__init__(self, 100.27499999999999
tothe 137.85
=None 124.523
isnot 237.06
nota 19.990000000000002
=set() 13.836
notNone: 92.085
forx 23.831
xin 24.848999999999997
module= 12.863999999999999
returnFalse 37.620999999999995
ifnot 226.741
result= 52.705999999999996
exceptException 13.836
Exceptionas 13.882
ase: 45.071
%s"% 47.754999999999995
isNone: 107.58600000000001
usethe 17.538
mustbe 83.339
greaterthan 10.642999999999999
equalto 14.206000000000001
setto 38.407
%s'% 38.453
bea 42.988
avalid 19.62
theuser 10.088
fromthe 47.246
_= 38.5
'+ 16.473
importjson 11.245
DOCUMENTATION= 13.234
=r''' 13.79
defmain(): 18.0
if__name__ 56.315
__name__== 56.408
=='__main__': 25.127
=""" 11.799999999999999
listof 71.678
bythe 36.603
returna 11.43
alist 39.101
thisis 14.899999999999999
isonly 10.642999999999999
itis 30.494000000000003
-name: 60.248
allthe 12.216000000000001
return[] 12.309
import( 40.952000000000005
fromdjango.test 23.599999999999998
django.testimport 23.599999999999998
importSimpleTestCase 10.504
forkey, 10.365
valuein 21.193
=( 51.318000000000005
=[ 68.3
msg= 53.169000000000004
=="__main__": 31.326999999999998
asa 36.186
importnumpy 49.883
numpyas 49.050000000000004
asnp 49.050000000000004
witha 32.808
canbe 61.544
andthe 32.437999999999995
bya 11.106
maybe 14.344999999999999
ora 31.003
Readmore 19.481
morein 19.528
the:ref:`User 19.851
:ref:`UserGuide 21.285999999999998
..versionadded:: 29.151999999999997
Listof 13.187999999999999
thatare 14.16
withthe 46.32
thelast 10.736
astring 14.437
isthe 58.768
pathto 10.273
cannotbe 19.204
:bool, 33.039
bool,default=False 17.214
IfTrue, 12.124
willbe 101.38600000000001
thefollowing 12.494
SeeAlso 11.754
>>>from 30.124
fromsklearn.datasets 20.683999999999997
sklearn.datasetsimport 20.683999999999997
fromsklearn.model_selection 14.252
sklearn.model_selectionimport 14.252
X,y 45.533
y= 134.888
y_test= 13.975000000000001
>>># 14.946
beused 38.639
forthis 15.177999999999999
asthe 28.088
bool,default=True 14.946
returnthe 16.797
ofthis 13.975000000000001
Notethat 21.425
returnself 21.055
isNone 39.285999999999994
Noneor 14.623
ornot 17.63
shouldbe 61.452000000000005
notNone 38.824
Noneand 30.587000000000003
andnot 45.533
asingle 26.468999999999998
willnot 11.198
notin 78.388
est= 11.198
Noneelse 12.633
returnNone 29.105999999999998
+1, 16.011000000000003
forname, 11.383
raiseValueError( 29.014
doesnot 49.282000000000004
usingthe 17.214
X,y, 31.836000000000002
deffit(self, 13.511999999999999
fit(self,X, 12.354999999999999
themodel 23.738
X: 38.777
y: 19.666
forall 10.273
passedto 16.381
ofeach 15.501999999999999
:array-like 49.929
array-likeof 50.623
ofshape 144.46699999999998
shape(n_samples, 51.271
atthe 18.833000000000002
ofall 11.568
usedto 38.824
arenot 16.982
ifthe 49.189
y_pred= 31.698
:ndarray 61.68299999999999
ndarrayof 61.868
shape(n_samples,) 26.098000000000003
ofsamples 20.268
(n_samples,n_features) 34.983
usedfor 18.232
:float 17.306
={} 57.009
#type: 39.564
beremoved 10.041
namein 14.020999999999999
+=1 32.484
vin 21.795
==1: 26.515
fori 67.92999999999999
iin 70.012
name= 23.97
thegiven 34.104
Thisis 32.623
isa 72.048
res= 26.746000000000002
intoa 10.921000000000001
tobe 82.367
appliedto 16.52
thename 10.041
:int, 40.812999999999995
Numberof 21.425
torun 10.736
ina 46.32
See:term:`Glossary 11.615
formore 11.152000000000001
X= 117.767
_in 24.618
thedata 21.934
results= 12.263000000000002
basedon 19.990000000000002
importpytest 25.080000000000002
r= 22.258
importabsolute_import, 13.697000000000001
absolute_import,division, 13.697000000000001
division,print_function 13.651
#pylint: 30.818
toa 41.599999999999994
Whetherto 14.16
theinput 27.023999999999997
exceptAttributeError: 10.828
importtime 11.43
forp 11.43
pin 11.245
>0: 16.057
assertnot 31.281000000000002
whenthe 10.828
-The 20.037
type:str 48.449000000000005
thesame 47.199
type:bool 23.461000000000002
-module: 10.273
args= 11.059
==1 21.840999999999998
kwargs= 13.604000000000001
Traceback(most 13.558
(mostrecent 14.020999999999999
recentcall 14.020999999999999
calllast): 13.697000000000001
=0 67.60600000000001
isan 12.956999999999999
fromsklearn.linear_model 10.874
sklearn.linear_modelimport 10.874
clf= 40.628
fromsklearn.metrics 11.754
sklearn.metricsimport 11.754
importmatplotlib.pyplot 13.187999999999999
matplotlib.pyplotas 13.187999999999999
asplt 14.899999999999999
onthe 61.544
fora 26.7
thefirst 20.453
n_samples= 19.065
p= 19.805
params= 15.085
x= 86.763
+1 20.916
fori, 17.677
={ 63.672999999999995
1,2, 25.219
2,3, 23.091
3,4, 15.223999999999998
1,0], 10.642999999999999
0],[0, 13.928
0,1, 35.908
1,0, 24.062
importtensorflow.compat.v2 17.584
tensorflow.compat.v2as 17.584
astf 21.055
fromkeras 28.227
kerasimport 28.227
fromkeras.engine 10.689
keras.engineimport 10.689
def__init__(self): 16.982
defcall(self, 23.091
model= 90.234
output= 62.701
forv 11.799999999999999
v= 10.921000000000001
layer= 47.893
*args,**kwargs): 21.101
a= 13.604000000000001
withself.assertRaisesRegex(ValueError, 13.742999999999999
=3 19.759
=2 31.281000000000002
b= 12.863999999999999
c= 11.198
withself.cached_session(): 11.198
config= 18.556
input_data= 10.782
inputs= 33.964999999999996
defget_config(self): 10.134
@combinations.generate(combinations.combine(mode=['graph','eager'])) 13.187999999999999
thefile 12.679
-If 28.088
donot 11.892000000000001
ifit 12.354999999999999
wantto 11.383
-This 16.659
whichis 14.946
thespecified 11.43
isset 17.168
needto 12.031
thedefault 15.918000000000001
thevalue 16.844
>1: 14.575999999999999
changed= 13.234
=False 80.563
returnTrue 30.124
asf: 13.234
exceptException: 11.892000000000001
=True 109.25200000000001
returnresult 13.049000000000001
path= 16.982
='' 14.16
ona 14.715
exceptValueError: 11.615
notbe 22.258
bein 11.059
int)-> 12.91
2* 13.882
thatthe 31.79
1],[0, 13.558
thetraining 15.825999999999999
usedin 13.975000000000001
:int 26.375999999999998
valueof 26.006
=value 12.124
foreach 32.484
IfNone, 10.689
:float, 21.425
valueis 23.507
isused 20.222
atleast 12.263000000000002
-1 14.484
0or 10.227
=1 37.112
shouldnot 13.003
agiven 12.540000000000001
=time() 13.187999999999999
Returna 13.558
oneof 21.425
touse 41.276
Defaultsto 13.651
whetherthe 11.106
outputof 12.725
importre 16.797
0and 16.242
Trueif 11.985
forline 11.892000000000001
linein 13.418999999999999
m= 11.522
fromdjango.db 15.641
django.dbimport 16.057
rng= 36.695
-1, 11.059
=10 15.594
=5 14.437
keyin 12.91
data= 46.459
itemin 11.013
err= 13.604000000000001
f= 29.105999999999998
fromkeras.utils 10.689
keras.utilsimport 10.736
tensorwith 11.337
theoutput 21.517
thelayer 16.288
pylint:disable=protected-access 10.088
for_ 22.165
value= 29.014
=''' 12.263000000000002
itwill 14.668999999999999
exceptImportError: 16.473
kin 11.568
havea 10.874
=[0, 12.263000000000002
[0,1, 21.564
2,2, 19.805
==0: 28.458
inrange(1, 11.615
forj 11.291
jin 12.309
anew 11.522
Returnthe 13.003
Itis 11.106
Ifthe 24.386000000000003
ifrc 11.568
!=0: 11.661
out,err 10.412
datais 14.206000000000001
Ifyou 10.736
cmd= 15.039
%( 16.612
functionto 12.585999999999999
1,1, 56.685
1,1], 12.124
[0,0, 23.507
0,0, 58.721000000000004
response= 37.943999999999996
loss= 23.276
dataset= 15.27
out= 20.499
t= 11.43
thatis 15.27
setof 11.43
cin 10.227
->None: 16.473
description:The 11.707
Thenumber 16.057
shape= 11.568
valuefor 12.956999999999999
Y= 13.373000000000001
hasbeen 11.615
correspondsto 13.049000000000001
withshape 12.494
call(self,inputs): 11.245
outputs= 20.869
+1) 19.342
-1) 13.049000000000001
tupleof 12.401
withconnection.schema_editor() 11.522
connection.schema_editor()as 11.522
aseditor: 13.558
obj= 14.067
field= 19.435000000000002
returnvalue 14.854000000000001
from..utils 11.476
..utilsimport 11.476
s= 14.020999999999999
==0 19.573999999999998
fromsklearn.utils._testing 16.659
sklearn.utils._testingimport 16.612
=np.random.RandomState(0) 23.183
1],[1, 12.863999999999999
withpytest.raises(ValueError, 28.227
withpytest.raises(ValueError): 25.173
0,0], 18.186
0],[1, 12.354999999999999
[1,0, 10.55
clf.fit(X,y) 10.227
n_features= 18.51
[1,1, 15.177999999999999
[1,2, 12.031
expected= 21.564
andreturn 11.106
sample_weight= 17.353
ofiterations 10.088
classMeta: 15.223999999999998
arrayof 13.882
:{array-like, 15.594
{array-like,sparse 15.27
sparsematrix} 17.399
matrix}of 15.964
==2 12.91
y_true= 26.561
=MagicMock() 17.862
ifvalue 10.736
values= 12.077
withself.assertRaisesMessage(ValidationError, 12.031
=[1, 10.134
opt= 10.458
expected_output= 11.43
from 864.289
__future__ 43.672
import 997.45
(absolute_import, 26.311999999999998
division, 36.558
print_function) 26.244
__metaclass__ 36.524
= 5726.715999999999
type 60.011
cmd 16.032
os 23.283
sys 14.329999999999998
as 381.307
C 10.586
context 18.041
class 363.743
''' 64.811
A 88.298
that 207.503
for 985.945
a 740.59
with 554.294
on 145.892
It 29.648
and 618.526
you 48.131
can 97.114
its 25.631
at 63.415
- 503.678
change 13.207
use 82.783
host 16.134999999999998
list 88.127
available 15.658
in 1150.252
the 1705.0220000000002
current 25.019000000000002
path 64.606
groups 10.008000000000001
module 46.259
instead 13.240999999999998
of 971.478
update 11.335
set 76.792
number 109.981
method 43.196
check 15.522
mode 19.232
to 837.534
command 23.691
or 415.584
[] 104.534
name 88.876
group 15.42
' 140.139
any 36.864
two 23.521
by 127.885
def 1665.1619999999998
__init__(self, 73.76299999999999
None 209.443
Ansible 13.752
is 867.59
not 653.654
each 77.74499999999999
task 11.233
returns 26.584999999999997
before 26.414
options 12.05
return 961.879
try: 126.42099999999999
except 126.387
was 39.894000000000005
% 307.85
if 1475.0529999999999
[None, 10.178
+= 87.787
" 144.224
else: 293.82599999999996
set() 11.471
path: 10.552000000000001
None: 159.508
continue 33.869
elif 122.23500000000001
x 115.42699999999999
# 205.15400000000002
'', 16.441
1) 86.39099999999999
yield 31.997
""" 646.6419999999999
False 107.462
result 70.393
dict( 11.063
Exception 11.029
e: 33.597
%s" 37.886
make 11.607000000000001
finally: 11.029
You 10.824
run 25.494999999999997
| 40.336
True) 20.696
<= 35.197
0: 54.531
must 89.183
be 396.89699999999993
greater 10.246
than 43.128
equal 14.296
%s' 30.124999999999996
valid 24.814999999999998
== 550.515
whether 21.887
changed 21.206
specify 13.922
value, 17.054000000000002
remote 11.812
user 31.146
are 158.18
when 87.14
using 65.662
value 159.678
< 74.512
1, 228.028
0 122.02999999999999
positive 14.739
-1 12.629000000000001
_, 21.887
_ 48.812
+ 378.95799999999997
found 22.262
all 77.405
s 21.343
lambda 22.806
pass 63.312999999999995
json 10.893
r''' 10.178
module: 14.773
description: 90.27199999999999
main(): 13.240999999999998
__name__ 41.834
'__main__': 18.483
main() 15.011000000000001
name: 71.925
version_added: 27.128999999999998
used 95.58200000000001
keyword 10.076
this 138.097
only 65.559
it 102.662
over 16.339
variables 14.365
but 45.34
item 17.291999999999998
type: 103.275
**kwargs): 43.638
( 116.176
django.test 17.36
key, 17.564
1), 29.954
/ 110.45700000000001
2), 20.083000000000002
(None, 12.559999999999999
invalid 10.212
have 56.505
self.assertEqual( 30.668999999999997
[ 132.719
expected 38.668
linear 14.501
& 16.645
code 16.543
attribute 14.194
test 48.403999999999996
2: 18.415
key 47.144
target 32.065000000000005
(3, 12.118
0), 19.436
>= 35.571000000000005
3) 29.069000000000003
msg 44.897999999999996
an 147.356
msg): 16.305
> 86.834
doesn't 12.186
support 23.147000000000002
supported 16.237000000000002
"__main__": 23.044999999999998
The 241.406
numpy 44.455
np 36.15
sparse 40.609
deprecated 10.995000000000001
they 14.262000000000002
fit 12.833000000000002
estimator 32.371
while 44.115
setting 11.778
different 23.317
For 39.826
parameters 18.551000000000002
their 12.458
names 18.448999999999998
parameter 35.162
example 14.773
may 30.499
removed 11.641
Read 14.568999999999999
more 52.352
:ref:`User 15.93
Guide 15.896
.. 47.927
versionadded:: 21.445
Parameters 55.314
---------- 67.67
: 311.969
List 12.901000000000002
order 17.122
which 70.495
last 15.25
object 42.855
str 59.909000000000006
default=None 38.362
cache 12.799
no 49.459
If 147.25300000000001
string 46.566
instance 32.473
given 55.245999999999995
cannot 22.023
Use 15.59
within 10.382
time 33.426
bool, 26.619000000000003
default=False 13.616
True, 43.876
step 15.318
will 153.483
following 14.262000000000002
values 66.104
See 36.967
Also 11.709000000000001
-------- 21.274
function 79.78800000000001
Examples 13.003
>>> 295.12
sklearn.datasets 15.25
sklearn.model_selection 10.518
X, 98.13499999999999
y 139.493
X_test, 10.552000000000001
y_train, 13.071
y_test 10.893
y, 69.678
... 48.846000000000004
random_state=0) 26.04
other 25.972
into 29.41
y_train) 11.709000000000001
*, 16.849
Returns 47.893
default=True 11.369
------- 38.498
params 18.551000000000002
values. 17.871
Note 17.7
self 29.240000000000002
**kwargs) 25.904
t 19.777
raise 228.062
should 89.217
!= 96.91
When 23.147000000000002
-= 11.846
1 152.59799999999998
0, 177.344
name, 36.217999999999996
length 18.448999999999998
"""Returns 13.922
single 26.04
integer 22.67
This 114.508
copy 14.943000000000001
(1, 32.235
est 10.722
@property 43.808
else 68.249
{} 58.206999999999994
ValueError( 21.377000000000002
does 41.255
your 19.13
None, 81.864
X 151.64499999999998
model 141.977
one 54.803000000000004
after 24.848999999999997
data, 15.079
then 34.652
data 129.791
data. 23.384999999999998
input 64.028
first 32.201
label 15.352
passed 28.627
where 30.771
such 19.164
has 61.509
uses 16.407
array-like 41.834
shape 158.452
(n_samples, 47.757000000000005
samples 37.103
called 17.7
end 14.16
some 18.007
models 17.36
y_pred 28.457
X): 13.548
ndarray 49.663
(n_samples,) 20.049
also 24.406
features. 10.688
n_features) 45.749
score 21.309
sample_weight 29.001
argument 29.137999999999998
float 26.073999999999998
False) 23.419
str) 12.424
k, 11.675
v 33.426
1: 48.675999999999995
del 17.904999999999998
i 85.779
p 30.090999999999998
res 24.134
weight 17.02
* 248.38400000000001
returned 17.428
results 27.163000000000004
multiple 21.581
objects 13.48
feature 25.427000000000003
applied 16.679
tuple 17.428
int, 47.723
Number 16.713
means 19.845
default 43.4
weights 37.714999999999996
features 27.572000000000003
per 11.369
present 12.901000000000002
1., 18.926
3], 21.137999999999998
'%s' 14.568999999999999
%s 45.204
f 33.391999999999996
Input 11.675
matrix 34.209
\ 36.660000000000004
n_components 13.616
1)) 23.453
based 16.611
pytest 19.13
r 30.295
assert 355.709
'{{ 11.097
True 141.501
'') 14.977
absolute_import, 10.076
print_function 11.641
err 13.854000000000001
text 18.653
pylint: 22.738
include 11.675
sample 19.061999999999998
Args: 46.804
out, 14.908999999999999
Whether 18.448999999999998
Returns: 35.707
size 22.942
corresponding 10.382
``` 11.097
between 32.031
both 14.365
because 12.697000000000001
[]) 17.939
To 10.042
find 14.535
add 12.322000000000001
original 11.982
element 10.144
e 13.514000000000001
like 11.778
want 10.722
options: 10.688
true 13.854000000000001
load 16.373
default: 27.436000000000003
same 40.778999999999996
bool 27.061
defined 13.376999999999999
these 11.029
variable 18.79
always 16.747
information 16.339
2, 129.48499999999999
see 14.773
args 14.467
message 17.02
kwargs 16.849
-> 80.503
(most 10.416
recent 11.165000000000001
call 26.142
last): 10.178
ValueError: 25.461000000000002
In 24.951
we 34.652
predictions 11.097
already 14.16
clf 31.384
y_pred) 10.961
plt 10.995000000000001
plt.show() 11.403
without 15.93
need 13.139
loss 43.366
iterations 11.744
n_samples 29.444
random_state 15.522
4, 55.484
4 20.832
3, 83.328
0.5, 11.88
scores 11.063
i, 18.79
x: 20.458
{ 122.575
-1, 12.559999999999999
1] 28.048
2) 53.646
left 10.927
right 10.416
10 24.984999999999996
key: 10.722
7, 20.151
8, 21.206
5, 50.071999999999996
10, 31.349999999999998
[3, 22.466
9, 11.846
[2, 26.244
6, 21.819
[4, 10.654
2], 27.945999999999998
0], 55.449999999999996
[0, 66.819
output 101.301
across 12.016
tensorflow.compat.v2 12.935
tf 16.101
keras 27.436000000000003
training 42.243
__init__(self): 12.491999999999999
call(self, 16.986
0. 13.888
index 28.933000000000003
layer 82.613
*args, 24.236
width 11.131
2]) 13.036999999999999
tf.executing_eagerly(): 11.948
0) 33.461
d 17.02
root 11.165000000000001
self.assertRaisesRegex(ValueError, 10.280000000000001
3 45.034
2 93.233
4) 14.433
obj 19.266
b 23.521
c 25.053
self.cached_session(): 10.586
tensor 32.746
inputs, 17.258
there 13.036999999999999
node 24.541999999999998
model, 18.075
Keras 18.688
5) 12.629000000000001
config 24.372
graph 15.386
model.compile( 15.522
batch 17.19
inputs 53.88399999999999
value): 15.216000000000001
@classmethod 14.535
'eager'])) 10.178
file 62.394000000000005
files 20.049
being 11.812
] 14.228
state: 11.675
case 21.683
state 24.541999999999998
created 14.16
do 15.725999999999999
exists 10.586
create 15.488000000000001
empty 11.709000000000001
directory 14.535
specified 27.027
source 13.82
format 12.901000000000002
used. 12.355999999999998
Python 21.309
foo 10.280000000000001
x, 21.717000000000002
k 21.649
returned: 19.913
sample: 18.722
option 14.943000000000001
requires 11.573
out 32.644
been 20.560000000000002
error 33.154
[], 17.462
filename 10.857999999999999
binary 14.705
f: 11.812
path, 17.258
False, 30.023000000000003
'' 21.921
required 13.956
new 24.134
up 12.594000000000001
point 14.399000000000001
template 19.777
val 13.922
datetime 10.857999999999999
int) 14.228
12, 13.854000000000001
) 25.019000000000002
6 10.178
classification 10.961
dataset 32.541
regression 11.403
decision 10.076
base 14.092
(0, 19.266
(2, 16.679
1], 56.505
contains 14.262000000000002
tree 14.262000000000002
errors 13.172999999999998
int 43.672
distance 11.607000000000001
indices 13.003
start 16.169
samples. 14.126000000000001
maximum 12.016
float, 27.231
missing 10.076
least 13.48
learning 16.101
during 14.296
would 10.144
either 21.036
time() 10.382
object. 12.287999999999998
Return 28.762999999999998
specifying 10.654
match 18.79
contain 12.084
Defaults 10.246
added 10.144
1. 23.793
via 11.335
dict 19.641
re 12.663
line 30.295
m 16.509
entry 10.518
break 24.304000000000002
django.db 11.812
@pytest.mark.parametrize( 13.786000000000001
3), 19.879
[1, 67.432
1]) 16.713
rng 27.128999999999998
100 13.240999999999998
5 27.197000000000003
mask 18.483
None) 42.243
password 14.228
rc, 10.280000000000001
', 14.908999999999999
fields 14.126000000000001
field 52.114000000000004
1.0 15.556000000000001
most 11.505
n 30.124999999999996
self, 14.262000000000002
batch_size 11.675
layer. 12.152000000000001
implementation 13.752
query 14.841
tensor. 10.857999999999999
3)) 16.032
value. 10.552000000000001
layers 12.424
Optional 13.071
outputs 23.964
matrix. 11.641
arguments 15.453999999999999
2)) 15.793999999999999
package 11.369
operation 11.914
version 32.507
request 17.462
provided 15.725999999999999
ImportError: 12.629000000000001
get 12.765
2. 10.212
callable 10.382
y) 85.915
classes 18.688
algorithm 19.777
initial 13.888
collection 14.058000000000002
alpha 16.713
j 15.453999999999999
backend 10.042
request, 10.212
dictionary 15.352
labels 26.721
custom 12.219999999999999
so 20.526
url 13.444999999999999
:param 26.891000000000002
containing 13.922
rc 12.935
w 11.88
actual 10.450000000000001
block 11.301
args, 14.126000000000001
content 12.186
random 24.134
connection 13.003
response 39.009
** 26.755000000000003
optimizer 13.411
"""Return 17.734
points 11.369
[5, 11.131
X[:, 12.866999999999999
image 12.731
model. 13.786000000000001
input_shape 11.097
An 20.218999999999998
shape: 12.355999999999998
mean 15.964
Y) 10.246
Y 17.904999999999998
kernel 24.781
string, 11.301
rate 10.484
got 14.773
inputs): 10.450000000000001
Raises: 12.152000000000001
height, 10.518
defaults 10.144
column 12.287999999999998
2] 11.301
0] 17.564
run_eagerly=testing_utils.should_run_eagerly()) 12.663
(1 11.607000000000001
database 11.165000000000001
tests 12.901000000000002
editor: 10.008000000000001
4)) 12.39
'name': 10.212
changes 11.914
None), 22.364
"""A 10.212
'{% 25.019000000000002
%}'}) 16.577
self.assertEqual(output, 26.073999999999998
), 26.209999999999997
metrics 11.233
sklearn.utils._testing 12.254
np.random.RandomState(0) 17.087999999999997
pytest.raises(ValueError, 21.137999999999998
pytest.raises(ValueError): 18.517
0., 18.585
clf.fit(X, 12.491999999999999
"""Test 11.573
array 31.997
metric 25.427000000000003
n_features 25.121
5)) 11.778
other): 10.450000000000001
{}, 14.501
function. 11.846
lambda: 12.219999999999999
y_pred, 22.806
%}{% 13.65
isinstance(value, 10.518
Meta: 11.199
Only 14.296
{array-like, 11.505
matrix} 12.833000000000002
distribution 12.935
compute 11.573
"The 16.305
0.0, 12.322000000000001
y_true 24.781
. 10.212
app 10.552000000000001
MagicMock() 13.139
4], 10.722
dtype 23.793
targets 10.246
<option 19.947000000000003
str, 11.982
precision 10.382
n_samples, 13.071
form 22.330000000000002
type="text" 13.139
{% 10.280000000000001
%} 10.416
"and", 10.110000000000001
<input 13.990000000000002
:type 20.764
count 10.008000000000001
): 10.246
// Java
importorg.elasticsearch.common.ParseField; 17.911
importorg.elasticsearch.common.io.stream.Writeable; 17.155
importorg.elasticsearch.common.xcontent.NamedXContentRegistry; 10.954
importorg.elasticsearch.common.xcontent.XContentParser; 35.727000000000004
importjava.io.IOException; 122.37
importjava.util.Arrays; 47.862
importjava.util.HashMap; 32.642
importjava.util.Map; 81.33800000000001
publicclass 267.435
createTestInstance(){ 15.014999999999999
=new 1569.8110000000001
newHashMap<>(); 64.057
for(int 189.417
(inti 153.517
i= 173.112
=0; 244.77100000000002
0;i 142.279
i< 153.533
i++){ 142.641
returnnew 306.058
response){ 11.773
parser)throws 19.249
throwsIOException 394.306
IOException{ 397.40599999999995
protectedboolean 24.064999999999998
returnfalse; 110.75399999999999
importorg.apache.logging.log4j.LogManager; 14.338
importorg.apache.logging.log4j.Logger; 16.195
importorg.elasticsearch.Version; 21.924
importorg.elasticsearch.action.ActionListener; 21.436
importorg.elasticsearch.client.Client; 10.639000000000001
importorg.elasticsearch.cluster.ClusterState; 15.297999999999998
importorg.elasticsearch.cluster.metadata.IndexMetadata; 12.889999999999999
importorg.elasticsearch.cluster.service.ClusterService; 13.221000000000002
importorg.elasticsearch.common.Strings; 24.663
importorg.elasticsearch.common.settings.Settings; 44.321
importorg.elasticsearch.common.xcontent.XContentBuilder; 39.504999999999995
importorg.elasticsearch.threadpool.ThreadPool; 15.424
importjava.nio.file.Path; 10.891
importjava.util.ArrayList; 51.513000000000005
importjava.util.Collection; 29.243
importjava.util.Collections; 65.379
importjava.util.HashSet; 16.919
importjava.util.List; 120.355
importjava.util.Locale; 16.573
importjava.util.Set; 39.898
importjava.util.function.Function; 13.158000000000001
importjava.util.stream.Collectors; 22.758000000000003
importstatic 551.994
publicstatic 403.104
staticfinal 402.207
finalString 281.12800000000004
privatestatic 329.053
finalLogger 18.005000000000003
Loggerlogger 13.347000000000001
logger= 15.786000000000001
privatefinal 398.351
finalSettings 16.62
finalboolean 53.827
newArrayList<>(); 78.962
finalPath 15.770000000000001
}else 355.714
else{ 259.83299999999997
staticvoid 62.94
settings){ 11.725
{return 17.785
try{ 242.18999999999997
}catch 197.003
e){ 139.824
thrownew 279.39599999999996
throwsException 329.005
Exception{ 329.399
==false) 102.948
false){ 94.81099999999999
null,null, 47.531
entry: 16.699
!=null) 186.93099999999998
null){ 305.75899999999996
["+ 128.94899999999998
+"] 68.732
=null; 95.173
!=null 54.834
null&& 38.655
+"]"); 32.312
==null) 139.682
()-> 202.76399999999998
->{ 202.968
finalMap<String, 37.962
key= 16.919
->new 59.21
builder= 59.303999999999995
message= 10.12
mustbe 34.515
newHashSet<>(); 17.47
publicvoid 1335.3490000000002
!=null; 16.211000000000002
?extends 40.402
publicMap<String, 15.581
finalSet<String> 12.638
"+ 174.434
ofthe 12.638
finalList<String> 18.902
cannotbe 19.973
==false 20.319000000000003
+" 120.308
newStringBuilder(); 13.709
index= 25.009
for(String 37.553
{// 12.072
returnnull; 73.988
finalint 108.59800000000001
isnot 35.711
finalclass 90.16799999999999
XContentBuilderbuilder 10.969999999999999
returnbuilder; 25.607
catch(IOException 24.946
(IOExceptione) 16.305
publicString 160.458
importorg.elasticsearch.common.xcontent.ConstructingObjectParser; 10.041
importjava.util.Objects; 44.431
finalParseField 52.946000000000005
finallong 83.84100000000001
==null 92.26100000000001
null? 43.172000000000004
static{ 21.09
publiclong 35.538
publicint 102.91600000000001
inthashCode() 43.628
hashCode(){ 43.628
publicboolean 176.685
booleanequals(Object 39.945
other){ 14.716
if(this 28.771
(this== 28.377
returntrue; 85.415
null|| 55.731
||getClass() 26.001
getClass()!= 26.048
that= 18.525
importjava.util.Iterator; 14.275
values){ 32.233000000000004
iterator= 10.136000000000001
value= 30.249999999999996
count= 16.022000000000002
d= 22.381
doc= 17.313
newDocument(); 10.514
reader= 10.356
publicfinal 103.578
static<T> 19.217
key){ 17.612
equals(Objecto) 18.462
o){ 30.47
if(o 20.555
StringtoString() 39.143
toString(){ 39.143
=randomIntBetween(0, 13.772
id= 12.354999999999999
null)? 16.416
ex){ 46.115
1){ 24.112
inthe 11.222000000000001
:null; 16.054000000000002
:new 13.661000000000001
staticboolean 19.485
staticint 12.796
newUnsupportedOperationException(); 19.375
expectThrows(IllegalArgumentException.class,() 21.861
finalString[] 13.394
={ 12.78
privatevoid 106.111
name){ 22.05
+name 10.388
name+ 11.049
privateString 57.888000000000005
+1); 14.763
-1); 15.251
privateboolean 39.379
elements){ 19.453
importorg.elasticsearch.common.Nullable; 13.567
publicinterface 27.401
importorg.elasticsearch.common.xcontent.XContentType; 15.991000000000001
protectedvoid 84.486
importorg.junit.Test; 11.395000000000001
importio.reactivex.rxjava3.core.*; 18.808
extendsRxJavaTest 11.332
RxJavaTest{ 11.175
source= 41.645
=PublishSubject.create(); 12.591
throwsThrowable 13.913
Throwable{ 13.976
observer){ 11.678
Map<String,String> 36.609
Map<String,Object> 102.035
importorg.elasticsearch.test.ESTestCase; 36.403999999999996
staticorg.hamcrest.Matchers.equalTo; 35.9
extendsESTestCase 34.626
ESTestCase{ 34.626
=randomBoolean() 12.623
randomBoolean()? 23.419
out= 11.883
in= 10.356
toparse 12.370999999999999
query= 17.439
elseif 106.379
importorg.junit.jupiter.api.Test; 32.17
importorg.springframework.context.annotation.Bean; 13.221000000000002
importorg.springframework.context.annotation.Configuration; 16.258
staticorg.assertj.core.api.Assertions.assertThat; 26.489
staticorg.mockito.Mockito.mock; 18.446
.run((context)-> 16.148
@Configuration(proxyBeanMethods= 32.8
=false) 36.042
staticclass 152.352
context){ 14.795
importorg.junit.Before; 14.244
publicabstract 42.29
abstractclass 28.849000000000004
protectedString 14.149000000000001
settings= 34.578
state= 19.485
metadata= 19.611
factory= 14.59
config= 16.447
importorg.elasticsearch.common.bytes.BytesReference; 12.826999999999998
staticorg.hamcrest.Matchers.is; 15.424
request= 67.473
case1: 10.089
response= 65.253
newString[] 18.588
String[]{ 18.005000000000003
result= 68.322
?null 31.587999999999997
null: 36.357
parser= 27.165000000000003
IllegalArgumentExceptione 11.946
e= 64.246
=expectThrows(IllegalArgumentException.class, 25.576
=randomBoolean(); 20.948
try(XContentParser 12.732999999999999
(XContentParserparser 11.678
type= 10.891
Exceptione 11.064
==0) 40.244
0){ 98.415
==1) 13.331000000000001
=randomIntBetween(1, 21.185
if(randomBoolean()) 61.146
(randomBoolean()){ 61.035
=1; 34.089999999999996
1;i 10.466000000000001
a= 12.009
b= 47.61
==o) 17.186999999999998
o)return 13.11
(o== 18.131
!=o.getClass()) 16.557
o.getClass())return 12.591
iterator(){ 10.592
return0; 12.370999999999999
value){ 110.629
privateint 21.814
voidclose() 10.152000000000001
<0) 11.678
staticorg.hamcrest.Matchers.containsString; 15.408
map= 27.984
importorg.elasticsearch.common.xcontent.ToXContentObject; 12.511999999999999
voidonFailure(Exception 14.307
onFailure(Exceptione) 13.048000000000002
notbe 41.645
null,null); 11.426
listener= 23.372
importorg.elasticsearch.common.io.stream.StreamInput; 33.524
importorg.elasticsearch.common.io.stream.StreamOutput; 26.725
StringNAME 15.818000000000001
NAME= 17.029
in)throws 41.991
=in.readString(); 13.897
voidwriteTo(StreamOutput 27.575
writeTo(StreamOutputout) 27.433
out)throws 33.760000000000005
Stringname; 10.734
this.name= 12.245
=name; 10.199
StringgetName() 15.519
getName(){ 15.739
=value; 12.103
mustnot 32.91
benull"); 27.921
finally{ 50.301
name= 18.336000000000002
=true) 12.15
protectedstatic 14.7
type){ 10.482000000000001
Stringname, 11.395000000000001
){ 18.367
catch(Exception 30.627999999999997
throwsSQLException 13.015999999999998
SQLException{ 14.023
catch(IllegalArgumentException 22.648
publicXContentBuilder 26.583
XContentBuildertoXContent(XContentBuilder 23.152
toXContent(XContentBuilderbuilder, 23.404
builder,Params 28.188
Paramsparams) 28.802
params)throws 30.423000000000002
equals(Objectobj) 16.589
obj){ 24.332
if(obj 17.25
(obj== 14.795
!=obj.getClass()) 10.34
other= 17.769
!=0) 15.267
returnresult; 18.226
expected){ 49.326
intsize 10.215
size= 13.882
=false; 38.230000000000004
if(token 16.431
(token== 14.401
=true; 59.383
returnthis; 76.208
publicObject 27.858
<T>T 10.026
ctx){ 15.865
isnull"); 37.27
staticString 21.704
+1; 11.568
importjava.util.concurrent.TimeUnit; 17.233999999999998
superT> 25.749
t){ 34.484
longserialVersionUID 17.612
serialVersionUID= 17.612
newAtomicReference<>(); 18.918
voidonError(Throwable 15.991000000000001
voidonComplete() 15.235
onComplete(){ 15.235
voiddispose() 11.049
dispose(){ 11.001
if(value 16.494
voidrun() 38.576
run(){ 33.288000000000004
finalAtomicInteger 16.431
importorg.elasticsearch.common.unit.TimeValue; 21.2
(intj 12.024000000000001
j= 17.407
0;j 11.363
j< 12.78
j++){ 11.19
packagecom.google.common.collect; 12.370999999999999
importcom.google.common.annotations.GwtCompatible; 19.737
importcom.google.common.annotations.GwtIncompatible; 10.608
@GwtIncompatible// 29.164
static<E> 10.309000000000001
public<T> 10.529
index){ 12.700999999999999
static<K, 11.049
<K,V> 11.694
values= 15.849
Stringname 10.765
"/"+ 12.434
+1, 12.370999999999999
list= 19.422
indices= 10.466000000000001
Void>PARSER 11.112
PARSER= 14.543
(p,c) 10.592
c)-> 12.213
listener){ 42.668
finalCountDownLatch 23.105
CountDownLatchlatch 13.472000000000001
latch= 13.520000000000001
request){ 10.624
context= 16.416
-1; 12.811
doesnot 16.447
s){ 16.904
catch(Throwable 18.981
ex= 14.606
Requestrequest 18.399
privatelong 13.221000000000002
newPlainActionFuture<>(); 13.158000000000001
publicBuilder 19.28
=Settings.builder() 21.861
Settingssettings 24.238
Runnable(){ 23.309
TestSubscriber<Integer>ts 14.071
ts= 28.250999999999998
newAtomicInteger(); 15.833
2,3, 21.971
3,4, 17.831999999999997
=PublishProcessor.create(); 18.745
List<Throwable>errors 10.34
errors= 12.654
}finally 45.847
finalAtomicBoolean 12.889999999999999
0&& 11.175
v)throws 18.761
newCountDownLatch(1); 23.892
catch(InterruptedException 15.187999999999999
protectedabstract 19.642
ClusterStateclusterState 11.285
clusterState= 27.526999999999997
expected= 23.325
+", 11.568
protectedfinal 25.906
(Exceptione) 20.476000000000003
==false; 11.395000000000001
importorg.elasticsearch.ElasticsearchException; 11.977
>0) 26.252
@Overridepublic 13.315000000000001
stats= 13.268
InterruptedException{ 22.695
for(final 10.891
assertBusy(()-> 21.247
id){ 10.325000000000001
++i){ 14.165000000000001
future= 13.677000000000001
set= 10.23
bucket= 12.182
catch(UnsupportedOperationException 10.073
=(Map<String, 12.197999999999999
(Map<String,Object>) 11.158999999999999
entry= 12.418
v){ 11.096
o= 34.437
Integer>(){ 10.797
publicInteger 19.343
throwsInterruptedException 18.588
shouldbe 10.23
TestObserver<Integer>to 10.498
to= 24.442000000000004
apply(Integerv) 17.14
newObject(); 12.339
importorg.elasticsearch.transport.TransportService; 11.001
s= 11.033
SearchResponseresponse 13.015999999999998
privatevolatile 11.977
==0 11.804
ToXContentObject{ 11.112
tobe 12.197999999999999
e-> 10.828
finalClusterState 10.136000000000001
token= 12.182
extendsT> 19.264
finalvar 11.631
}\n"+ 19.358999999999998
client= 16.589
validationException= 11.285
c= 14.967999999999998
exception= 16.243
(InterruptedExceptione) 10.01
Function<?super 20.02
superT, 15.644000000000002
T,? 13.284
0,0, 19.312
parser.getDeprecationHandler())){ 13.394
catch(NullPointerException 10.152000000000001
(IllegalArgumentExceptionexpected) 12.826999999999998
finaldouble 11.175
y= 39.804
x= 52.19
publicdouble 11.049
{\n"+ 24.08
"}\n" 19.784
SearchResponsesearchResponse 11.584
searchResponse= 21.2
finalvoid 17.233999999999998
?super 11.08
newTestException(); 13.062999999999999
expectScriptThrows(ClassCastException.class,() 27.685
throwsIOException; 10.026
newRunnable() 16.951
:{\n" 12.087
(1L<< 10.702
publicCriteria 132.993
return(Criteria) 130.601
(Criteria)this; 130.601
notnull"); 10.372
=",value, 10.356
<>",value, 10.356
>",value, 10.356
>=",value, 10.356
<",value, 10.356
<=",value, 10.356
in",values, 20.712
notin", 10.356
value2){ 20.901
between",value1, 20.712
value1,value2, 20.728
notbetween", 10.356
|(1L 10.136000000000001
returnRxJavaPlugins.onAssembly(new 10.466000000000001
returnx 31.430999999999997
=o;")); 10.577
exec("defx 24.128
defy 20.303
package 292.765
import 3649.248
org.elasticsearch.common.ParseField; 12.715
org.elasticsearch.common.io.stream.Writeable; 12.179
org.elasticsearch.common.xcontent.XContentParser; 25.364
java.io.IOException; 86.87299999999999
java.util.Arrays; 33.977999999999994
java.util.HashMap; 23.174
java.util.Map; 57.744
public 2659.487
class 434.063
extends 381.258
{ 6003.456
@Override 1023.962
protected 292.30699999999996
createTestInstance() 10.693
Map<String, 169.254
= 5133.362999999999
new 2012.873
HashMap<>(); 45.476
for 383.236
(int 134.606
i 256.686
0; 199.43399999999997
< 177.333
randomIntBetween(0, 15.218
2); 27.285
i++) 101.36500000000001
return 1913.8990000000001
parser) 20.883
throws 597.865
IOException 285.77
boolean 355.425
false; 115.198
org.apache.logging.log4j.LogManager; 10.179
org.apache.logging.log4j.Logger; 11.497
org.elasticsearch.Version; 15.565
org.elasticsearch.action.ActionListener; 15.218
org.elasticsearch.cluster.ClusterState; 10.861
org.elasticsearch.common.Strings; 17.509
org.elasticsearch.common.settings.Settings; 31.464
org.elasticsearch.common.xcontent.XContentBuilder; 28.045
org.elasticsearch.threadpool.ThreadPool; 10.950000000000001
java.util.ArrayList; 36.57
java.util.Collection; 20.76
java.util.Collections; 46.414
java.util.HashSet; 12.011
java.util.List; 85.443
java.util.Locale; 11.766
java.util.Set; 28.324999999999996
java.util.stream.Collectors; 16.157
static 1083.9740000000002
implements 96.113
final 1387.242
String 729.152
+ 1053.069
private 935.1
Logger 16.480999999999998
logger 11.497
Settings 50.480999999999995
ArrayList<>(); 56.068000000000005
settings, 15.028
Path 32.515
if 987.827
} 461.15899999999993
else 265.222
void 1368.493
client, 16.213
ClusterService 12.502999999999998
clusterService, 17.698999999999998
ThreadPool 13.889
threadPool, 17.084
try 242.63000000000002
catch 153.667
(final 11.24
Exception 257.826
e) 105.93499999999999
throw 228.987
e); 30.380000000000003
== 497.539
false) 106.87299999999999
null, 147.466
null)); 21.095
? 170.092
: 366.409
entry 22.794
!= 279.01
null) 236.84199999999998
type 31.721
[" 98.28099999999999
"] 52.346999999999994
is 123.06400000000001
)); 10.200999999999999
by 14.525
and 31.977999999999998
null; 147.846
null 142.885
&& 169.969
" 339.604
set 16.872
an 18.213
from 23.766
"]"); 23.107
default 11.743
() 144.125
-> 522.043
key 26.47
x 70.04599999999999
}); 126.23700000000001
Settings.Builder 10.369
builder 46.336
|| 99.08600000000001
message 11.118
must 54.906
be 102.516
or 23.151
but 28.872
builder.build(); 10.078
HashSet<>(); 12.402
true)); 10.011000000000001
List<String> 62.359
assert 52.95099999999999
are 17.006
not 138.907
to 137.276
the 91.119
var 29.542
Set<String> 34.727
settings 27.755
have 25.453
as 17.844
of 57.9
", 20.883
cannot 18.637
in 54.068
a 90.929
false); 45.397
false 21.889000000000003
value 50.101
StringBuilder 13.844000000000001
int 454.55499999999995
index 57.821999999999996
(String 26.816
action, 13.866
1, 80.616
1) 38.111999999999995
/ 33.688
2, 55.800000000000004
ClusterState 41.464
with 40.470000000000006
only 15.028
synchronized 21.252
than 11.196
.build(); 41.788
token 17.207
Settings.builder() 23.229
0) 82.75
true) 21.81
XContentBuilder 43.029
builder.startObject(); 16.838
builder.endObject(); 30.503000000000004
builder; 19.285
(IOException 17.743
java.util.Objects; 31.542
ParseField 43.163000000000004
long 222.484
Void> 14.939
true, 62.493
null); 76.281
hashCode() 31.107
equals(Object 28.358
other) 10.615
(this 20.503
true; 104.091
getClass() 18.593
that 24.670999999999996
java.util.Iterator; 10.134
double[] 12.581
values) 24.067
while 45.397
count 17.218
double 60.157
d 18.134
doc 16.023
MappedFieldType 11.184999999999999
Collections.emptyMap()); 10.145
key, 20.101
<T> 26.837999999999997
key) 14.123
o) 33.867
(o 14.950000000000001
instanceof 92.884
o; 14.615
toString() 27.833000000000002
3); 16.414
id 19.185
@SuppressWarnings("unchecked") 48.191
ex) 33.029
it 13.329999999999998
> 65.364
s 15.185
on 31.430999999999997
file 13.151
case 81.074
this 16.28
version 15.185
0, 89.208
0); 41.452999999999996
2; 12.045
UnsupportedOperationException(); 13.754
})); 14.581
expectThrows(IllegalArgumentException.class, 24.012
5, 19.498
String[] 64.459
}; 10.615
name) 19.218
name 34.660000000000004
context, 18.201
config 14.134
data 12.224
1); 54.191
name, 39.688
- 111.23100000000001
found 14.738
@Test 273.346
elements) 13.966999999999999
interface 25.900000000000002
Client 13.520000000000001
switch 16.894
default: 14.123
parse 13.598
one 13.956
}, 48.95099999999999
request, 52.592999999999996
listener); 15.978
index, 16.246000000000002
String> 53.934000000000005
client 13.709999999999999
cluster 10.704
}) 14.626
org.elasticsearch.common.xcontent.XContentType; 11.352
io.reactivex.rxjava3.core.*; 13.352
Integer 50.939
v 13.497
.get(); 26.693
source 36.973000000000006
Throwable 28.648999999999997
super 80.337
Integer> 38.537
Object> 102.56
v) 26.837999999999997
org.elasticsearch.test.ESTestCase; 25.844
org.hamcrest.Matchers.equalTo; 25.485999999999997
ESTestCase 24.615
Version 14.905
randomBoolean() 17.977999999999998
out 15.665000000000001
value); 15.822000000000001
path 12.725999999999999
query 17.665000000000003
) 22.682
field 30.682000000000002
true); 39.531
org.junit.jupiter.api.Test; 22.838
org.springframework.context.annotation.Configuration; 11.542
org.assertj.core.api.Assertions.assertThat; 18.805
org.mockito.Mockito.mock; 13.095
.run((context) 11.464
@Configuration(proxyBeanMethods 23.285
@Bean 25.933
was 15.889
context) 17.017
10, 15.475
y 30.279999999999998
int[] 13.329999999999998
id, 13.642999999999999
Object 108.695
Long 21.62
org.junit.Before; 10.112
abstract 59.152
@Before 11.173
state 24.067
metadata 18.749000000000002
DiscoveryNode 14.826999999999998
factory 11.196
should 32.157000000000004
assertThat(e.getMessage(), 23.04
org.hamcrest.Matchers.is; 10.950000000000001
request 56.961999999999996
response 52.705000000000005
break; 48.906000000000006
result 59.431000000000004
XContentParser 11.877
parser 20.324
parser.nextToken(); 10.347
is(true)); 24.659999999999997
nullValue()); 16.403000000000002
.endObject() 22.738
IllegalArgumentException 15.922
e 57.888999999999996
randomBoolean(); 15.732
BytesReference 15.051
* 73.856
equalTo(1)); 28.224
has 18.66
(i 10.09
2) 13.252
randomIntBetween(1, 22.012
10); 20.336000000000002
(randomBoolean()) 43.409
1; 52.727000000000004
b 40.861
(Map<String, 10.927999999999999
list 16.246000000000002
E 22.235
T 42.638000000000005
E> 10.391
o.getClass()) 11.754
r 10.950000000000001
2 14.849
{} 31.631999999999998
value) 84.191
-1; 13.632
org.hamcrest.Matchers.containsString; 10.939
Response 16.034
map 21.956
notNullValue()); 35.364000000000004
IndexMetadata 13.999999999999998
onFailure(Exception 10.157
e.getMessage()); 12.581
indices 13.676000000000002
listener 25.676
org.elasticsearch.common.io.stream.StreamInput; 23.799
org.elasticsearch.common.io.stream.StreamOutput; 18.971999999999998
NAME 13.485999999999999
Request 35.833000000000006
in) 32.034
super(in); 14.581
in.readString(); 10.056
writeTo(StreamOutput 19.576
out) 25.107
"b", 15.699
enum 11.665000000000001
name; 19.687
getName() 11.642999999999999
value; 23.631999999999998
null"); 54.124
finally 35.732
assertThat( 11.006
Class<?> 11.687
type, 13.732
+= 34.883
Boolean 13.665
(Exception 21.922
SQLException 10.725999999999999
1 23.855
(IllegalArgumentException 16.09
toXContent(XContentBuilder 16.615
builder, 27.128999999999998
Params 22.034
params) 24.581
obj) 18.771
(obj 12.469
other 15.866
obj; 11.609
params); 12.995
c 16.0
result; 16.861
id; 12.782
bucket 13.809999999999999
expected) 35.386
>= 30.973
size 19.576
size; 10.57
(token 11.956
at 14.436
this; 150.282
equalTo(0)); 15.933000000000002
context 17.073
[{}] 32.291
[{}]", 23.978
expected 24.513999999999996
{}", 15.028
ctx) 12.725999999999999
start 12.782
node 23.195999999999998
source, 24.682000000000002
3, 39.263
<= 26.19
Expression 13.329999999999998
java.util.concurrent.TimeUnit; 12.235
T> 40.682
TimeUnit 10.658999999999999
t) 26.816
Runnable 22.347
serialVersionUID 12.502999999999998
AtomicReference<>(); 13.430000000000001
Disposable 15.285
task 10.995000000000001
onError(Throwable 11.352
onComplete() 10.872
(value 13.051
run() 27.788
AtomicInteger 18.872
org.elasticsearch.common.unit.TimeValue; 15.051
5); 15.072999999999999
j 24.816
TimeValue 20.324
com.google.common.annotations.GwtCompatible; 14.011000000000001
@GwtIncompatible 24.894000000000002
c) 13.442
Object[] 11.967
index) 10.436
V> 83.756
V>> 17.442
V 22.023
values 16.838
K 13.083999999999998
return; 55.632
PARSER 10.536
listener) 32.76
listener, 10.347
CountDownLatch 22.682
TimeUnit.SECONDS); 15.239999999999998
RequestOptions.DEFAULT); 11.196
does 12.145
Query 20.514
Builder 23.285
parent, 12.056
action 10.782
s) 14.861
volatile 14.771
(Throwable 14.123
ex 11.564
1)); 16.213
fields 11.118
File 19.241
AtomicBoolean 13.386
no 15.039
is(false)); 17.933
false, 56.95099999999999
equalTo(2)); 12.548
future 11.799
assertEquals(1, 40.614999999999995
assertEquals(2, 22.257
value, 67.778
Runnable() 16.548
TestSubscriber<Integer> 11.464
ts 20.302
AtomicInteger(); 11.24
Flowable<Integer> 11.24
.test() 31.285
4, 24.067
0 35.297
PublishProcessor<Integer> 11.319
PublishProcessor.create(); 13.341000000000001
CountDownLatch(1); 16.961
(InterruptedException 10.782
clusterState 19.911
shard 16.168000000000003
source; 10.402
state, 10.648
stats 11.341
assertEquals(0, 39.71
equalTo(false)); 10.011000000000001
equalTo(true)); 12.805
InterruptedException 16.961
10; 11.71
.startObject() 10.905
assertBusy(() 15.084000000000001
% 13.028
test 15.653999999999998
++i) 10.123000000000001
Object>) 10.369
?> 16.648
SearchResponse 24.917
assertEquals( 13.988999999999999
(int) 13.352
float 14.235
exception 19.162000000000003
o 27.653999999999996
Integer, 11.9
apply(Integer 20.905
Function<Integer, 19.922
transportService, 15.084000000000001
actionFilters, 11.33
@Nullable 41.811
continue; 11.24
snapshot 10.481
byte[] 29.598
b) 11.017
n 10.347
}\n" 15.139999999999999
values, 18.558999999999997
| 22.604
options, 13.129
service 10.045
Function<? 14.235
T, 12.502999999999998
R> 16.682000000000002
(String) 12.245999999999999
& 17.833000000000002
fail(); 22.324
verify(subscriber, 10.658999999999999
{\n" 18.917
@CanIgnoreReturnValue 13.129
searchResponse 15.285
logger.info("--> 24.425
expectScriptThrows(ClassCastException.class, 21.844
exec("def 25.810999999999996
<< 19.743000000000002
@NonNull 35.353
@CheckReturnValue 18.904999999999998
<1> 13.564
{" 11.576
Criteria 98.672
value1, 31.587
value2, 15.732
addCriterion("id 10.19
(Criteria) 92.717
in", 14.715
value2) 14.915999999999999
between", 14.704
def 16.76
y")); 19.185
@SchedulerSupport(SchedulerSupport.NONE) 15.139999999999999
// Lisp
:format-arguments(list 15.366
(declare(ignore 169.552
&restargs) 17.684
(unless(or 16.889
(or(null 10.729
~Sis 10.067
isnot 38.48
nota 16.558
&bodybody) 41.792
(when(null 10.862
(returnnil)) 10.531
(if(consp 15.366
(unless(and 17.419
mustbe 16.16
ofthe 73.451
(setf(slot-value 22.916
(let((fun 12.915
(when(or 35.830999999999996
(unless(= 11.988
(declare(dynamic-extent 24.373
(type(or 20.333
(ornull 27.883
(declare(fixnum 16.492
(cond((eq 14.505
(unless(eq 24.704
(dotimes(i 65.437
(loopwith 11.922
(declare(notinline 15.631
(setf(gethash 46.494
(aver(not 11.922
onthe 12.517999999999999
(let((name 22.584999999999997
(info:function 12.054
(when(and 115.971
(if(and 47.753
(and(= 11.854999999999999
itis 12.584
fromthe 14.174000000000001
(and(eq 24.108
(not(eq 21.657999999999998
(when(eq 33.579
(mapcar(lambda 28.148000000000003
(if(eql 18.942
(&restargs) 17.021
(xy) 31.063
xy))) 10.266
(eq(car 17.684
(if(eq 41.66
(cond((or 13.379000000000001
(or(not 25.631999999999998
(cond((and 32.917
(or(eq 20.267
(if(null 16.293
(setf(cdr 13.444999999999999
(lambda(c) 12.584
(let((value 11.193
(and(consp 16.889
(cond((null 13.776000000000002
(if(or 21.062
forthe 21.724
(1-(length 11.524000000000001
(declare(optimize 57.688
(make-hash-table:test 27.485999999999997
(formatt 108.09
(lambda(x) 37.355
(push(cons 13.909
(and(eql 15.631
nilnil 22.519000000000002
(eval-when(:compile-toplevel 24.438999999999997
(when(not 64.841
(assert(not 40.865
(assert(eql 41.196
(eql(first 13.113999999999999
(declare(ignorable 25.83
(and(typep 14.306000000000001
(maphash(lambda 10.001
(push(list 12.981
(gethashname 12.584
:namename 11.126999999999999
(when(typep 14.836
(not(and 10.067
(not(eql 29.341
:operands(list 16.492
:inputs(list 13.444999999999999
:outputs(list 10.862
(if(typep 12.054
(declare(type 172.533
(or(eql 14.505
(=(length 20.863000000000003
do(setf 16.492
(loopfor 114.84500000000001
(let((result 22.188000000000002
bea 12.452
(unless(zerop 11.591000000000001
(formatnil 98.94999999999999
(with-test(:name 229.823
(assert(= 96.036
(:compile-toplevel:load-toplevel 24.637999999999998
:load-toplevel:execute) 26.36
:type(unsigned-byte 11.458
0:type 16.492
(declaim(type 10.663
isthe 14.703000000000001
thecurrent 19.008
"~Sis 11.988
(when(> 16.028
shouldbe 13.379000000000001
(expt2 10.133
(*2 14.239999999999998
(:copiernil)) 13.577000000000002
nil:type 58.747
:read-onlyt) 21.326999999999998
(or(and 16.558
(ldb(byte 83.187
(byte1 13.18
(declaim(ftype 28.215
fori 45.037
(thefixnum 15.299000000000001
(ftype(sfunction 11.193
(type(integer 13.511
00 29.672
(if(= 21.326999999999998
(setf(svref 13.577000000000002
numberof 16.624000000000002
(ftype(function 15.631
(cond((not 22.253999999999998
(when(eql 31.261
:type(or 33.977
tothe 40.865
tobe 19.869
canbe 17.882
:direction:output 19.472
xy)) 20.134
isa 35.964
"Returna 20.532
alist 25.565
listof 35.103
(cond((eql 20.201
xy) 28.148000000000003
(logior(ash 18.147000000000002
(:args(x 20.73
:scs(any-reg 10.994
:load-if(not 10.729
(y:scs 11.061
(x:scs 16.689999999999998
(:generator1 12.452
:scs(descriptor-reg))) 12.783
(:temporary(:scs 18.346
:from(:argument 14.239999999999998
(:temporary(:sc 24.637999999999998
xy 22.188000000000002
(:vop-varvop) 12.915
(ash1 46.826
"Returnthe 29.936999999999998
ina 16.293
ofa 21.194
inthe 40.401
(xy 10.331999999999999
(declare(explicit-check)) 11.392
(typefixnum 11.392
ifthe 18.014999999999997
thesame 12.452
(not(zerop 12.187
(if(zerop 13.577000000000002
(optimizespeed 10.465
(typeindex 18.545
anew 13.379000000000001
(if(< 11.326
(if(not 10.398
withthe 17.75
doesnot 12.452
(and(not 31.326999999999998
(funcallfunction 10.531
(funcallfun 13.245999999999999
(valuesnil 35.897
(return(values 14.040999999999999
(setf(aref 42.587
(arefvector 12.054
(lambda() 51.594
(assert(eq 43.382000000000005
fora 12.849000000000002
valueof 10.663
toa 14.571000000000002
()() 23.91
(:name(compile 19.406
12 15.564
(checked-compile-and-assert() 14.372000000000002
`(lambda() 24.969
23 13.18
(checked-compile'(lambda 11.326
(checked-compile`(lambda 16.425
(assert(null 12.253
(:use:cl 13.909
(ok(equal 24.373
stream:type 14.571000000000002
t" 27.155
(with-open-file(s 15.498000000000001
(formatstream 72.656
stream" 11.061
from0 21.326999999999998
"" 14.239999999999998
nilnil) 17.021
(defmethodprint-object 17.419
(when(>= 11.524000000000001
(+(* 15.896
(when(< 13.975000000000001
(true-or-false?____ 14.040999999999999
23) 10.331999999999999
(assert(string= 17.353
ifrom 27.685
(assert(equal 54.24400000000001
:typet 12.65
t:identity 10.927999999999999
(ab 11.657
bc 12.915
(byte8 38.613
80) 10.398
88) 10.994
(nth-value1 15.299000000000001
(const 12.318999999999999
:element-type'(unsigned-byte 26.758000000000003
:initformnil 20.068
(start0) 12.584
(defun(setf 30.93
(not(null 10.331999999999999
(let((a 10.796000000000001
asa 20.134
(optimize(speed 18.214
(speed3) 11.591000000000001
(declaim(inline 49.077
startend) 21.326999999999998
(let((x 16.492
(when(= 11.789
(=speed 11.988
(funcallf 10.465
astring 11.193
(loop:for 18.876
(valuest 11.922
(:policy:fast-safe) 36.427
(:args(object 10.531
(object:scs 10.531
(value:scs 11.061
(:results(result 11.126999999999999
(result:scs 11.259
(integer0 12.65
(compilenil 12.253
:identityt) 10.2
(if(listp 12.849000000000002
tt) 11.326
willbe 16.492
andthe 12.65
x86x86-64) 11.126999999999999
tt 25.102
(looprepeat 11.591000000000001
finally(return 11.922
nilt) 29.076
(assert(typep 19.472
(getfargv 10.531
(let((s 10.862
(-end 10.398
startend 21.393
startend)) 11.126999999999999
'(lambda(x) 13.048000000000002
(ab) 14.571000000000002
ab 12.517999999999999
`(lambda(x) 18.611
(test-util:with-test(:name 12.65
(concatenate'string 10.862
(assert-equal____ 27.485999999999997
'(lambda() 15.564
'(12 14.571000000000002
(missing-arg):type 12.054
(instaddi 14.505
:scs(unsigned-reg))) 10.2
(instjmp 11.657
(instmov 14.770000000000001
(-(* 10.927999999999999
(unsigned-byte8) 12.187
(+start 13.113999999999999
string:start 11.591000000000001
(+offset 19.472
t:sym 10.398
(:note"inline 11.854999999999999
(arefbuf 15.829
nodeblock 18.545
(emit(make-instance 58.946
(make-instance'ir:virtual-register 18.677
'ir:virtual-register:kind 18.677
(define-key*global-keymap* 10.067
0)(= 11.922
safety0) 11.789
(*(struct 18.677
(make-instance'x86-instruction 11.723
speed3))) 10.531
;LATIN 56.694
LATINCAPITAL 25.895999999999997
CAPITALLETTER 53.118
LATINSMALL 31.195
SMALLLETTER 59.675
;BOX 30.599
BOXDRAWINGS 30.599
DRAWINGSLIGHT 10.2
DRAWINGSDOUBLE 10.2
;GREEK 19.141000000000002
GREEKSMALL 10.133
;CYRILLIC 38.547000000000004
CYRILLICSMALL 19.273
CYRILLICCAPITAL 19.273
;ARABIC 11.723
;THAI 11.524000000000001
THAICHARACTER 10.067
Context:EVAL 18.014999999999997
(structmpfrfloat))) 11.458
*The 13.975000000000001
:field(byte 15.763
(equal(control-char 19.075
(form):lisp) 13.379000000000001
(:starform)) 13.113999999999999
form)):lisp) 16.028
(=(gcd 26.625
:DOCUMENTATION"* 24.704
(return-frominstruction 11.326
(ash(register-number 12.253
(in-package 73.83
(define-condition 23.245
()) 43.631
(defun 1005.3259999999999
&optional 121.93900000000001
(error 150.47
:format-control 17.480999999999998
into 23.721
~S 59.493
:format-arguments 15.433
(list 268.21700000000004
(macrolet 39.725
(name 83.54700000000001
args 33.343
,name 25.863999999999997
(declare 415.83000000000004
(ignore 126.749
nil 452.60200000000003
(def 48.299
method) 10.574
&rest 78.879
be 93.12100000000001
by 59.207
new 37.201
"No 10.86
specified 12.718000000000002
for 310.896
on 57.159
method 20.482
:initarg 99.504
:reader 60.922000000000004
(lambda 217.965
(c 16.243
s) 32.676
(format 240.49499999999998
s 43.917
of 239.58999999999997
c) 32.628
args) 57.635
args)) 29.723
(unless 190.196
(or 305.51300000000003
(null 83.64200000000001
(stringp 10.336
is 227.349
a 338.141
:documentation 18.91
nil) 287.556
fun) 22.387
not 92.216
:function 19.91
fun 31.055999999999997
list 81.642
&body 39.582
body) 43.06
`(let 30.246
(loop 210.106
(when 600.547
(return 85.071
nil)) 165.14100000000002
(if 506.045
(consp 42.631
(progn 65.447
(setq 104.553
(pop 28.913
(flet 76.212
() 411.733
an 58.30199999999999
(and 311.896
(atom 10.765
in 216.06
name) 78.26
(symbolp 28.389000000000003
name 170.333
(s 27.293
(let 883.102
using 12.051
~ 30.77
and 135.8
as 59.921
(length 183.05100000000002
; 390.299
end 65.304
(defmethod 205.486
&key 96.503
lambda-list 16.528
function 91.787
function) 23.149
slot-name 11.383999999999999
(find-class 25.674
value 103.791
string) 28.008
the 482.134
The 38.916
argument 17.576
must 17.386
(cond 248.593
class 55.015
(setf 755.019
(slot-value 52.538
t)) 126.27300000000001
((fun 11.67
(fdefinition 10.622
name)))) 11.289
((and 73.02
(typep 96.979
~S." 19.196
name)) 41.297000000000004
(t 110.173
nil)))) 30.008
(let* 231.87400000000002
(class-of 10.67
(getf 41.059000000000005
(apply 58.30199999999999
new) 10.622
t) 224.44299999999998
(= 178.24
~D 10.67
was 17.386
to 260.596
with 95.836
(aver 42.345
(equal 86.262
(every 11.527
(dynamic-extent 18.243
((null 34.532999999999994
no 25.721
(dolist 127.512
(values 196.626
(sort 12.718000000000002
(type 224.01399999999998
null 27.15
0)) 133.99
(fixnum 19.958000000000002
(arg 12.003
((eq 36.629000000000005
arg 27.389
(return)) 25.912
t))) 58.82599999999999
(incf 101.742
(eq 246.06799999999998
(pushnew 16.385
pos 17.91
:test 78.927
(min 17.480999999999998
(/= 12.765
(dotimes 61.017
(i 58.445
(push 101.6
;; 31.866000000000003
this 44.631
(nreverse 18.196
= 92.359
collect 58.30199999999999
(nth 11.097999999999999
gf 14.861
(notinline 12.669999999999998
(gethash 96.122
(not 299.55899999999997
(prog1 10.05
it 46.68
(defgeneric 48.870999999999995
(:method 17.195
has 22.435000000000002
((name 30.246
(info 35.438
:type 161.04500000000002
(name) 22.578
(member 89.977
type 106.12499999999999
type) 52.11000000000001
(multiple-value-bind 137.75199999999998
until 11.575
from 87.358
first 17.957
(second 55.92
(warn 13.289000000000001
(handler-case 29.150999999999996
nil))) 70.353
(first 118.366
(unwind-protect 20.244
(cdr 142.468
(car 169.476
(c) 22.721
(remove 13.813
arguments 11.812999999999999
(mapcar 63.256
class) 19.767
class)) 12.289000000000001
(class 15.956999999999999
(return-from 94.502
(mapc 11.241
sequence 40.535000000000004
character 22.911
but 20.196
array 38.63
or 63.684
symbol 63.732000000000006
(complex 17.291
float 14.623
number 39.629999999999995
(integer 41.154
(cons 102.31400000000001
null) 14.814
(string 43.345
vector 32.676
(eql 224.34799999999998
(function 45.964999999999996
n) 32.532999999999994
at 23.625999999999998
n)) 13.147000000000002
arg) 26.293
t 270.694
1) 132.608
w 11.718
(&rest 34.39
args))) 13.147000000000002
(x 79.16499999999999
y) 75.688
x) 123.89099999999999
x 223.395
y))) 19.958000000000002
y)) 41.773
y 86.167
y)))) 10.812999999999999
t)))) 27.389
(defvar 115.27
((or 43.012
type)) 29.723
~S" 48.918
type))) 17.052
(type) 13.242
(case 49.204
(boundp 12.575
(cadr 24.912
spec) 12.669999999999998
((class 16.767
(cddr 16.195
(list) 13.242
c 45.917
list)) 16.957
((value 12.623
(defmacro 85.309
object) 46.727
(form) 20.863000000000003
form) 89.02499999999999
,@(mapcar 10.765
(list* 15.479999999999999
(block 23.387
(position 26.436
(labels 31.389999999999997
position 12.432
(funcall 175.096
(append 28.102999999999998
(the 53.300000000000004
10) 18.767
(last 10.527
"The 30.580000000000002
key 64.256
last 10.384
(1- 68.82900000000001
((= 23.435
(key 16.147000000000002
info 22.911
default 13.766
(ecase 48.585
(locally 11.289
(optimize 53.158
3))) 24.721
form)))) 12.908000000000001
(gensym))) 10.336
form))) 26.197999999999997
(gensym 21.482
(form 33.056999999999995
form 66.209
c))) 10.145999999999999
key) 22.34
(make-hash-table 23.292
table) 12.099
`(lambda 58.111000000000004
((a 16.243
(a 33.009
a) 19.339
~S~%" 13.337
object 89.93
object)) 24.292
(typecase 23.625999999999998
(safety 19.672
0))) 65.875
(nth-value 19.482
3 62.303
info) 31.628
(x) 101.742
x))) 40.440000000000005
:key 49.346999999999994
1)) 75.164
:name 68.733
var) 15.719000000000001
(string= 29.865000000000002
var 23.34
rest 12.099
(collect 10.098
(logior 50.109
(defpackage 21.816000000000003
(:use 26.341
(declaim 80.832
(eval-when 24.483000000000004
(:compile-toplevel 20.339
:execute) 21.911
(symbol-value 12.48
0)))) 17.291
x)))) 17.814
(+ 221.204
(eval 36.153
form)) 52.729000000000006
x)) 75.116
(listp 23.387
when 47.108000000000004
(assert 342.09499999999997
(destructuring-bind 32.342
(rest 45.394
body 19.148
(endp 10.289
(ignorable 20.814999999999998
(value 55.586999999999996
(defclass 64.875
'())) 18.148
(make-instance 136.943
uses 11.145999999999999
"Return 52.538
true 10.336
if 75.735
all 29.961000000000002
are 52.11000000000001
only 15.242
used 19.005000000000003
out 15.862
(defstruct 40.345
(defparameter 31.247000000000003
i) 60.445
(third 15.338
i)))) 11.194
predicate 12.48
result 80.832
:destination 22.387
:value 15.908999999999999
:opcode 17.862
:operands 13.242
:inputs 12.48
:outputs 12.432
inst 18.480999999999998
backend-function 10.527
inst) 14.527999999999999
'(or 14.861
r 29.483999999999998
reg 17.814
result)) 24.007
result) 35.629
do 82.88
'() 12.384
next 21.195999999999998
component 14.385
component)) 11.908000000000001
component) 16.671
(fun 17.005000000000003
fun)) 14.433
kind 27.055
(values)) 30.389000000000003
res) 10.765
node 41.869
node)) 16.480999999999998
(var 10.622
thing 13.289000000000001
lambda 10.289
#+nil 10.574
entry 15.814
(zerop 58.064
(< 51.062000000000005
safety 10.86
3)) 28.579
(> 41.107
speed 20.148
env) 42.726
info)) 14.861
env)) 19.339
block)) 11.622
block 36.058
lvar 14.290000000000001
node) 28.532
(etypecase 28.055000000000003
nil))))) 14.433
while 20.577
code 45.917
,@(loop 10.955
code) 15.195
`(progn 36.534
((result 19.72
block) 22.054
:output 23.149
#+win32 11.479000000000001
8 55.015
16 20.863000000000003
#+(or 18.005000000000003
x86 11.097999999999999
(define-alien-routine 12.813
int 21.244
(with-test 165.284
(:name 181.43099999999998
(ignore-errors 26.245
(deftype 12.956
0 279.506
:load-toplevel 19.148
(defconstant 178.716
32)) 15.242
(:constructor 17.672
(byte 101.838
(- 179.28799999999998
-1) 19.72
(unsigned-byte 49.823
2 147.231
(&optional 38.916
0) 258.691
(max 21.244
3) 56.778000000000006
current 29.199
If 37.01
NIL 24.054
any 15.290000000000001
"~S 20.291
should 18.291
(expt 13.242
(* 162.95000000000002
(plusp 18.148
(:copier 16.528
:read-only 23.816000000000003
(documentation 11.383999999999999
index 92.454
below 23.292
(logbitp 16.576
(mod 12.003
(minusp 12.861
index) 56.539
(elt 20.196
index)) 23.435
index))) 11.765
(ldb 77.831
value) 54.11
value)) 34.581
1 226.73
(ftype 22.054
#-sb-xc-host 12.289000000000001
i 95.312
(ash 127.46400000000001
fixnum 46.727
2))) 23.864
2)) 47.061
-1 15.147000000000002
across 10.955
(svref 46.823
number) 13.527999999999999
(1+ 91.35900000000001
size) 18.1
(replace 10.098
(make-array 67.161
size 33.295
:initial-element 27.436000000000003
((x 42.059
symbol) 38.201
(find 27.007
null)) 16.480999999999998
((not 38.487
use 20.958000000000002
value))) 16.29
(:documentation 22.435000000000002
string 95.646
set 13.147000000000002
you 14.527999999999999
old 23.864
pathname) 15.242
can 27.055
one 20.814999999999998
mode 16.29
(buffer 25.769
(with-open-file 26.436
(f 13.766
path) 13.098999999999998
:direction 23.625999999999998
:if-exists 16.385
f 24.531
symbols 11.289
n 41.059000000000005
o 10.003
p 34.39
v 11.812999999999999
list) 36.391
op 12.765
lhs 13.289000000000001
prefix 13.766
exp) 10.05
+ 16.243
- 22.53
d 17.195
* 80.594
(/ 40.535000000000004
#'(lambda 28.055000000000003
file 31.913999999999998
its 15.433
that 62.97
(integerp 11.051
fn 21.339
then 27.246
return 36.248
(result 23.864
result)))) 11.097999999999999
where 10.336
each 12.194
1))) 34.724000000000004
(1 20.006
(decf 20.672
item 15.433
((eql 36.915
(2 10.384
(n 15.862
k 10.908000000000001
1)))) 11.097999999999999
(y 23.435
(vop 10.003
(any-reg 10.955
val 14.623
(inst 171.762
(move 24.769000000000002
(symbol 27.483999999999998
(char-code 18.577
val) 11.051
5) 21.053
(define-vop 57.826
(:args 41.583
:target 26.293
:scs 97.36
:load-if 10.241
(:results 34.676
(:generator 48.775
(sc-is 12.861
(:arg-types 27.293
(:note 14.385
word 12.099
(:temporary 31.199
(:scs 13.669999999999998
temp) 14.814
4 52.062
temp 34.914
(:result-types 21.863
:from 20.101
(:argument 10.717
(:sc 18.862
:offset 15.862
integer 26.341
bit 10.241
bits 15.671000000000001
vop) 21.053
vop 12.669999999999998
cons 10.384
test 37.629
(do 44.821999999999996
(test 46.202999999999996
T 11.527
(object) 13.098999999999998
returns 11.86
error 16.195
length 32.485
((i 11.575
result))) 13.766
(go 20.72
same 10.812999999999999
i)) 35.534
i))) 27.722
rest) 10.765
(truly-the 21.911
arg)) 12.051
(index 23.721
((< 12.956
count 36.058
length) 13.575
which 24.435
may 14.433
(reverse 12.337000000000002
given 10.384
more 11.765
before 11.956
(<= 38.82
((s 13.669999999999998
key)) 11.336
(inline 44.346000000000004
(assoc 17.767
element 14.242
(object 29.055999999999997
v) 14.385
res 33.581
. 161.14000000000001
data 24.578000000000003
keys 13.48
does 12.051
(res 15.098999999999998
~A 20.006
function)) 15.242
(char= 12.003
(char 30.198999999999998
(subseq 33.009
(body 14.004
,@(when 19.91
target) 10.86
slot 20.529
slot-name) 10.574
:class 10.717
5 38.343999999999994
((info 10.241
"* 18.243
location 14.385
instance 22.054
object))) 13.623
t))))) 13.193999999999999
(end 11.097999999999999
end)) 21.435000000000002
slots 10.812999999999999
(vector 19.72
slot) 12.718000000000002
(slot 17.576
after 12.384
(aref 127.22600000000001
count) 20.577
(:export 16.767
will 26.197999999999997
we 13.48
output 16.814
values 19.148
input 21.625
connection) 11.622
(string) 11.336
stream 161.759
This 18.958000000000002
:external-format 17.576
thread) 19.767
target 15.242
@ 10.003
(find-package 15.004
string)) 13.956
variable 12.861
p) 23.054
"A 10.145999999999999
stream) 142.18200000000002
(stream 48.68
((stream 31.150999999999996
=> 16.909
(symbol-name 16.624000000000002
(intern 14.908999999999999
(check-type 50.061
(define-key 23.673
(define-command 36.439
(compile 27.96
(checked-compile-and-assert 28.055000000000003
'(lambda 32.771
(condition 15.147000000000002
(single-float 10.145999999999999
(double-float 10.527
10 24.102
(map 12.432
:element-type 51.205
(() 10.193
(read-from-string 15.385
4) 37.82
(simple-array 19.72
(checked-compile 40.535000000000004
(random 14.575
8)) 24.245
r) 10.67
a)) 12.289000000000001
:cl 10.622
(deftest 17.243
(sleep 12.861
(ok 30.866
4)) 16.767
state 25.293
:initform 44.774
s)) 18.719
:start 28.913
start) 24.388
symbol)) 16.243
call 18.719
(print-unreadable-object 13.909
((instruction 17.719
instruction 15.052
((typep 11.241
" 148.565
instruction) 21.195999999999998
:accessor 51.157000000000004
'()) 22.244
:source 21.195999999999998
:x9 10.67
(>= 29.961000000000002
version 15.147000000000002
(defimplementation 40.63
host 10.241
external-format 10.527
(stream) 17.957
(condition) 13.147000000000002
condition 17.814
condition) 18.291
(with-output-to-string 16.767
c)) 16.719
(handler-bind 17.862
buffer 55.015
filename 11.718
line 26.484
(write-string 21.006
names 10.431
offset) 35.677
(symbol) 10.86
package)) 10.098
frame 17.005000000000003
context) 11.003
frame) 17.862
context 23.245
stream)))) 14.718000000000002
name))) 28.675
vars 10.241
(multiple-value-list 10.003
source 24.197
~A" 14.194
((type 12.051
source) 10.145999999999999
(pathname 14.385
obj) 10.622
sym 11.765
:variable 10.193
`(setf 10.193
(count 12.194
((f 11.575
((object 19.101
id 12.813
(&key 19.72
thread 25.912
(merge-pathnames 22.959
A 25.912
print-object 13.813
(write-char 24.721
:stream 17.195
stream)) 56.254000000000005
(load 11.432
(sys.int::defglobal 12.575
(coerce 30.198999999999998
(truncate 24.864
2) 75.164
integer) 14.575
"Returns 11.051
(true-or-false? 10.098
____ 30.818
'(1 18.053
(equalp 12.432
-1)) 12.194
6 22.149
:skipped-on 12.146
b) 25.912
char 28.721999999999998
(code-char 21.244
char) 16.719
"" 10.003
:fill-pointer 14.861
") 12.003
:identity 10.908000000000001
address 27.578999999999997
b 50.443000000000005
8) 54.539
12) 10.527
16) 26.055000000000003
b)) 14.527999999999999
window) 16.671
(throw 10.241
(window 11.479000000000001
(catch 10.193
window 15.338
frame)) 11.194
(make-pathname 17.529
stream))) 36.486
#-(or 13.147000000000002
pathname 31.628
(logtest 13.669999999999998
env))) 10.098
'(cons 16.528
env 26.387999999999998
forms) 10.336
tag 11.479000000000001
,(if 21.244
'(unsigned-byte 27.246
:adjustable 10.003
image 18.529
environment) 11.289
(logand 39.582
(offset 11.622
offset)) 15.862
(vector-push-extend 14.623
offset 54.77700000000001
8))) 13.004
(start 26.245
start 115.12700000000001
environment 22.53
(signed-byte 15.004
32 16.862
16)) 14.623
byte 13.147000000000002
str 16.957
64) 12.623
element-type 13.004
array) 12.956
character) 10.289
single-float) 11.336
32) 28.532
6) 12.908000000000001
obj 10.431
seq 12.765
((buffer 14.527999999999999
(point 10.955
buffer))) 12.194
buffer) 35.153
point 42.154999999999994
point) 21.625
(with-point 14.527999999999999
point)) 15.385
buffer)) 19.101
(variable-value 16.195
(point) 11.383999999999999
:do 18.291
(current-point) 10.574
table 11.765
have 14.098999999999998
(r 13.242
package 26.484
:from-end 10.67
(specifier-type 42.25
(context 10.955
(:include 10.289
(speed 16.195
(space 10.145999999999999
:end 24.959
end) 47.061
(lvar-value 14.385
(lvar-type 11.956
(csubtypep 11.479000000000001
(array 18.291
(frob 20.768
from-end 16.862
(opt 10.193
path 22.435000000000002
&aux 14.623
(namestring 13.004
directory 20.387
(read-char 10.384
system 12.956
p)) 11.241
start)) 11.432
file) 12.908000000000001
:for 27.15
:= 13.098999999999998
:in 10.86
pathname)) 11.336
sap 20.339
*) 14.147000000000002
:kind 27.15
(:translate 37.487
(:policy 28.102999999999998
:fast-safe) 26.293
(:info 13.766
(:constant 11.575
(call 13.193999999999999
e 10.384
(assert-error 31.628
(read 10.098
-> 12.289000000000001
finally 14.575
((form 23.673
| 11.336
operation 10.86
(cas 12.289000000000001
(*)) 12.956
foo 12.337000000000002
repeat 12.861
(debug 11.765
:input 10.86
(subtypep 23.864
package) 18.719
base 21.911
#-win32 14.575
device) 10.193
device 19.339
(sup:debug-print-line 13.861
width 18.433999999999997
7 13.623
(s) 12.099
format 12.48
(concatenate 11.86
'string 12.003
(search 19.386
(file-position 12.669999999999998
(sm 20.814999999999998
(arguments 12.051
:field 13.861
entry) 10.765
(b 14.527999999999999
s))) 14.623
sequence) 12.241
(floor 10.574
(assert-equal 23.435
(dpb 15.290000000000001
0.0 17.862
buf 21.816000000000003
command 10.908000000000001
src 18.148
src) 10.289
type1 10.908000000000001
type2) 10.955
double-float 12.908000000000001
single-float 17.052
(float 20.339
addi 10.86
(add-color 12.194
(make-string 10.336
:to 13.385
(ea 12.384
mov 11.622
(defknown 41.821000000000005
1.0 13.004
9 11.194
WITH 42.774
255 10.145999999999999
(reg 16.433
reg) 12.48
(gcd 20.72
(struct 18.577
bignum 10.145999999999999
packet 10.098
:sym 11.145999999999999
(export-always 11.051
tn) 12.575
tn 15.098999999999998
(emit 71.734
'ir:virtual-register 13.432
rhs 11.336
(:gc 13.147000000000002
(sys.lap-x86:mov64 13.337
:rax 10.717
(:object 10.384
(deftransform 18.005000000000003
(segment 14.908999999999999
segment 30.913
dst 28.008
hash-table) 10.145999999999999
(:li 11.383999999999999
:lisp) 34.105000000000004
AND 20.72
#.(ash 10.145999999999999
(write-byte 10.908000000000001
LATIN 41.059000000000005
CAPITAL 38.677
LETTER 92.07300000000001
SMALL 43.822
DOUBLE 19.148
BOX 22.006
DRAWINGS 22.006
SINGLE 10.05
GREEK 13.766
CYRILLIC 27.722
(:integer 17.338
(:emitter 10.908000000000001
Form: 13.766
Context: 16.243
EVAL 13.432
#x66 21.291999999999998
:TYPE 21.244
(control-char 13.813
:DOCUMENTATION 18.814999999999998
xp) 10.955
(define-instruction 14.242
(make-key 10.431
(:star 12.861
(define-caller-pattern 36.629000000000005
:INITARG 18.433999999999997
:READER 18.433999999999997
// JavaScript
'usestrict'; 134.508
constcommon 71.997
common= 72.439
=require('../common'); 65.681
constassert 73.141
assert= 74.441
=require('assert'); 73.635
const{ 143.03300000000002
}= 155.379
for(const 49.38399999999999
child= 17.102999999999998
=''; 33.711
={ 240.216
(){ 120.65400000000001
p= 17.908
'package.json':JSON.stringify({ 11.956
version:'1.0.0', 11.852
t=> 23.133
=>{ 894.7159999999999
res= 21.625
=await 59.02700000000001
=true 21.859
=false 18.375999999999998
=0 16.687
tothe 10.059
constfs 15.231000000000002
fs= 16.895
module.exports= 89.854
()=> 691.408
constfixtures 12.84
fixtures= 12.84
=require('../common/fixtures'); 12.866
code:'ERR_INVALID_ARG_TYPE', 12.58
isnot 29.787
{return 162.735
returnnull; 44.186
}}; 24.146
consta 10.501
a= 81.38000000000001
=[]; 118.809
o= 30.748
={}; 88.684
s= 17.025
=undefined; 23.211
n= 12.658
=null; 91.621
exception= 11.514
=0; 423.40700000000004
=10; 10.865
try{ 148.77700000000002
source= 11.021
"+ 79.535
"\n"+ 48.657000000000004
-1){ 16.115
}else 459.12
elseif 147.86700000000002
else{ 342.364
}catch 114.754
catch(e) 82.394
(e){ 77.3
thrownew 135.339
{// 24.016000000000002
!==null) 40.468999999999994
null){ 84.188
shouldbe 18.506
=function() 39.169999999999995
function(){ 116.02699999999999
varo 20.352
asyncfunction 38.832
constinstance 10.761
instance= 24.12
=new 438.56
setTimeout(()=> 12.527999999999999
arr= 10.786999999999999
import{ 45.797999999999995
}from 52.114000000000004
for(let 85.773
(leti 57.44199999999999
i= 192.781
=0, 125.359
i< 171.05200000000002
i++){ 109.166
!==null 19.104
null&& 22.924999999999997
staticget 11.357999999999999
if(typeof 94.506
==='string') 14.425
'string'){ 18.168
===0) 33.451
0){ 180.799
=null 15.725
constcontainer 18.922
container= 22.535
=() 51.594
='' 11.280000000000001
>0) 45.486000000000004
0;i 148.699
parent= 13.308
data= 26.278
==='object' 10.812999999999999
'object'&& 11.825999999999999
&&typeof 21.261000000000003
'undefined'){ 10.397
===null 16.947
exportdefault 24.874000000000002
if(!common.hasCrypto) 16.141
common.skip('missingcrypto'); 15.933000000000002
constoptions 11.514
options= 28.616999999999997
common.mustCall(()=> 38.519999999999996
=[ 48.241
=-1; 18.584
=false; 129.595
constclient 10.293000000000001
client= 10.839
=true; 140.98
returnfalse; 51.984
returntrue; 40.573
extendsReact.Component 42.705
React.Component{ 42.107
state= 17.128999999999998
render(){ 45.797999999999995
return( 48.345
buffer= 10.163
=[1, 11.825999999999999
1,1, 15.673
name:'TypeError', 13.048000000000002
mustbe 30.721999999999998
assert.throws(()=> 35.531
if(__DEV__) 28.643
(__DEV__){ 28.461
==='function') 22.613
'function'){ 25.862
!=null) 15.673
return1; 15.153
0,0, 28.773
if( 38.78
){ 79.717
==null 14.166
null? 16.765
null|| 14.841
constpath 16.479
path= 28.980999999999998
exportfunction 45.226
doesnot 12.45
exportconst 35.687000000000005
void{ 18.818
importtype 20.3
'+ 183.892
|null, 12.138
==='function' 13.152
if(value 10.370999999999999
===null) 27.706999999999997
=value; 12.58
tobe 17.389
bea 14.451
returna 22.743000000000002
null| 10.631
|null 10.786999999999999
key= 23.938
return0; 21.416999999999998
if(process.env.NODE_ENV 10.215
functionf() 23.471
f(){ 24.796
vara 33.114
for(var 155.015
(vari 105.03299999999999
=function 112.908
function() 48.085
"usestrict"; 33.788999999999994
callback){ 11.383999999999999
=typeof 15.959000000000001
keys= 10.059
g= 12.918000000000001
re= 10.735
=require('net'); 10.397
constserver 26.902
server= 28.175
message:'The 10.319
constreq 13.957999999999998
req= 15.673
x= 150.311
x+ 12.632
x+= 14.945
+1; 25.108
=1; 152.494
y= 22.847
returnx 11.93
returnx; 10.033
m= 11.878
c= 31.788
=3; 19.572
=i; 15.101
d= 13.802000000000001
=4; 12.501999999999999
}catch(e) 14.633
catch(e){ 13.516
f= 24.38
functionfoo() 15.543
foo(){ 20.274
varx 22.639
++i){ 32.88
from'react'; 12.398
result= 72.517
constresult 11.722000000000001
+' 46.161
=>({ 10.969
it('shouldnot 12.632
value= 32.23
+1 31.398
+1); 12.164
=require('path'); 14.373000000000001
}){ 16.297
===0 13.931999999999999
0? 21.911
=2; 30.748
y){ 10.137
{} 16.791
return{ 64.408
"useasm"; 12.371999999999998
=""; 11.306000000000001
func= 15.568999999999999
[1,2, 19.259999999999998
expect(()=> 29.449
=require('http'); 10.370999999999999
array= 17.804
0&& 16.297
-1; 15.673
options){ 14.684999999999999
builder= 24.562
newWasmModuleBuilder(); 24.666
expected= 14.581
=require('fs'); 15.075000000000001
stream= 13.36
true}); 22.457
err= 15.855
varresult 20.975
i+ 12.709999999999999
},{ 31.372000000000003
vari 10.891
=42; 17.778
assertThrows(function(){ 30.773999999999997
{name: 17.622
{value: 21.365
varb 11.799999999999999
b= 38.104
returntrue 12.216000000000001
fixtureEl.innerHTML= 13.464
returnfalse 11.566
done=> 22.639
shouldnot 10.709000000000001
notbe 10.189
=[] 10.865
assertThrows(()=> 42.471000000000004
=>new 14.088
1){ 37.714
name= 22.847
if(i 21.755
do{ 30.436
}while 29.787
<10; 10.163
for(i 17.596
(i= 16.843
obj= 21.416999999999998
length= 20.118
=>{}, 268.002
if(type 12.606
`+ 12.242
j= 16.297
|0) 274.967
0)== 89.048
0: 14.062
:0) 13.516
common.mustCall(function(){ 12.736
r= 16.192999999999998
returnnew 31.423999999999996
})=> 13.568
false){ 11.099
(function(){ 44.498
returnresult; 19.052
i+= 11.332
2){ 15.594999999999999
===undefined) 27.837
undefined){ 34.673
|0; 430.814
=' 11.202
!=0) 21.677
e= 18.662
async() 20.014
constructor(){ 12.268
+1, 10.683
v= 10.969
|0, 37.116
{if 22.352999999999998
(varkey 10.059
keyin 15.049000000000001
{var 11.982
}} 12.475999999999999
=this; 21.442999999999998
log= 16.141
===1) 11.748
1&& 10.163
{type: 12.892000000000001
(err){ 20.482
index= 24.9
||{}; 10.657
node= 29.449
true}, 16.921
0;j 10.943
j< 12.475999999999999
inthe 15.309000000000001
b){ 21.599
throwe; 10.111
args= 13.438
2,3, 24.77
3,4, 15.959000000000001
act(()=> 20.638
ofthe 13.308
id= 10.137
start= 10.215
==0) 46.187000000000005
l= 13.542
result+= 11.774
1,2, 11.956
},TypeError); 25.264
data:{ 20.612000000000002
ret= 24.016000000000002
target= 10.423
.then(()=> 18.714
0|| 11.047
>>1] 14.658999999999999
=i 10.059
1]= 10.579
returnthis; 12.944
2]= 187.349
cb){ 15.517
false,false, 10.111
==null) 11.93
<0) 13.957999999999998
===undefined 15.257000000000001
undefined&& 12.086
!==undefined 13.542
varindex 11.748
get:function 10.553
vm= 24.224
+" 22.352999999999998
enumerable:true, 14.658999999999999
name+ 11.073
type= 13.282
}finally 21.365
finally{ 21.651
value){ 11.202
'' 14.373000000000001
0)+ 53.465
+=' 36.699999999999996
!==undefined) 23.211
>0 10.059
{throw 16.739
exporttype 11.566
useEffect(()=> 11.254
0< 25.653999999999996
out+= 45.849999999999994
defaultfunction 11.073
=document.createElement('div'); 26.564
root= 15.803
>>>0) 20.741
(err)=> 15.568999999999999
[]}, 12.709999999999999
kExprLocalGet,0, 12.632
returnret; 10.709000000000001
(()=> 12.658
0x00,0x00, 24.016000000000002
0]= 14.763
x^= 11.514
/>,container); 18.323999999999998
a+ 23.159
}// 15.959000000000001
letbuilder 10.657
={} 11.357999999999999
>>>0 41.145
0> 10.553
constvm 19.702
newVue({ 20.638
}).then(()=> 10.423
length){ 11.047
constroot 11.956
if(err) 21.833000000000002
while(1) 16.037000000000003
(1){ 16.011000000000003
2)| 10.553
|0)) 27.967
e=> 10.137
i1= 36.285000000000004
vari2 12.008000000000001
i2= 54.92099999999999
i3= 54.557
', 11.280000000000001
0)){ 30.41
>>2]; 53.673
{id: 13.905999999999999
1| 23.990000000000002
assertEquals(0,x 33.373000000000005
x/= 10.943
(tmp= 23.86
x*= 10.449
x-= 10.241
x>>>= 10.943
x|= 10.605
((tmp= 10.319
x<<= 10.137
x&= 10.527
x%= 12.709999999999999
x>>= 11.073
,, 5961.068
,1,,1, 21.833000000000002
solution:null, 12.709999999999999
i4= 49.82600000000001
=i4 20.638
i4| 11.488
i5= 44.836000000000006
=i5 16.609
i5| 10.475
0)| 28.149
>>2] 406.04400000000004
+8 53.958999999999996
8>> 36.233000000000004
i32= 10.007
peg$currPos= 11.774
s0= 13.698
!==peg$FAILED) 11.774
peg$FAILED){ 14.581
=peg$FAILED; 16.063000000000002
o.f();o.f(); 18.298000000000002
|0] 31.112000000000002
0]| 12.892000000000001
+4 55.804
b;a 33.218
,true,true 14.710999999999999
0)>>> 19.442
0)< 11.54
0)> 13.177999999999999
files:[] 28.070999999999998
2]| 198.941
<<2) 19.754
i8= 32.516
i16= 12.97
4| 13.100000000000001
16| 16.453
+"a" 47.825
"a"+ 50.007999999999996
=i1 33.581
i1| 22.977
i10= 23.055
<<4) 11.073
while(0); 14.373000000000001
+16 27.706999999999997
+0 11.488
2]& 10.605
24>> 14.945
16>> 14.062
x,x, 26.174
STACKTOP= 54.843
8| 18.662
=STACKTOP; 19.442
10;a 25.732
=0.0, 13.411999999999999
=i3 23.445
i3| 12.216000000000001
i6= 40.547
i7= 38.78
i9= 27.317
i11= 19.338
i12= 21.859
i13= 20.819
i14= 15.647
i15= 15.491
i17= 11.748
i18= 11.748
=i1; 25.394000000000002
4>> 42.757
i3+ 13.542
i2| 11.644
=i7 15.257000000000001
i7+ 10.241
0)!= 39.013999999999996
i4+ 11.748
=i2 25.238000000000003
i2+ 13.983999999999998
HEAP32[i3>> 12.684
i1+ 12.06
=i2; 29.293
+24 12.632
=i6 11.93
(this.props.x=== 12.996
12| 10.657
+-1 10.969
if(this.props.x 12.944
*/\n"+ 12.475999999999999
"s"+ 10.397
+12 26.772
12>> 19.364
+20 14.658999999999999
=i3; 14.062
=i12 10.007
=HEAP32[i5 11.904
HEAP32[i5>> 13.931999999999999
HEAP32[i7+ 10.397
=HEAP32[i7 11.774
i5+ 10.319
HEAP32[i5+ 11.254
=i5; 10.553
=HEAP32[i3 10.943
HEAP32[i3+ 13.828000000000001
HEAP32[i6>> 10.969
HEAP32[i4>> 17.726
=HEAP32[i4 11.618
HEAP32[i2+ 14.218
0>> 10.084999999999999
0.0,0.0, 24.12
except,except, 18.272000000000002
if(e.message.length 12.996
(e.message.length> 12.996
{print 12.996
print(e.message); 12.996
(e.message);} 12.996
{\n\"key\": 31.372000000000003
'use 105.43900000000001
strict'; 104.18700000000001
const 1789.128
common 54.443999999999996
= 6814.438
require('../common'); 64.596
assert 56.27400000000001
require('assert'); 54.635999999999996
{ 5592.075
} 863.855
for 322.771
(const 39.513
args 14.391
of 141.696
child 21.519000000000002
}); 631.111
let 417.34399999999994
''; 34.639
+= 187.548
0); 78.93
})); 94.361
}, 269.213
1); 65.213
t 29.148
false, 91.722
get 45.196
() 606.047
return 1385.289
p 20.094
JSON.stringify({ 10.191
name: 85.615
version: 16.51
a: 25.815
b: 17.242
}), 47.662
foo: 13.929
'foo', 11.982999999999999
async 74.923
=> 1235.27
res 28.762999999999998
await 142.043
null) 75.732
'should 18.956999999999997
and 53.556999999999995
t.end() 17.185
as 41.883
true 103.78200000000001
with 74.691
no 19.439
false 60.011
0 142.659
print 11.521
only 13.004
to 130.715
the 146.628
that 27.838
|| 343.404
=== 618.088
fs 13.023
&& 446.145
* 142.659
| 734.2379999999999
module.exports 66.812
? 267.92199999999997
: 301.232
size 16.317999999999998
< 273.432
code: 51.32300000000001
is 115.438
not 105.689
an 47.219
[]); 15.700999999999999
{}); 19.997
[], 34.678
file 15.951999999999998
null; 116.285
}; 93.687
true); 47.951
null); 18.379
2 43.713
** 11.058
a 300.75
[]; 98.908
o 28.705000000000002
{}; 89.85300000000001
function 1055.7759999999998
{} 72.572
s 19.477
undefined; 29.052
n 23.137999999999998
a, 12.022
c, 10.962
var 1225.7530000000002
exception 10.153
0; 680.874
10; 40.284
try 113.241
if 1643.675
== 202.34300000000002
!= 86.52
0, 270.851
stack 10.23
source 15.817000000000002
" 170.228
+ 1597.265
> 127.53599999999999
"\n" 36.199000000000005
!== 275.012
-1) 18.590999999999998
else 391.73999999999995
catch 88.081
(e) 64.63499999999999
e; 14.796000000000001
debugger; 10.037
1 92.088
throw 177.144
new 580.3670000000001
expected 22.694
type 79.546
but 16.876
instanceof 39.629
e 30.823999999999998
more 10.423
one 13.813
instance 24.891
void 38.319
have 24.679
static 32.038
method 11.0
extends 61.244
use 20.961
on 43.077000000000005
in 171.80800000000002
should 36.238
be 84.786
you 14.796000000000001
or 43.617
are 23.118
can 15.585999999999999
test 13.505
function() 97.155
1, 123.471
server 23.965999999999998
was 15.951999999999998
after 15.046
i) 12.908000000000001
0)); 13.023
assertEquals(2, 26.548000000000002
1)); 11.232
import 119.811
from 147.861
true, 115.861
'' 25.835
class 91.086
(let 65.174
i 313.697
len 10.211
i++) 91.703
null 94.747
(typeof 76.348
'string') 15.951999999999998
0) 379.468
container 18.437
true) 11.848
false) 11.906
config 13.64
string 23.253
parent 20.479
data 40.939
'object' 11.597999999999999
typeof 69.93299999999999
'string' 10.018
export 97.309
default 24.563
(!common.hasCrypto) 12.06
common.skip('missing 12.502999999999998
crypto'); 11.982999999999999
options 33.483
key: 19.535
port: 14.584
common.mustCall(() 28.551
[ 119.54100000000001
-1; 24.197
1) 53.808
% 24.332
false; 138.96
client 10.153
true; 140.232
%PrepareFunctionForOptimization(foo); 19.901
- 185.679
%OptimizeFunctionOnNextCall(foo); 19.034
React 19.014999999999997
n; 10.827
React.Component 31.865000000000002
state 21.25
render() 34.061
( 111.604
<div> 17.531
</div> 22.251
buffer 10.962
[1, 26.278
4); 11.328
assert.strictEqual( 12.850000000000001
message: 45.196
argument 12.831
must 32.346000000000004
assert.throws(() 26.336000000000002
(__DEV__) 21.519000000000002
type, 14.064
delete 34.138
'function') 23.311
1; 182.789
) 72.70700000000001
path 31.268
children 12.233
return; 84.74799999999999
switch 28.666999999999998
case 177.106
break; 101.143
does 10.249
node 40.765
): 21.326999999999998
any): 11.694
' 260.197
error 22.868000000000002
by 20.055
console.error( 10.846
null, 82.07000000000001
'function' 12.561000000000002
& 104.726
ref 10.095
using 10.48
has 20.614
mode 10.981
current 11.848
value; 20.518
string, 15.238999999999999
object 22.733
component 16.395
render 27.01
valid 10.943
array 27.511000000000003
keys 10.769
/> 71.705
call 11.867
this 28.147
|= 17.975
while 104.03299999999999
number, 17.108
number 17.339
key, 24.987000000000002
key 51.631
key) 11.27
default: 25.256999999999998
continue; 22.54
will 10.962
yield 19.573999999999998
it 25.796
({ 19.342
index 33.753
undefined, 38.492000000000004
>= 60.011
<= 50.763999999999996
/ 62.843
end 16.144
-1 21.577
prop 12.06
f() 22.096999999999998
(var 116.03500000000001
2; 43.636
%PrepareFunctionForOptimization(f); 13.813
f(); 24.313000000000002
%OptimizeFunctionOnNextCall(f); 12.502999999999998
"use 36.315000000000005
strict"; 25.872999999999998
(t) 11.058
}) 43.925000000000004
g 13.485999999999999
'') 15.334999999999999
read: 10.846
property 14.776000000000002
element 18.206
event 13.774999999999999
type: 71.07
str 14.353
server.listen(0, 12.349
assert.throws( 18.495
'The 13.485999999999999
req 12.002
server.close(); 15.642999999999999
x 240.238
y 25.449
x; 28.147
assertEquals(3, 17.262
3; 29.765
m 10.48
a; 16.067
assertEquals(1, 48.491
b 47.47
c 44.811
i; 23.003
d 15.663
4; 18.302
assertEquals(4, 11.0
5; 14.486999999999998
catch(e) 11.251000000000001
f 24.409
foo() 17.994
++i) 30.266000000000002
foo(); 10.056
it('should 78.39
name 44.137
result 74.248
/>, 40.63
value 80.413
/>); 35.313
when 30.362
<div 41.863
update 10.48
/>; 25.642
require('path'); 10.673
'', 21.885
3 18.668
id: 37.394
false); 36.989
-1); 13.505
-1, 18.418
2, 89.93
3, 43.674
4, 32.480999999999995
5, 20.864
6, 15.104
8, 14.815
10, 13.350999999999999
""; 11.386
func 14.006
]); 42.864999999999995
3); 16.337
expect(() 21.828
do 28.551
url 10.711
value: 58.123
done: 12.155999999999999
1] 18.166999999999998
code 27.105999999999998
url: 11.559
node, 11.405
options) 16.568
builder 18.61
WasmModuleBuilder(); 18.283
module 12.985000000000001
x); 29.224999999999998
require('fs'); 11.193
stream 12.677000000000001
err 25.294999999999998
` 26.143
''); 16.144
16; 10.596
42; 22.038999999999998
assertThrows(function() 23.638
RangeError); 11.097
props 11.597999999999999
'<div 11.81
done 25.506999999999998
[] 38.299
foo 11.964
2) 37.837
path: 16.799
undefined); 18.649
constructor() 11.135
assertThrows(() 31.479000000000003
TypeError); 46.044
], 17.185
cb) 17.782
b, 19.323
expression: 15.104
})(); 93.95700000000001
output 16.684
set 23.831
(function 74.133
(i 36.199000000000005
gc(); 10.731
data: 26.47
obj 26.432000000000002
j 25.604000000000003
length 25.931
assertEquals(0, 54.309
{}, 236.135
(type 10.5
counter++; 21.018
r 14.776000000000002
continue 10.384
2); 26.047
<span 16.125
Object.defineProperty(exports, 11.675
data, 14.16
i, 12.888
(function() 33.098
result; 20.19
undefined) 39.475
kExprI32Const, 13.543
text 13.139
line 10.866000000000001
offset 13.389000000000001
b; 45.254
message 14.218
break 29.534
offset, 10.904
get: 21.943
assertEquals(undefined, 20.44
this; 26.875
<< 79.084
assertEquals(42, 14.102
>>> 87.869
>> 382.031
^ 11.212
v 24.679
4 55.58
8 48.683
5 11.559
*= 10.365
i); 11.81
log 15.605
', 10.962
next 14.776000000000002
b) 22.887
id 14.313999999999998
value, 20.171
(err) 35.66
name, 24.948999999999998
name); 10.866000000000001
[{ 12.522
options); 12.311
context 12.985000000000001
kExprLocalGet, 20.961
called 15.700999999999999
", 22.656
, 4591.456
act(() 15.296999999999999
<Suspense 10.211
'div', 10.654
start 17.223
res) 11.867
l 14.121
at 15.700999999999999
input 11.521
2]; 42.075
v; 10.344999999999999
(new 14.372000000000002
{x: 12.253
A 15.566
C 19.246000000000002
ret 25.122000000000003
target 12.908000000000001
.then(() 13.871
0] 24.043
4) 18.668
-= 15.489
8; 10.442
0)) 25.661
2] 302.84999999999997
h 11.559
configurable: 16.356
enumerable: 20.614
g(); 22.078
undefined 37.471
val 15.642999999999999
opts 10.5
warn 10.634
vm 20.845
warn( 11.135
root 20.113
value) 10.808
finally 17.185
first 10.249
tag 11.463000000000001
index, 11.501
/* 35.679
callback 11.386
create 10.384
'; 35.756
ch 10.981
3) 13.698
*/ 19.169
document.createElement('div'); 19.997
SyntaxError); 13.505
out 50.166999999999994
16 29.610999999999997
`); 10.654
ReactDOM.render( 11.482
container, 10.731
0x00, 36.604
^= 11.559
<Child 10.018
container); 16.896
x, 31.017000000000003
&= 12.638
(1) 12.542
o.f(); 15.566
except, 21.519000000000002
files: 22.174
i32 14.776000000000002
Vue({ 15.836
template: 20.807000000000002
}).$mount() 10.846
"a" 38.087
12 24.371000000000002
k 10.711
{\n 24.351
i1 54.712999999999994
i2 64.15299999999999
i3 64.327
(0); 10.654
0.0, 30.208
20 12.426
solution: 12.444999999999999
challengeType: 10.827
(tmp 17.859
tmp)); 17.666
24 18.938000000000002
,1, 19.573999999999998
i4 58.894000000000005
i5 51.554
0}function 11.02
completedDate: 21.211
peg$currPos 11.328
s0 11.906
peg$FAILED) 10.808
peg$FAILED; 11.906
,true 14.372000000000002
i8 33.734
i16 13.774999999999999
i10 25.16
STACKTOP; 14.603000000000002
STACKTOP 45.678
HEAP32[i1 10.056
i6 44.715
i7 44.098
i9 28.204
i11 21.326999999999998
i12 27.607
i13 21.943
i14 15.932000000000002
i15 16.721999999999998
i17 13.600999999999999
i18 13.216000000000001
i19 10.442
i1; 18.976
HEAP32[i2 17.589
HEAP32[i3 19.651
i2; 22.54
i3; 11.887
HEAP32[i5 18.668
_abort(); 10.615
HEAP32[i7 15.085
HEAP32[i6 14.41
HEAP32[i4 19.689
\"key\": 23.253
\"value\": 23.253
},\ 23.233999999999998
// Rust
fnmain() 636.067
main(){ 450.628
{} 148.78
let_ 175.432
_= 180.12900000000002
true{ 22.872999999999998
whilelet 21.903
loop{ 41.969
_=> 274.941
=>false, 43.552
=(); 25.886000000000003
x= 293.27099999999996
=0; 89.196
let_: 66.782
i32= 28.183
ERRORmismatched 28.388
mismatchedtypes 29.307
pubfn 810.9369999999999
fnfoo() 53.45700000000001
foo(){} 18.788999999999998
{}// 14.143
main(){} 182.42600000000002
()=> 34.106
()>{ 14.092
{}//~ 37.374
iflet 450.577
=0 10.007
_x= 18.074
=>{} 119.984
0{ 57.082
=&mut 53.559
}= 36.760999999999996
1{ 26.192
structFoo 20.423
Foo{ 115.44000000000001
implDrop 21.240000000000002
Dropfor 33.238
forFoo 16.185
fndrop(&mut 33.442
drop(&mutself) 33.34
self){ 50.342
implBar 10.058
useof 32.268
letx 256.816
=Foo 12.764
{x: 42.53
="rust1", 99.05000000000001
"rust1",since 98.897
since= 243.64399999999998
="1.0.0")] 111.1
externcrate 95.783
foo(){ 22.976
=x; 15.777000000000001
{.. 58.358
..} 88.022
2,3, 39.007
#[stable(feature= 213.62199999999999
#[unstable(feature= 53.660999999999994
issue= 71.02
="none")] 18.687
reason= 20.474
=>( 14.652999999999999
u32)-> 24.201
=>{ 641.938
extern"C" 64.68900000000001
"C"fn 27.162
->u32 32.83
u32{ 44.93
kind= 11.181000000000001
"C"{ 25.835
unsafefn 77.55499999999999
fnf() 25.784000000000002
f(){ 11.233
Box<_>= 10.467
=box 19.197
i= 18.328999999999997
lets 28.898
s= 38.65
letp 13.479000000000001
p= 18.891000000000002
=3; 14.755
letv 16.032
v= 30.328
u8= 23.282
letmut 628.1529999999999
>0 18.125
u32= 47.483
!=0 14.449
+=1; 48.249
usize= 52.64
userustc_hir 13.326
rustc_hiras 13.326
ashir; 13.275
usestd::fmt; 10.568999999999999
fmt::Debugfor 17.615
fnfmt(&self, 34.259
fmt(&self,f: 28.643
f:&mut 30.838
&mutfmt::Formatter<'_>) 28.898
fmt::Formatter<'_>)-> 29.0
->fmt::Result 35.229
fmt::Result{ 34.923
letname 15.879
name= 18.227
match*self 18.176
*self{ 19.401999999999997
}else 763.199
else{ 416.982
matchself 32.574
self{ 34.31
None=> 78.83200000000001
Err(e)=> 10.875
T>{ 29.051000000000002
impl<'a,'tcx> 16.645
=>return 44.113
}=> 96.03800000000001
F)-> 30.939999999999998
->Self 96.855
Self{ 117.32900000000001
whereT: 22.159
_)=> 51.464999999999996
=match 135.352
->bool 192.73999999999998
bool{ 187.838
letty 19.453
ty= 21.137999999999998
letval 10.262
val= 11.079
})=> 17.461000000000002
->&'static 23.741
)-> 221.025
=>match 28.337000000000003
=>None, 55.294999999999995
cannotbe 22.516
beused 12.1
&mutdyn 11.998
=if 106.913
letr 23.435
r= 28.081
={ 31.043
letx: 34.566
letf 16.747
f= 20.831
ERRORcannot 41.662
#[derive(Copy,Clone)] 24.916
unsafe{ 190.749
letresult 24.916
result= 36.455
bool)-> 22.872999999999998
{None 11.181000000000001
None} 10.977
=true; 50.342
=false; 36.455
pubstruct 241.29500000000002
structFoo; 19.657
pubtrait 78.73
traitBar 11.129999999999999
pubmod 48.3
#![crate_type= 31.553
unsafeimpl 13.427999999999999
A{ 40.743
u8{ 21.495
T{ 51.006
usize)-> 48.861
->usize 56.724
usize{ 57.439
{//~ 31.655
ERRORexpected 19.453
traitTrait 10.058
Iterator<Item= 22.261000000000003
Traitfor 12.458
implIterator<Item 12.254
impl<'a,T> 10.007
for&'a 12.458
&'amut 31.247000000000003
Foo{} 11.488
pubuse 42.786
usesuper::*; 11.335
=String::new(); 15.879
mustbe 14.807
&mutBencher) 11.896
Bencher){ 11.845
||{ 41.152
vec![1,2, 12.1
3,4, 22.872999999999998
4,5, 11.283999999999999
y= 41.56
x+ 11.845
+1 14.551
ifx 16.032
matchx 25.936999999999998
x{ 32.115
1=> 11.794
+1; 13.581
zzz();// 12.559999999999999
Target{ 17.666
traitFoo 27.928
{fn 25.069
Bar{ 30.583
forT 26.447
u8)-> 14.857999999999999
->u8 12.968
unsafeextern 12.968
=unsafe 50.802
bool= 26.855999999999998
=impl 11.283999999999999
T)-> 54.937
isnot 29.255999999999997
implFoo 38.905
fnnew() 21.189
self){} 11.896
isize)-> 13.122
modfoo 14.96
foo{ 25.631
userustc_middle::ty::{self, 13.990000000000002
'tcx>{ 38.037
tcx:TyCtxt<'tcx>, 33.902
&mutself, 59.992
elseif 349.74
Err(_)=> 11.794
){ 64.434
=None; 40.028999999999996
ofthe 17.461000000000002
self)-> 90.218
..}) 18.84
span:Span) 10.262
pub(crate)fn 43.092
item.kind{ 10.926
=>return, 14.96
_)= 39.11
c= 30.634
=self 16.593
span:Span, 36.199000000000005
="lib"] 17.257
#[lang= 13.836
Sized{ 12.407
pubunsafe 44.266
typeOutput 28.745
Output= 31.962
pubstatic 13.581
staticmut 14.96
->Result<(), 31.808
as*const 49.117
loop{} 11.079
pubextern 17.308
asyncfn 47.022999999999996
&str)-> 44.113
->impl 39.568999999999996
typeItem 21.444
Item= 22.516
userustc_errors::Applicability; 10.262
self,cx: 21.444
returnfalse; 18.483
=1 11.386
isize= 19.708000000000002
iftrue 19.351000000000003
i32{ 37.68
ERRORuse 21.240000000000002
foo()-> 14.194
letpath 14.5
path= 17.308
structS; 15.419
forS 10.007
S{ 32.932
->&'a 35.842
str{ 18.788999999999998
=42; 14.96
letvalue 10.109
value= 12.203
usize){ 14.755
Foofor 29.663999999999998
1} 13.02
a{ 16.542
b{ 11.896
{a: 32.013
fori 23.945999999999998
iin 24.15
{() 11.743
'a+ 10.722
->Box<dyn 11.896
pubconst 105.433
constfn 52.18
fnbar() 20.27
pubtype 31.348999999999997
=>{}, 25.221999999999998
->String 34.769999999999996
String{ 38.394999999999996
typeTarget 11.794
Target= 11.794
fnderef(&self) 11.233
deref(&self)-> 11.233
implfmt::Display 12.305000000000001
fmt::Displayfor 11.437000000000001
letactual 26.55
actual= 26.753999999999998
for_ 22.057000000000002
_in 22.057000000000002
+1); 13.326
=1; 39.211999999999996
=2; 14.857999999999999
pubenum 60.247
new()-> 20.729
letb 27.212999999999997
b= 38.242000000000004
0=> 14.040999999999999
=>0, 11.386
=>1, 10.926
)=> 17.666
=>(), 51.312000000000005
=>true, 34.821
{x 13.530000000000001
e= 10.926
letfoo 11.079
foo= 16.849
mutx 21.597
m{ 14.96
leta 45.339
a= 59.327999999999996
_,_) 10.875
_)| 11.845
=>unreachable!(), 18.328999999999997
=vec![1, 10.365
0,0, 197.182
1,2, 30.939999999999998
fnfoo(&self) 14.5
}} 32.779
->isize 32.779
isize{ 38.191
=Vec::new(); 27.162
lety 33.544
Vec<_>= 16.593
Struct{ 18.585
implTrait 10.058
()= 17.971999999999998
{}} 19.81
}//~ 19.759
T){ 20.014
u32){ 10.312999999999999
letc 21.342
TokenStream)-> 13.683
->TokenStream 14.040999999999999
TokenStream{ 14.296
letspan 19.605999999999998
span= 22.006
X{ 16.287
5,5, 17.155
false} 10.058
x== 10.722
v== 267.43600000000004
=T; 12.152000000000001
=&'a 14.347000000000001
t= 11.896
&[u8])-> 13.530000000000001
returnNone; 29.358
letlen 12.559999999999999
len= 14.143
=|| 25.682
&'staticstr 17.87
T= 10.058
{ref 14.347000000000001
#[doc= 25.835
mutv 12.152000000000001
+1) 14.908999999999999
->T 22.261000000000003
useif_chain::if_chain; 10.007
declare_clippy_lint!{ 21.954
cx:&LateContext<'tcx>, 16.645
if_chain!{ 21.189
then{ 20.984
letSome(ref 18.074
B{ 11.845
=vec![]; 15.623
letres 12.713000000000001
res= 15.623
muterr 16.747
err= 22.108
letoutput 11.181000000000001
output= 12.662
doesnot 18.891000000000002
&str){ 11.488
target_os= 36.403999999999996
&Path)-> 13.581
->io::Result<()> 42.837
io::Result<()>{ 41.713
&'astr, 14.908999999999999
returntrue; 14.245
bool){ 14.807
expr.kind{ 12.049
Span)-> 10.926
->Option<String> 18.942
Option<String>{ 18.227
==0 37.272
#[derive(Copy,Clone, 28.029999999999998
Clone,PartialEq, 18.38
cratefn 36.300999999999995
->Option<&'a 10.312999999999999
0} 14.296
PartialEq,Eq, 17.461000000000002
u64{ 10.518
#[serde(rename_all= 11.488
&u32)-> 11.998
->T; 12.815
1,1, 73.011
refmut 18.942
cannotfind 12.917000000000002
inthis 12.815
->i32 30.328
A= 13.071
for() 28.795999999999996
(){} 20.474
for(i, 10.365
Self)-> 12.968
Send+ 12.203
+Send 10.312999999999999
whereF: 13.479000000000001
AnyError>{ 19.657
i32)-> 19.861
Ty<'tcx>)-> 10.518
expr:&'tcx 13.071
&str= 20.321
letz 13.887
z= 17.461000000000002
f:F) 22.872999999999998
muta 11.027999999999999
fneq(&self, 13.122
Defaultfor 10.467
fndefault() 10.824
default()-> 10.773
letdata 10.416
data= 12.559999999999999
->&mut 26.652
as*mut 31.553
letmsg 19.146
msg= 20.576
==1 18.432
pub(super)fn 27.826
isa 15.623
letv: 11.386
Iteratorfor 14.601999999999999
fnnext(&mut 16.134
next(&mutself) 16.083
->(usize, 10.16
->bool, 10.568999999999999
=a; 10.007
letn 10.568999999999999
n= 15.93
=>{}; 23.333
(){ 19.197
shouldbe 10.875
#![crate_name= 12.407
letexpected 23.844
expected= 24.609
assert_eq!(expected,actual); 18.993
letdir 12.610999999999999
dir= 12.713000000000001
{0 11.845
lettcx 12.152000000000001
tcx= 12.203
{let 13.734000000000002
#[cfg(feature= 10.211
{kind: 15.368
asusize 10.211
state= 11.079
#[must_use= 12.152000000000001
'b>{ 10.671
=tempfile::tempdir()?; 10.926
T{} 10.568999999999999
{inner: 10.416
->PResult<'a, 11.079
arenot 14.194
notallowed 10.568999999999999
+1, 11.386
asusize; 12.917000000000002
2,3]; 11.335
inthe 10.875
usestd::mem; 10.109
V>{ 11.59
#[rustc_const_unstable(feature= 11.386
->io::Result<usize> 12.1
io::Result<usize>{ 12.1
f32,pub 17.564
pubf32, 16.951
cannotborrow 10.722
2,2, 529.205
2,0, 19.197
&Self)-> 10.518
->&u32 10.518
&u32{ 10.518
[1,2, 13.581
0,2, 19.3
context:&RewriteContext<'_>, 10.977
#[rustc_const_stable(feature= 15.419
?Sized+ 11.283999999999999
ifv 266.67
ofdeprecated 11.027999999999999
K,V, 11.641
9,9, 84.346
7,7, 25.221999999999998
19,19, 25.426000000000002
124,124, 21.801000000000002
24,24, 27.264
14,14, 99.91799999999999
32,32, 21.852
'\u{0}','\u{0}']), 141.683
=m!(1 164.965
m!(1=> 164.965
=>2); 164.965
fn 2853.526
main() 467.145
{ 7260.112
} 1176.561
let 3266.9120000000003
_ 374.554
= 4910.843
box 42.536
0; 74.22200000000001
[0; 10.737
[0, 10.325000000000001
0, 243.056
foo(); 11.56
(); 31.012999999999998
0); 47.922999999999995
0 107.63000000000001
+ 336.62
/ 24.541
& 21.436
% 18.069
false; 41.788
x 312.004
as 407.737
while 44.107
true 65.431
for 712.259
in 265.802
y 50.84100000000001
loop 42.162
match 483.943
=> 1902.026
false, 95.84599999999999
|| 144.89100000000002
move 18.182
foo 42.049
+= 67.264
&mut 417.95
break 13.917000000000002
return; 59.258
}; 151.213
return 220.797
expected 42.648
found 25.999999999999996
_: 100.63400000000001
i32 63.822
ERROR 267.78499999999997
mismatched 22.147000000000002
types 28.543999999999997
mod 156.26399999999998
pub 1326.577
foo() 44.818
{} 634.071
1 99.138
2 43.208999999999996
use 991.0419999999999
the 127.57000000000001
name 33.146
is 131.46099999999998
#[macro_export] 10.625
macro_rules! 76.13
() 88.58800000000001
#![allow(dead_code)] 42.498
-> 1517.222
()> 14.702000000000002
const 263.66900000000004
pattern 12.869
if 1307.049
u8) 20.500999999999998
_x 14.253
2); 154.506
| 338.64
1) 23.531
not 98.315
0) 10.063
@ 30.825999999999997
1; 98.016
struct 502.19899999999996
f: 71.866
u8 44.893
}) 51.065
should 24.242
e 16.160999999999998
Foo 128.767
x: 109.912
isize 59.52
trait 216.42
Drop 26.150000000000002
impl 442.866
drop(&mut 24.654
self) 115.823
Bar 41.825
of 107.74199999999999
3 21.623
println!("{}", 29.854000000000003
"rust1", 72.576
since 179.982
"1.0.0")] 81.405
extern 139.392
crate 128.28099999999998
1, 172.126
2, 525.2439999999999
3, 56.191
4, 46.389
_, 71.641
x; 23.456
.. 102.093
4); 13.169
3); 17.845
(_, 18.855
#[stable(feature 156.52599999999998
u8, 49.195
#[unstable(feature 39.318000000000005
issue 54.619
"none")] 13.692
reason 15.151
( 28.844
isize; 12.158
macro 17.733
u32) 31.687
u32; 14.665
#[no_mangle] 35.315999999999995
"C" 47.848
u32 83.762
}, 73.399
1); 55.442
kind 18.518
unsafe 235.35000000000002
f() 22.11
#![allow(unused_variables)] 14.179
Debug)] 27.085
isize, 32.809000000000005
y: 64.047
i 65.356
s 42.648
p 19.266
3; 17.284
v 230.037
5, 38.795
mut 581.5469999999999
- 106.021
> 69.17200000000001
10 11.971
-= 12.607
!= 73.36200000000001
u64 20.762999999999998
< 56.901
>= 28.507
usize 99.325
i64 11.335
Ty, 10.176
fmt::Debug 13.655000000000001
fmt(&self, 25.102
fmt::Formatter<'_>) 21.249
fmt::Result 25.813000000000002
Ok(()) 33.221
write!(f, 18.406
name, 12.420000000000002
{}", 79.385
*self 17.994
== 497.186
else 565.049
ref 97.23
impl<'tcx> 28.02
a, 18.855
def_id, 11.747
(), 56.827
bool, 86.942
usize, 75.569
u32, 53.571999999999996
u64, 22.371000000000002
String, 47.025
A: 17.246000000000002
B: 14.889
type 288.80899999999997
tcx: 39.468
C: 12.907000000000002
T: 67.863
self 72.42699999999999
None 129.515
Err(e) 10.961
I: 13.992
T> 45.865
impl<'a, 44.032000000000004
'tcx> 45.716
def_id: 16.423
Copy 19.828
ty 22.259
ty: 26.487000000000002
must 16.274
'tcx, 15.263
where 157.611
value 40.254
kind, 10.924000000000001
target 16.049
span: 52.523999999999994
x, 12.383000000000001
b) 17.733
&'tcx 59.221000000000004
F) 36.924
Self 93.52600000000001
U: 14.328
T, 65.319
_) 90.346
ty, 23.943
self, 267.149
bool 166.439
val 15.039
&'static 58.434999999999995
) 237.74400000000003
None, 126.597
used 18.93
a 210.65900000000002
on 33.183
and 37.074
cannot 55.555
be 70.51899999999999
an 34.268
by 24.130000000000003
"the 10.325000000000001
dyn 35.128
f 27.347
r 28.619000000000003
42; 12.533
to 127.23299999999999
data 15.563
#[derive(Copy, 39.318000000000005
Clone)] 25.290000000000003
enum 126.148
u8; 15.488000000000001
result 46.949999999999996
#[derive(Debug)] 20.688
bool) 30.153
println!("{:?}", 16.386
true; 49.344
true); 15.75
impl<T> 40.852
f32 14.889
Foo; 21.511
private 11.261
#![crate_type 23.12
A 54.694
*mut 64.72
T 77.28999999999999
one 13.392999999999999
or 32.846
b, 17.059
c: 24.990000000000002
usize) 54.507000000000005
b 58.173
c 46.763000000000005
Trait 20.464
Iterator<Item 16.423
&'b 27.16
&'a 184.28400000000002
test 12.645000000000001
from 20.314
#[macro_use] 10.399999999999999
field: 12.607
String::new(); 12.121
Option<String>, 13.73
scope 14.402999999999999
}); 138.007
10, 18.705
vec![1, 10.363
6, 19.977
7, 35.914
8, 19.192
9, 84.69699999999999
(1, 11.074
function 24.392
#![cfg_attr(full, 12.569999999999999
N: 19.641
usize> 11.859
{}; 28.582
i32) 26.261999999999997
i32; 14.478
i32, 45.678
b: 76.76599999999999
b); 12.794
false); 13.281
32, 23.419
z: 14.140999999999998
i16, 10.924000000000001
(0, 15.412999999999998
20, 10.100999999999999
#break 10.100999999999999
Target 21.661
base 10.961
a: 74.784
[u8; 17.583000000000002
T) 67.526
msg 16.535
len 20.464
new() 15.563
#![allow(non_camel_case_types)] 10.55
: 57.014
isize) 19.379
X 19.865000000000002
no 21.062
rustc_middle::ty::{self, 10.25
#[derive(Clone)] 10.774
TyCtxt<'tcx>, 30.49
index: 12.645000000000001
Span, 49.456999999999994
kind: 43.321
F, 11.111
F: 39.879999999999995
has 14.665
{:?} 18.556
.emit(); 17.284
_)| 11.261
{:?}", 57.126
true, 73.399
attribute 11.485
with 39.057
\ 57.20099999999999
&& 140.327
this 37.635
break; 22.596
it 20.389
None; 51.739
attrs: 10.063
[ 11.897
may 11.709000000000001
i: 17.657999999999998
{}, 28.432000000000002
s: 22.746
Span) 12.682
span, 51.851
..) 11.822000000000001
index 13.430000000000001
Default::default(), 12.270999999999999
.iter() 29.778999999999996
.collect(); 19.416
tcx, 11.56
"this 12.533
TyCtxt<'_>, 12.046
tcx 12.682
pub(crate) 54.058
item: 16.012
return, 11.186
None); 30.377
Some(ref 22.035
field 14.552999999999999
have 19.678
are 30.078
path: 17.807000000000002
id: 24.279
None) 16.311
t: 19.939999999999998
feature 15.899
`{}`", 17.919999999999998
`{}` 20.613
"lib"] 12.645000000000001
Bar; 12.344999999999999
#[lang 10.138
Sized 14.627999999999998
E 10.699
args: 26.674
A, 11.036
Output 24.317
static 69.771
Result<(), 25.626
ptr 11.897
*const 85.296
usize; 20.277
async 44.668
&str) 41.451
Item 18.294
"", 15.412999999999998
cx: 40.329
expr: 27.721
expr.span, 12.458
comment 12.831999999999999
10); 10.100999999999999
f64 14.777000000000001
&dyn 16.648
#![feature(rustc_attrs)] 11.747
error 12.533
path 23.905
S; 16.236
S 31.724
str 22.072
T; 24.541
Debug 10.737
X: 11.671999999999999
value: 31.537
impl<'a> 36.213
Error 14.964
#[cfg(test)] 13.392999999999999
ERROR: 20.015
C 12.308
false 56.116
B 21.025
'a 16.947
'a, 17.657999999999998
Box<dyn 34.567
bar() 17.246000000000002
#[inline] 147.697
#[inline(always)] 17.994
.., 11.934000000000001
String 38.421
", 30.527
&str, 39.992
)); 27.272000000000002
at 13.917000000000002
<= 27.572000000000003
fmt::Display 10.886
n 31.649
#[test] 121.509
actual 20.426
assert_eq!( 27.310000000000002
Self; 11.111
5 11.709000000000001
a; 12.831999999999999
'a> 12.270999999999999
Send 18.032
2; 20.875
unimplemented!() 10.961
bar 14.59
#[derive(Debug, 25.102
Eq, 24.915000000000003
str, 23.382
42 11.859
d 17.994
m 17.657999999999998
t 18.406
/* 13.992
expr) 12.233
expr, 15.076
line 12.645000000000001
unreachable!(), 13.468
Ty<'tcx>, 22.782999999999998
arg 12.233
DefId, 13.954
debug!( 15.263
continue; 21.773
#![feature(box_syntax)] 13.130999999999998
foo(&self) 10.625
Vec::new(); 20.724999999999998
Vec<_> 12.196
Struct 15.711999999999998
out 11.335
Sync 11.485
union 17.546
TokenStream) 10.213
TokenStream 11.223
span 23.606
associated 14.291
item 18.069
d: 12.682
?Sized> 18.480999999999998
Self: 12.270999999999999
Clone, 39.019
x); 12.869
ok 10.325000000000001
&[u8]) 11.56
<< 24.317
4 13.355999999999998
count 11.635
end 15.076
start 14.478
but 12.383000000000001
&T) 10.213
v: 26.448999999999998
r: 10.699
#[doc 18.93
#[repr(simd)] 12.158
f32, 28.058
U 12.420000000000002
.unwrap(); 16.199
declare_clippy_lint! 16.124
that 21.324
&LateContext<'tcx>, 18.78
body: 13.58
if_chain! 15.525
res 18.593
then 16.797
without 10.325000000000001
data: 18.331
state: 13.130999999999998
&self, 44.93
cx, 30.078
&Path) 12.831999999999999
output 13.318
module 14.889
find 13.616999999999999
vec![]; 11.934000000000001
path, 10.737
output: 13.505
err 24.691
does 14.702000000000002
using 10.288
name: 28.395
(None, 10.399999999999999
target_os 26.674
}), 26.448999999999998
file 16.685
})) 10.063
can 13.318
* 48.409
>> 11.335
io::Result<()> 31.762
dir 10.399999999999999
only 15.525
None), 19.453
s, 10.25
which 10.100999999999999
" 25.214999999999996
string 10.063
Option<String> 14.889
&LateContext<'_>, 17.882
false) 13.392999999999999
*/ 10.812
#[repr(C)] 14.627999999999998
PartialEq, 34.792
11, 13.841999999999999
14, 89.074
19, 26.038
24, 26.898
u64) 13.169
Value, 11.934000000000001
V: 11.298
Option<&'a 12.158
i64, 10.438
Ord, 12.233
default 16.983999999999998
Hash, 12.344999999999999
Debug, 22.671
#[derive(Clone, 27.085
Copy, 22.933
lifetime 16.274
i8, 18.817
u16, 13.468
panic!() 12.607
A; 13.094
assert_eq!(x, 10.363
z 18.107
WARN 13.019
true) 12.046
format!( 18.78
other: 31.163000000000004
Self) 12.645000000000001
_)) 11.036
OK 19.566
for<'a> 12.009
AnyError> 14.815
state 18.63
Eq 10.213
allowed 10.998999999999999
'b> 15.076
val: 11.671999999999999
variable 12.607
&str 20.724999999999998
ident, 12.645000000000001
id, 11.597
pub(super) 29.067999999999998
e: 11.671999999999999
[1, 13.804
Applicability::MachineApplicable, 11.934000000000001
Iterator 12.944
next(&mut 11.822000000000001
Clone 13.206000000000001
self.0 11.747
inner: 17.358
will 10.512
3]; 10.998999999999999
size 11.859
, 10.812
offset: 10.288
offset 13.243
assert_eq!(expected, 15.113999999999999
actual); 15.263
foo: 13.019
vec![ 11.671999999999999
impl<T: 35.615
'tcx>, 17.733
vec![], 10.849
V, 14.889
rhs: 15.899
specifier 10.138
target: 19.715
'b, 22.259
#[cfg(cfail1)] 15.638
#[cfg(not(cfail1))] 15.301
iter 10.063
bar: 11.597
f64, 14.029
&'ll 18.817
borrow 14.478
ret 11.148
context: 11.971
V> 17.882
cfg="cfail2")] 11.934000000000001
cfg="cfail3")] 10.026
#[rustc_const_stable(feature 11.298
K, 20.500999999999998
124, 17.471
stringify!($SelfT), 11.56
Little, 22.97
'\u{0}', 103.814
'\u{0}']), 107.069
m!(1 120.873
// Kotlin
importio.ktor.client.request.* 19.698
importkotlinx.coroutines.* 108.21900000000001
privateconst 52.923
constval 135.511
internalclass 45.21
overrideval 137.766
bylazy 20.884
lazy{ 21.952
privateval 359.188
overridesuspend 42.244
suspendfun 181.90800000000002
overridefun 666.878
funclose() 17.442999999999998
close(){ 12.222000000000001
privatefun 320.149
=true 100.38799999999999
{_, 22.902
_-> 18.274
?:return 57.314
internalexpect 13.290000000000001
expectfun 13.883
importio.ktor.http.* 45.21
importio.ktor.http.content.* 13.527
importkotlin.test.* 77.36699999999999
config{ 21.596
test{ 30.496000000000002
{client 31.326999999999998
client-> 31.326999999999998
valresponse 19.816
response= 20.172
importorg.junit.Test 29.664999999999996
TestBase(){ 39.633
=runTest 144.767
runTest{ 150.819
+1) 22.308
=0L 18.274
=0 106.795
Long){ 19.223
0){ 73.214
try{ 180.722
}catch 141.68200000000002
catch(e: 74.875
i= 10.68
=1 26.580000000000002
packagekotlinx.coroutines.flow 11.392
:TestBase() 38.921
valflow 33.344
flow= 33.463
=flow 25.987
flow{ 35.717000000000006
throwTestException() 22.546
assertTrue{ 41.413000000000004
{it 46.278
itis 46.278
={ 53.160000000000004
}){ 19.935
funmain() 15.426
main()= 12.459
=runBlocking 46.159
runBlocking{ 63.365
{// 31.445000000000004
alot 25.394000000000002
lotof 20.054
launch{ 55.771
packageio.ktor.utils.io 12.459
importkotlin.coroutines.* 48.533
internalactual 36.785000000000004
actualclass 10.798
()-> 45.803
Boolean){ 23.139
privatevar 106.558
actualfun 89.233
Boolean{ 84.368
!=null 35.124
null&& 27.055
=null 141.563
actualsuspend 14.121
->Unit) 63.128
Unit){ 49.126
publicvar 40.82
get()= 180.01
canbe 50.668
==null 25.512
null|| 12.578000000000001
importandroid.view.View 24.8
importeu.kanade.tachiyomi.R 20.172
init{ 44.973
valsource 18.037000000000003
source= 20.766000000000002
when{ 45.447
null-> 17.325
}else 183.095
else{ 153.192
importlink.kotlin.scripts.dsl.Article 39.04
importlink.kotlin.scripts.dsl.LanguageCodes.EN 11.51
importlink.kotlin.scripts.dsl.LinkType.article 13.053
importjava.time.LocalDate 38.446
valbody 42.125
body= 91.844
=""" 44.498
Kotlinis 24.8
isa 60.873000000000005
anew 19.579
oneof 11.036
ofthe 123.52699999999999
tothe 64.67099999999999
theJava 11.866000000000001
itcan 10.205
beused 16.85
witha 24.326
Inthis 11.273
atthe 21.952
isto 12.459
willbe 33.225
inthe 92.556
howto 10.561
tocreate 15.426
createa 12.222000000000001
toa 21.122
youcan 49.363
itto 11.629
toKotlin 10.324
usingthe 10.442
canuse 13.409
youhave 16.019
haveto 18.393
inyour 11.51
touse 31.089000000000002
Ifyou 22.546
shouldbe 36.785000000000004
ableto 12.934000000000001
thesame 28.36
ina 29.308999999999997
withKotlin 11.747
ofKotlin 13.883
insteadof 11.747
suchas 10.561
asthe 13.053
youto 15.663
fromthe 25.038000000000004
Forexample, 12.697000000000001
thefollowing 14.714
importandroid.os.Bundle 13.409
allthe 18.155
usethe 14.358
inthis 14.714
needto 32.394999999999996
towrite 15.189000000000002
inKotlin 25.868000000000002
asa 25.512
withthe 37.853
bythe 14.477
whichis 14.477
ofa 25.156000000000002
andthe 26.698999999999998
publicclass 58.619
ifyou 21.358999999999998
youwant 11.747
wantto 25.868000000000002
String?= 39.513999999999996
theKotlin 22.308
thereare 12.697000000000001
isthe 32.276
isthat 16.494
forthe 30.020999999999997
+" 18.63
"+ 35.480000000000004
thatthe 19.816
hasa 16.375
isan 13.409
lateinitvar 30.496000000000002
Kotlinhas 12.459
havea 22.546
String){ 40.345
Thisis 28.36
String,val 12.934000000000001
String): 14.477
tobe 46.041000000000004
openclass 34.531
thatyou 14.358
arenot 13.409
Int{ 87.69099999999999
Int= 165.65200000000002
afunction 13.171
inJava 13.171
wecan 25.750000000000004
thatis 11.985
hasbeen 14.833000000000002
Int?= 17.918
thecompiler 11.392
!=null) 97.184
null){ 121.747
isnot 48.414
Youcan 19.459999999999997
onthe 36.073
?:throw 17.325
String= 110.71099999999998
text= 15.782
thefirst 15.189000000000002
fora 15.189000000000002
operatorfun 21.952
String{ 41.413000000000004
valbuffer 24.8
buffer= 26.343
for(i 42.837
(iin 42.955
listof 10.324
afew 15.07
youare 10.205
valname: 12.103
supportfor 10.68
list= 10.561
==0 18.393
Itis 10.086
title= 45.21
url= 50.668
categories= 40.582
=listOf( 52.686
type= 45.685
=article, 33.7
lang= 38.802
=EN, 35.598
author= 39.87
date= 42.125
=LocalDate.of(2016, 30.020999999999997
=body 38.802
importlink.kotlin.scripts.dsl.LinkType.* 24.088
importlink.kotlin.scripts.dsl.LanguageCodes.* 24.088
{} 13.409
valjob 36.073
job= 38.328
=launch 16.138
.onEach{ 10.798
{value 22.902
value-> 28.36
publicobject 10.324
->Unit): 36.429
publicfun 269.36199999999997
importjava.io.File 14.951
): 101.69300000000001
View){ 11.273
.filter{ 16.494
){ 144.292
=when 43.43
->{ 127.44200000000001
returnwhen 20.884
importio.ktor.utils.io.core.* 24.326
dataclass 47.465
valdata 10.561
data= 11.985
=false 108.694
catch(cause: 22.070999999999998
(cause:Throwable) 16.494
Throwable){ 70.366
=null, 49.719
Boolean= 101.812
=false, 25.631
=true, 15.07
returnthis 52.804
publicactual 120.67899999999999
fun<T> 57.076
=this 21.003
importkotlinx.atomicfu.* 11.866000000000001
companionobject 65.14500000000001
object{ 52.092
.map{ 26.343
*stressTestMultiplier 11.866000000000001
valchannel 29.072
channel= 29.664999999999996
numberof 10.917
privateinline 19.579
inlinefun 204.335
}finally 54.466
finally{ 55.059
==0) 36.904
0-> 12.697000000000001
1-> 10.205
yield()// 32.751
privatesuspend 55.178
Int){ 80.21499999999999
(e:Throwable) 19.935
=if 61.348
!=0) 12.697000000000001
while(true) 46.753
(true){ 41.769000000000005
+1 24.088
else-> 109.525
it} 24.326
}} 21.715
notbe 14.358
innerclass 10.324
0)return 14.358
actualval 27.767
importio.ktor.util.* 39.752
==null) 57.195
returnif 28.122999999999998
@Testfun 81.164
{it.name 10.798
packageokio 17.799
abstractclass 26.224
openfun 26.106
valpath 11.392
path= 16.375
valresult 74.28200000000001
result= 95.167
true){ 15.07
importandroidx.recyclerview.widget.RecyclerView 11.036
returntrue 45.565999999999995
funequals(other: 10.442
Any?):Boolean 11.273
if(this 16.019
returnfalse 60.517
internalconst 10.68
sealedclass 12.103
abstractfun 24.444000000000003
protectedopen 10.561
internalfun 96.235
privateclass 36.785000000000004
publicopen 11.747
=-1 10.324
Long= 34.649
publiccompanion 19.223
importio.ktor.application.* 26.698999999999998
importio.ktor.response.* 17.442999999999998
valcoroutineContext: 10.561
coroutineContext:CoroutineContext 11.629
}?: 17.562
==0L) 11.036
=try 10.442
catch(t: 11.273
importandroid.content.Context 24.8
Int)-> 12.459
->Unit 84.25
@Deprecated(message= 14.477
context:Context, 10.561
=Buffer() 21.834
expected= 12.222000000000001
valarray 18.037000000000003
array= 18.986
c= 11.985
valsize 26.106
size= 32.632
-1 14.477
importjava.util.concurrent.* 18.393
valdeferred 15.782
deferred= 15.782
=CoroutineStart.UNDISPATCHED) 14.477
CoroutineStart.UNDISPATCHED){ 15.545000000000002
=async 16.730999999999998
async{ 19.459999999999997
=Job() 16.494
{throw 14.121
(e:CancellationException) 11.273
CancellationException){ 15.901000000000002
publicinterface 16.85
if(value 11.866000000000001
->throw 19.459999999999997
Any?{ 11.036
returnnull 46.041000000000004
->return 14.833000000000002
String)= 15.901000000000002
->null 11.392
packagekotlinx.coroutines 21.122
funtoString(): 30.14
toString():String 30.14
fun<T: 38.209
<T:View> 33.344
View>T.lparams( 32.276
):T 40.226
T{ 48.769999999999996
vallayoutParams 32.632
layoutParams= 37.022
this@lparams.layoutParams= 32.276
=layoutParams 32.276
=android.view.ViewGroup.LayoutParams.WRAP_CONTENT, 16.375
coroutineScope{ 12.697000000000001
publicval 125.89999999999999
=null) 19.698
T: 12.815
privatelateinit 14.477
context= 10.086
valcontent 11.392
content= 12.815
="A 16.730999999999998
=true) 33.107
(t:Throwable) 10.798
importio.ktor.client.* 11.273
importio.ktor.routing.* 12.222000000000001
importio.ktor.utils.io.* 28.36
object: 49.126
level= 97.896
internalval 30.496000000000002
=runBlocking<Unit> 11.51
runBlocking<Unit>{ 11.51
in0 25.038000000000004
0until 24.919
=withTestApplication 20.647
withTestApplication{ 49.956999999999994
application.routing{ 39.158
get("/"){ 22.902
name= 25.512
{response 11.51
response-> 11.51
valcontext: 10.561
importio.ktor.utils.io.core.internal.* 10.442
replaceWith= 23.494999999999997
Booleanget() 14.951
>=0) 18.63
=DeprecationLevel.ERROR 11.154
finaloverride 33.581
overridevar 21.240000000000002
offset:Long, 13.409
Long):Long 15.307
Long{ 27.528999999999996
(thisas 22.782999999999998
@Deprecated("Binarycompatibility.", 35.954
compatibility.",level 35.954
=DeprecationLevel.HIDDEN) 51.262
offset:Int, 46.515
Int,length: 32.988
length:Int) 19.105
offset,length) 37.853
ByteArray,offset: 13.053
length:Int): 15.189000000000002
Int):Int 32.157000000000004
valrc 14.833000000000002
rc= 16.730999999999998
=object 23.494999999999997
publicinline 33.463
Unit= 80.09700000000001
{result 16.494
result-> 15.663
enumclass 17.206
=1, 12.815
):Int 11.629
valvalue 12.578000000000001
value= 19.816
=2 12.222000000000001
importorg.junit.* 16.85
>0) 33.107
importjava.util.* 10.917
Int)= 19.698
doesnot 16.730999999999998
importkotlinx.coroutines.channels.* 21.715
publicsuspend 56.364000000000004
actualvar 11.392
valn 11.392
n= 12.103
(T)-> 11.273
->R): 14.714
thatit 11.747
fun<T 21.003
<T: 21.003
thelanguage 13.053
ofthis 15.307
thatwe 10.442
message= 27.410999999999998
do{ 10.205
}while 10.086
==-1) 13.527
protectedabstract 11.154
={} 11.154
elsenull 16.019
0L){ 17.087
(e:Exception) 10.205
Exception){ 15.426
Kotlinand 12.341000000000001
null// 13.290000000000001
elseif 24.444000000000003
1){ 17.681
>0 14.121
0&& 14.002
}// 16.613
start= 17.442999999999998
-1) 14.358
importjava.io.* 15.307
importjava.nio.* 11.036
Flow<T>= 11.154
packageshark 12.103
thisis 18.393
wehave 16.969
tohave 12.697000000000001
->Unit)? 16.138
Unit)?= 14.002
set(value){ 22.902
=value 28.952999999999996
isno 11.747
=it 19.342
null)return 13.290000000000001
current= 11.51
=0, 43.786
=offset 11.51
if(result 11.866000000000001
returnresult 24.207
if(size 10.561
valbuilder 10.086
builder= 10.324
suspendinline 17.799
},{ 16.85
s= 13.646
state= 13.290000000000001
fun<R> 10.68
Any?= 12.815
offset){ 10.205
view= 10.561
titleRes= 16.969
itin 11.392
tomake 16.613
thereis 14.477
wayto 14.594999999999999
goingto 17.799
wouldbe 11.154
aswell 11.273
weare 15.426
todo 15.545000000000002
lookat 11.273
bea 10.798
Inthe 11.036
="Kotlin 18.867
valkey: 10.086
time= 10.798
importkotlinx.coroutines.flow.* 13.409
publicoverride 11.629
for(index 14.358
(indexin 14.358
-1){ 12.341000000000001
=DeprecationLevel.ERROR) 11.392
T= 18.155
thecode 15.545000000000002
count:Int 13.053
link{ 105.49
github= 72.858
desc= 99.082
writtenin 10.798
asingle 11.51
packet= 12.934000000000001
="" 10.442
publicabstract 13.053
adapter= 11.747
T){ 10.442
offset:Int 19.223
0,length: 16.257
length:Int 21.003
-offset) 10.205
=false) 16.257
internalinline 33.818999999999996
}.let{ 33.463
{call 40.108
call-> 40.108
=buildPacket 18.867
buildPacket{ 22.546
key= 20.054
Throwable?= 10.324
valpacket 11.273
:Any> 28.004
publicconst 14.594999999999999
block:suspend 19.698
actualinline 17.799
handler= 10.798
index= 16.375
handleRequest(HttpMethod.Get,"/") 20.528000000000002
"/"){ 24.8
valp 12.103
p= 12.578000000000001
name:String, 14.238999999999999
id= 14.002
get(){ 11.392
fun<reified 24.8
String,value: 10.205
CoroutineContext= 24.088
publicexpect 17.799
href= 38.328
kug= 24.682000000000002
createAndStartServer{ 10.205
launch(start= 16.730999999999998
context:CoroutineContext 15.782
method= 16.613
@JvmFieldval 10.442
compatibility",level 11.273
assertEquals(HttpStatusCode.OK,call.response.status()) 12.341000000000001
uri= 16.613
=handleRequest 10.798
handleRequest{ 16.613
=HttpMethod.Get 10.917
description= 10.917
assert{ 11.747
|| 10.442
references+= 10.561
=base 11.392
KotlinUser 21.240000000000002
UserGroup" 21.122
base/ 11.747
>> 10.917
=definedExternally 10.205
package 322.365
import 1966.76
io.ktor.client.request.* 15.061
kotlinx.coroutines.* 82.74600000000001
private 777.3770000000001
const 104.068
val 2766.094
= 5732.701
4 21.322
internal 257.13
class 470.981
: 412.551
{ 5835.771
override 668.773
by 125.208
lazy 20.051
} 868.016
suspend 210.131
fun 2301.555
return 839.9810000000001
close() 18.689999999999998
true 142.809
_, 21.14
_ 16.059
-> 1062.451
.build() 14.154
?: 168.94
if 858.218
== 337.96999999999997
&& 146.892
is 641.644
for 344.956
expect 29.487
): 116.135
io.ktor.http.* 34.568
io.ktor.http.content.* 10.343
kotlin.test.* 59.156
@Test 481.41499999999996
config 24.951
request 17.692
as 295.418
test 42.552
client 32.208999999999996
response 28.489
org.junit.Test 22.683
TestBase() 30.395
runTest 115.318
x 11.795
* 101.074
+ 371.994
1) 59.519
/ 58.611999999999995
2 51.626000000000005
var 419.53700000000003
0L 21.503
0 173.658
Long) 26.675
+= 97.172
n 17.692
<= 33.57
0) 113.141
while 105.429
< 81.476
1 89.369
it 268.562
many 21.049
try 149.43300000000002
catch 110.87200000000001
(e: 57.251000000000005
2) 32.208999999999996
expect(1) 78.39099999999999
i 26.855999999999998
>= 51.716
throw 188.084
3) 13.7
4) 12.430000000000001
flow 59.247
emit(1) 12.067
TestException() 17.692
assertEquals(1, 28.489
it) 17.692
expect(2) 68.592
expect(3) 53.803
assertTrue 31.665000000000003
expect(4) 37.018
finish(5) 11.704
}) 56.071
expectUnreached() 48.45
main() 11.976
runBlocking 49.085
launch 46.545
a 541.4780000000001
lot 20.414
of 435.23299999999995
kotlin.coroutines.* 37.109
actual 178.104
() 35.476
Boolean) 25.223
Boolean 198.971
!= 192.07600000000002
null 253.5
Unit) 50.626999999999995
current 20.233
block() 15.695999999999998
public 687.01
get() 147.437
can 161.137
be 216.301
|| 77.302
android.view.View 18.963
eu.kanade.tachiyomi.R 15.424
View, 10.888
adapter: 11.16
init 35.294
source 31.211
!is 19.326
when 154.604
else 304.763
link.kotlin.scripts.dsl.Article 29.849999999999998
java.time.LocalDate 29.397000000000002
body 110.23700000000001
""" 74.49
## 58.43000000000001
A 17.783
Kotlin 259.12600000000003
development 10.797
on 128.474
To 15.515
new 53.259
programming 13.247000000000002
language 48.904
the 926.7189999999999
one 45.365
most 18.418
Java 101.25500000000001
Java, 13.247000000000002
to 788.99
used 34.205
with 213.39800000000002
and 527.506
In 50.174
this 218.116
article, 27.491
I 124.21000000000001
will 100.07499999999999
useful 10.162
features 25.403999999999996
your 60.699
Android 56.525
at 73.854
time 35.113
writing 12.883999999999999
were 16.241
Kotlin, 23.59
in 500.377
both 14.97
The 104.612
first 41.917
available 16.876
Kotlin. 23.317999999999998
project 18.509
support 31.119999999999997
an 107.24300000000001
existing 13.519000000000002
how 32.208999999999996
create 25.223
check 13.427999999999999
add 16.059
created 12.973999999999998
or 113.86600000000001
open 58.884
using 57.432
you 194.798
use 84.651
any 28.761
enum 14.698
code. 14.608
element 16.967
that 246.69599999999997
are 141.993
them 20.142
have 106.79
apply 11.886
another 12.430000000000001
plugin 12.249
``` 160.32
This 63.148
cause 23.227
extension 24.497
not 146.802
code 85.559
each 12.611999999999998
which 58.702
If 34.115
should 57.977
able 10.162
run 17.874000000000002
application 15.969000000000001
same 25.586000000000002
way 24.497
would 35.838
standard 11.976
but 88.553
now 32.571999999999996
start 43.641
some 45.274
key 24.860000000000003
instead 11.886
Java. 11.795
function 54.257000000000005
references 12.158
There 13.61
such 18.055
all 57.886
from 91.72800000000001
For 29.034
example, 14.334999999999999
following 15.061
And 20.868
```kotlin 122.667
android.os.Bundle 10.253
get 32.028
type 85.105
don’t 16.15
need 40.012
write 26.584
end 16.422
because 31.483
they 25.858
instance 25.677000000000003
name 45.001999999999995
set 29.124000000000002
We 33.207
classes 20.142
there 31.211
like 56.162
much 21.231
done 10.888
syntax 14.334999999999999
```java 11.976
User 18.963
String 177.831
When 10.343
working 10.706
want 25.132
above 10.888
String? 43.096999999999994
through 10.888
two 20.414
next 30.122
variable 14.062999999999999
then 20.142
properties 10.978
define 11.976
must 13.972
after 21.503
about 38.742
only 43.823
been 26.311999999999998
default 16.876
As 19.235000000000003
" 56.888
property 14.698
read 20.324
has 71.042
last 15.424
lateinit 23.953
found 14.334999999999999
more 67.231
### 35.022
constructor 10.797
example 15.333
String, 115.86299999999999
String) 63.693
cannot 13.247000000000002
block: 44.367000000000004
may 17.602
every 16.513
"") 13.791000000000002
does 21.866
final 40.193999999999996
order 11.795
method 39.013999999999996
its 34.115
things 14.608
so 50.537
still 20.414
8 18.509
lambda 10.797
no 40.102999999999994
libraries 11.795
going 16.967
over 12.701999999999998
Int, 165.855
Int) 103.70500000000001
Int 265.11400000000003
value 97.898
It’s 10.525
functions 29.578
listener 12.430000000000001
view 25.767
line 13.791000000000002
see 24.588
expression 10.525
parameter 15.061
since 15.515
call 60.245000000000005
we 125.47999999999999
interface 45.456
called 16.241
out 33.388999999999996
ByteArray 15.606
look 18.872
static 14.062999999999999
means 11.613
feature 17.783
into 31.756
possible 10.343
value) 27.491
already 25.494999999999997
Int? 16.331
compiler 18.509
null) 149.977
compile 12.430000000000001
second 18.055
number 12.611999999999998
You 28.399
even 20.777
result 132.738
right 11.16
operator 28.036
do 52.351000000000006
returns 13.882
as? 29.124000000000002
case 13.972
exception 24.134
without 18.509
before 18.872
It 34.296
text 21.322
object 137.638
block 13.427999999999999
Int): 82.74600000000001
buffer 38.379
(i 38.923
list 26.403000000000002
b 17.783
=== 38.016
make 30.485
value: 37.472
message 27.491
few 15.152000000000001
... 14.426
values 14.334999999999999
work 19.144
map 13.155999999999999
Map<String, 10.434
name: 22.41
take 14.334999999999999
between 10.797
2, 34.75
3, 21.775000000000002
4, 13.972
5, 11.976
% 15.606
just 35.929
what 25.586000000000002
those 15.606
my 29.215000000000003
enough 11.251000000000001
Article( 29.397000000000002
title 37.199
url 45.728
categories 31.846
listOf( 48.269
"Kotlin", 11.704
lang 29.941000000000003
EN, 27.219
author 31.665000000000003
date 34.296
LocalDate.of(2016, 22.955
link.kotlin.scripts.dsl.LinkType.* 18.418
link.kotlin.scripts.dsl.LanguageCodes.* 18.418
6 10.071
job 41.736
yield() 65.054
finish(3) 14.154
CoroutineContext 31.936999999999998
e 24.951
expect(5) 24.316
expect(6) 13.065000000000001
cancelled 11.432
Unit): 28.125999999999998
java.io.File 11.523000000000001
File 17.511
) 204.86900000000003
View) 10.797
.filter 12.611999999999998
position 16.694
- 188.356
field 13.7
io.ktor.utils.io.core.* 18.599999999999998
data 70.588
id: 12.793000000000001
Long, 55.345000000000006
false 154.06
(cause: 17.602
Throwable) 59.247
{} 43.823
null, 56.162
false, 30.213
true, 19.688
@InternalAPI 18.328
<T> 44.004
companion 51.898
@JvmStatic 11.704
.map 20.142
channel 31.665000000000003
shl 24.679
inline 171.843
finally 45.274
10 11.795
break 38.107
cancel 10.071
& 11.613
assertEquals(0, 27.763
(true) 35.929
> 131.015
3 21.685000000000002
5 11.251000000000001
until 40.012
inner 10.797
Long 75.488
Long): 31.211
typealias 11.523000000000001
(this 35.294
"" 24.225
io.ktor.util.* 30.395
status 10.615
version 21.866
String): 44.095
key: 14.517
Unit 121.57900000000001
okio 13.61
abstract 50.083
path 19.87
@Throws(IOException::class) 18.781000000000002
Path): 10.253
file 31.756
true) 47.815
adapter 16.694
position: 10.706
Any?): 13.427999999999999
sealed 10.888
protected 39.195
constructor( 19.779
-1 24.406
io.ktor.application.* 20.414
io.ktor.response.* 13.337
coroutineContext: 12.339
0L) 22.864
this, 12.067
child 12.430000000000001
false) 30.758
0, 68.501
future 15.333
android.content.Context 18.963
@Deprecated(message 11.068999999999999
"Use 11.16
library 29.305999999999997
API 16.876
context: 35.022
Context, 18.509
attrs: 11.523000000000001
source: 22.500999999999998
Buffer() 17.057
expected 17.239
array 19.053
c 20.142
size 61.06100000000001
bytes 18.418
1, 45.637
-1) 19.235000000000003
assertEquals( 17.965
assertEquals(2, 13.61
too 11.341
was 61.969
"A 13.61
!== 14.88
java.util.concurrent.* 14.062999999999999
deferred 13.972
CoroutineStart.UNDISPATCHED) 11.886
assertEquals("OK", 31.03
finish(4) 18.237000000000002
async 16.876
main 13.065000000000001
thread 15.424
coroutine 16.15
Job() 13.155999999999999
CancellationException) 14.97
type: 10.978
Any? 22.864
List<String> 10.071
(value 14.154
emptyList() 11.16
single 14.97
Any 13.882
kotlinx.coroutines 16.785
result) 15.152000000000001
back 10.253
toString(): 23.044999999999998
handle 13.519000000000002
<T: 29.215000000000003
View> 29.397000000000002
T.lparams( 24.679
init: 19.506999999999998
T 79.298
layoutParams 53.803
layoutParams.init() 12.339
this@lparams.layoutParams 24.679
android.view.ViewGroup.LayoutParams.WRAP_CONTENT, 12.521
link 82.655
where 18.689999999999998
items 10.162
}, 37.925
context 19.235000000000003
base 14.789
content 17.239
io.ktor.utils.io.* 21.685000000000002
ByteReadChannel 10.434
level 80.20599999999999
v 16.241
@JvmField 17.602
withTestApplication 38.196999999999996
application.routing 29.941000000000003
get("/") 17.602
handleRequest(HttpMethod.Get, 42.19
@PublishedApi 15.969000000000001
@Deprecated("Use 12.793000000000001
instead.", 10.434
replaceWith 17.965
point 10.706
@Deprecated( 26.311999999999998
offset: 62.15
offset, 46.998
@Deprecated("Binary 33.117
compatibility.", 27.673
DeprecationLevel.HIDDEN) 39.195
Float 13.7
Double 10.162
length: 52.079
length) 41.01
ByteArray, 24.769000000000002
rc 19.053
start, 10.162
offset) 10.253
analysis 11.251000000000001
org.junit.* 12.883999999999999
CoroutineContext, 24.588
count: 14.426
count) 13.065000000000001
count 19.326
kotlinx.coroutines.channels.* 16.604
really 16.331
part 15.152000000000001
it’s 22.683
less 10.071
than 26.947
these 23.862
very 27.219
R> 10.797
R): 11.613
R 14.334999999999999
also 40.466
simple 18.872
find 15.424
different 16.15
methods 20.142
up 24.316
id 19.053
it. 17.965
But 19.506999999999998
<T 16.059
us 16.694
Kotlin’s 11.523000000000001
allows 15.424
closed 15.243
build 28.671000000000003
"Kotlin" 18.237000000000002
copied 15.695999999999998
head 16.513
continue 15.787
configuration 11.432
Boolean): 11.976
index 37.835
Exception) 11.976
-= 13.791000000000002
shr 21.231
java.io.* 11.704
assertEquals(HttpStatusCode.OK, 20.142
Buffer, 11.16
byteCount: 17.057
Flow<T> 11.251000000000001
started 13.065000000000001
change 13.065000000000001
byteCount) 12.249
Now 11.341
why 10.343
JVM 16.241
had 12.701999999999998
other 37.835
you’re 10.434
own 10.434
So 15.695999999999998
║ 12.521
could 22.864
well 14.698
their 15.424
easy 10.797
T) 19.326
@Suppress("UNCHECKED_CAST") 23.862
yet 10.615
Unit)? 12.339
block) 16.694
Boolean, 22.047
set(value) 22.864
state 40.919
Throwable? 11.886
here 13.337
@Suppress("DEPRECATION") 15.606
this) 15.333
length 22.864
offset 27.763
limit 10.615
(result 10.525
builder 14.426
remaining 15.969000000000001
size: 13.155999999999999
size) 17.511
written 17.057
s 15.969000000000001
@Suppress("NOTHING_TO_INLINE") 13.155999999999999
titleRes 12.973999999999998
finish(6) 12.158
our 42.371
something 13.882
know 13.519000000000002
– 11.251000000000001
might 10.706
makes 12.701999999999998
better 11.432
think 10.888
types 12.883999999999999
great 12.430000000000001
me 13.065000000000001
error 12.883999999999999
allow 10.343
"", 10.797
app 13.155999999999999
Scala 11.886
languages 10.797
"Kotlin 15.061
String?, 11.976
kotlinx.coroutines.flow.* 10.253
(index 21.503
good 14.426
Gradle 19.053
github 56.525
desc 76.213
DSL 11.795
help 12.701999999999998
packet 11.795
parent 14.154
#### 15.152000000000001
update 10.343
— 29.849999999999998
description 10.888
IDE 12.793000000000001
IntelliJ 10.797
item 18.328
it("should 13.882
T): 15.515
T? 11.251000000000001
}.let 25.586000000000002
buildPacket 17.239
Any> 24.860000000000003
"/") 22.32
ch 11.432
tail 10.343
token 10.253
ushr 12.973999999999998
handler 13.337
JetBrains 10.343
byteCount 14.245
p 11.523000000000001
Spring 13.519000000000002
| 70.044
<reified 19.053
pos 12.973999999999998
на 24.134
в 39.649
root 10.797
я 10.343
для 10.615
не 22.773
и 34.84
href 29.487
kug 18.872
call.response.status()) 15.061
launch(start 12.793000000000001
T> 11.432
uri 13.519000000000002
handleRequest 12.793000000000001
call.response.content) 15.969000000000001
"\tat 19.235000000000003
options) 11.976
│ 10.253
Group" 16.331
// C
typedefstruct 72.693
externconst 88.355
constuint8_t 159.049
constint 212.22400000000002
width,int 12.568
*s,int 15.662
#endif/* 25.849999999999998
#include"libavutil/imgutils.h" 11.52
#include"libavutil/opt.h" 22.565
#include"libavutil/pixdesc.h" 11.044
#include"avfilter.h" 18.614
#include"formats.h" 10.997
#include"internal.h" 34.419000000000004
constAVClass 25.564
AVClass*class; 19.47
#defineOFFSET(x) 20.137
#defineFLAGS 13.709999999999999
staticconst 194.039
constAVOption 24.183
={ 291.915
FLAGS}, 64.124
1,FLAGS 10.664
{NULL 58.983
NULL} 51.461
staticint 197.752
intquery_formats(AVFilterContext 13.520000000000001
query_formats(AVFilterContext*ctx) 13.328999999999999
constenum 23.374
enumAVPixelFormat 24.326
*s= 107.68299999999999
=ctx->priv; 81.548
for(int 83.45200000000001
(inti 32.086
i= 48.081
=0; 761.158
0;i 221.411
i< 248.737
(1<< 52.604
return0; 183.089
AVFilterContext*ctx 29.801
*ctx= 48.557
=inlink->dst; 18.756
constAVPixFmtDescriptor 13.091000000000001
returnAVERROR(ENOMEM); 97.16199999999999
staticvoid 134.627
intwidth, 17.9
intheight, 10.997
{\ 68.123
*dst= 21.184
consttype 11.187
*src= 16.281
=(const 34.371
constfloat 78.977
y= 26.659
0;y 37.418
y< 54.984
<height; 10.187
y++){ 41.512
x= 29.706
=1; 127.296
x< 60.554
<width; 14.758
x++){ 34.466
}\ 39.607
+1); 13.425
-1) 32.99
1)* 27.373
0;x 51.937
-1; 42.464
=0, 42.653999999999996
+1) 41.369
(intj 10.092
j= 21.041
0;j 57.364000000000004
j< 65.07600000000001
+i 19.898999999999997
i* 18.328
intfilter_frame(AVFilterLink 11.568
filter_frame(AVFilterLink*inlink, 10.283
*inlink,AVFrame 12.376999999999999
AVFilterLink*outlink 17.566000000000003
*outlink= 17.566000000000003
=ctx->outputs[0]; 13.853
out= 15.709999999999999
if(!out) 10.854000000000001
/2, 10.187
returnff_filter_frame(outlink, 14.376999999999999
staticav_cold 55.46
av_coldvoid 23.945
voiduninit(AVFilterContext 10.949
uninit(AVFilterContext*ctx) 10.997
constchar 43.083
intret 14.948
ret= 163.952
if(ret 105.35
(ret< 89.307
<0) 218.60299999999998
returnret; 149.95600000000002
constAVFilterPad 35.561
.name= 104.96900000000001
="default", 33.704
.type= 83.166
=AVMEDIA_TYPE_VIDEO, 54.507999999999996
.config_props= 20.898999999999997
.filter_frame= 13.139
=filter_frame, 11.044
constAVFilter 45.367999999999995
.description= 20.803
.priv_size= 20.708000000000002
.priv_class= 26.134999999999998
.uninit= 17.519000000000002
=uninit, 13.234
.query_formats= 18.28
=query_formats, 15.424
.inputs= 20.28
.outputs= 20.518
.flags= 31.799999999999997
#include"libavutil/common.h" 12.425
#include"libavutil/avassert.h" 11.949
staticav_always_inline 17.043
constint16_t 28.468
inti; 56.126
tmp= 12.187
>>3; 11.282
>>1; 23.136
for(i 223.363
(i= 222.64899999999997
1;i 17.185
i++){ 162.524
*2; 12.806
ptrdiff_tstride, 13.901000000000002
intx, 31.562
x,y; 16.186
for(y 42.94
(y= 42.845
for(x 48.842999999999996
(x= 48.748
1)+ 13.853
+1]; 12.187
+=stride; 14.996
+1] 31.848
-1] 14.281999999999998
+2) 15.899999999999999
2)>> 10.568
>>2; 14.186
3* 12.568
2* 45.891
+4 14.805
4* 23.66
x+ 20.708000000000002
1)>> 14.328999999999999
x+= 13.805
2){ 27.23
+x 20.613
1]= 24.564
>>1); 10.806000000000001
av_coldint 38.513000000000005
return1; 13.472000000000001
=NULL; 55.793
#include<stdint.h> 13.663
#include"avcodec.h" 24.088
constint32_t 12.329999999999998
h= 15.948
=1 27.278
1+ 18.756
for(ch 11.472999999999999
(ch= 11.472999999999999
0;ch 11.711
ch< 12.092
ch++){ 10.759
=avctx->priv_data; 55.840999999999994
inti, 55.603
i,j, 16.805
intret; 42.035
if((ret 62.506
((ret= 62.601
av_log(avctx,AV_LOG_WARNING, 12.901000000000002
=2; 15.899999999999999
av_log(avctx,AV_LOG_ERROR, 85.59400000000001
}else 278.204
else{ 192.99099999999999
for(j 54.984
(j= 54.889
j++){ 38.56
=-1; 17.375999999999998
if(i 13.282
returnAVERROR(EINVAL); 45.415
=i; 12.520000000000001
*i 12.520000000000001
for(k 15.043000000000001
(k= 14.996
0;k 14.615
k< 17.566000000000003
k++){ 10.806000000000001
<8; 21.232
1){ 35.656
i+ 19.566
i,j; 17.328
==0) 36.228
0){ 118.727
<4; 28.229999999999997
0,0, 724.931
-1, 16.138
8* 22.326999999999998
4+ 17.852
+1, 15.995000000000001
staticinline 32.943000000000005
>=0) 17.852
inlinevoid 12.996
val= 14.520000000000001
elseif 106.826
8+ 11.472999999999999
=2 10.568
2+ 27.610999999999997
*(1 12.282
-1); 26.229999999999997
-1]; 10.664
4){ 11.616
sum= 10.472999999999999
*8 12.949000000000002
/2; 30.657999999999998
>1) 10.664
constAVFrame 16.043
0))< 14.328999999999999
{.i64= 54.507999999999996
0,1, 137.531
NULL}, 10.616
constAVCodec 58.888
.long_name= 42.321
=AVMEDIA_TYPE_AUDIO, 24.612000000000002
.id= 44.13
.capabilities= 16.091
.priv_data_size= 21.184
.init= 31.894999999999996
.close= 13.758
.caps_internal= 16.709
0}, 81.119
0|| 28.611
err= 32.276
if(err 22.232
(err< 18.947
"Failedto 16.519000000000002
returnerr; 17.328
do{ 18.518
}while 17.852
},0, 45.987
{.i64 48.272
.i64= 48.414
-1}, 15.043000000000001
==1) 19.566
+1; 35.751
intw, 17.9
numberof 21.326999999999998
0,FLAGS 11.52
ofthe 16.567
{.i64=0},0, 14.662
0,AV_OPT_TYPE_CONST, 106.588
0,FLAGS, 48.652
"mode"}, 11.33
NULL,NULL, 16.519000000000002
NULL,0, 24.755000000000003
case1: 10.092
=i 11.616
+i] 12.949000000000002
i]= 10.045
x,int 10.426
inty, 11.616
{/* 26.659
x* 13.615
-1 16.805
1- 12.425
+y 34.085
y* 38.703
inlineint 11.52
1,0, 75.74
+j 11.378
*4 16.138
2]= 10.283
=(float 10.664
2,2, 85.023
>0) 35.18
&1) 17.471
av_log(ctx,AV_LOG_ERROR, 27.325
returnAVERROR_INVALIDDATA; 111.015
*const 16.947
{10, 17.375999999999998
10,9, 28.896
9,10, 45.511
{0, 147.719
0}; 10.759
8){ 13.376999999999999
for(n 12.568
(n= 12.520000000000001
0;n 13.805
n< 14.948
n++){ 10.283
c= 17.947
-1,1, 33.99
1,3, 21.756
3,5, 14.091000000000001
5,7, 11.378
7,10, 10.426
10,14, 15.234
1<< 27.135
*ctx,void 15.138
void*arg, 17.185
*arg,int 14.948
intjobnr, 16.852
jobnr,int 15.519
intnb_jobs) 13.758
*frame= 10.283
=arg; 11.854
/nb_jobs; 18.09
AVFrame*frame) 10.235
"setthe 13.472000000000001
dst= 11.235
=(uint16_t 14.996
v= 17.233
dst+= 27.421
returnNULL; 11.235
return-1; 19.28
1: 11.14
4;i++) 14.376999999999999
i- 11.235
{// 13.044
*avctx,void 10.14
void*data, 11.568
AVPacket*avpkt) 11.044
.decode= 12.853
width= 13.567
height= 12.663
+slice_start 14.709999999999999
slice_start* 15.186
p= 16.471
=1, 10.14
constdouble 15.567
src+= 16.519000000000002
*3 12.996
3+ 11.901
avctx->pix_fmt= 20.326999999999998
<3; 13.758
w= 16.091
:0; 15.328999999999999
uint8_t*src, 18.947
1|| 10.949
>>1) 13.758
+8 13.948000000000002
a= 14.472000000000001
b= 19.566
size= 10.426
*2 26.991999999999997
w,int 13.996
<h; 12.092
<w; 13.709999999999999
<=0) 11.758
constunsigned 10.283
1,1, 212.7
AV_LOG_ERROR,"Invalid 14.567
r= 12.282
+(1 12.711
av_log(s->avctx,AV_LOG_ERROR, 19.518
0&& 29.801
unsignedint 38.798
==1 16.138
==0 16.995
{0 12.996
=AVERROR(ENOMEM); 12.425
gotofail; 41.845
n= 12.235
*8, 13.520000000000001
0,2, 45.415
8,8, 56.936
?0 10.14
0: 10.283
x,y, 17.662
{{ 38.655
y+ 10.378
+2 20.613
2,0, 23.755
255,255, 34.228
2,1, 48.557
+1 22.85
128,128, 17.662
len= 11.187
gotoend; 15.424
*dst,const 14.662
<2; 12.376999999999999
>0 15.091000000000001
0? 11.901
==2) 11.758
<0 26.706
4,4, 76.92999999999999
4,8, 12.949000000000002
=FLAGS 10.568
INT_MIN,INT_MAX, 28.134999999999998
3,0, 15.424
1}, 40.94
{2, 41.559000000000005
3}, 39.702999999999996
4}, 50.509
1,4, 14.234
4,5, 37.037
5,6, 24.707
6,7, 24.041
constuint16_t 33.228
0,3, 20.945999999999998
2,4, 15.709999999999999
3,2, 27.135
buf+= 10.949
=0 15.424
0,0 23.85
dst[x]= 11.758
16,16, 725.9309999999999
1,2, 62.885999999999996
8,4, 12.520000000000001
{15, 15.043000000000001
AV_OPT_TYPE_INT,{.i64 17.804
AV_OPT_TYPE_INT,{ 15.186
AV_OPT_TYPE_CONST,{ 21.565
0,VE, 13.901000000000002
3,4, 35.847
4,6, 11.711
7,9, 14.948
10,10, 89.878
uint8_t*buf, 10.045
=get_vlc2(gb, 13.472000000000001
=get_bits(gb, 32.943000000000005
{8, 25.136
1,1 11.901
av_log(avctx,AV_LOG_DEBUG, 12.473
{1, 83.071
},{ 772.346
}}, 75.168
"",0, 10.568
{3, 30.323999999999998
=get_bits1(gb); 12.425
*n 14.234
]= 15.424
8,10, 15.805
9,8, 15.376
},// 10.949
2}, 27.944
{12, 16.852
11}, 24.468999999999998
{16, 15.757
{24, 12.187
{20, 13.282
{18, 16.662
{4, 27.944
{-1, 26.278
{22, 10.806000000000001
{26, 11.758
OPNAME## 10.33
},INT_MIN, 19.137
AV_OPT_TYPE_CONST,{.i64 30.42
{14, 14.472000000000001
15}, 15.186
1,0 14.281999999999998
{17, 15.948
{19, 12.376999999999999
8,12, 12.044
{13, 15.472000000000001
13,9, 13.044
9,11, 25.374000000000002
5}, 54.746
6}, 59.84
7}, 61.50599999999999
10,8, 14.091000000000001
9,13, 12.949000000000002
12,9, 18.756
10,13, 22.232
15,12, 20.28
11,8, 15.280999999999999
15,13, 23.755
14,11, 31.799999999999997
14,10, 15.472000000000001
{7, 23.422
{5, 25.659000000000002
{6, 24.041
{11, 15.614
{9, 18.328
14}, 23.326999999999998
10}, 28.563
19,19, 14.424
11,15, 13.948000000000002
8}, 47.986
9}, 39.369
12}, 15.948
15,11, 11.14
12,8, 12.282
{21, 12.044
{30, 11.711
{25, 10.759
{27, 10.664
{23, 10.902
{29, 10.759
9,16, 10.235
{-3, 10.378
{-2, 13.234
0.0,0.0, 14.853
0,-2, 16.233
16,13, 62.791
10,16, 18.756
22}, 14.328999999999999
0x66,0x66, 51.176
12,16, 46.082
{28, 11.33
13}, 25.659000000000002
{31, 12.044
254,254, 11.33
.props= 22.66
=AV_CODEC_PROP_INTRA_ONLY 14.186
AV_CODEC_PROP_INTRA_ONLY| 14.186
0,+1, 12.568
1},{ 21.089000000000002
2},{ 11.472999999999999
+1,0, 11.806000000000001
STATE_FOLLOW}, 13.615
0,STATE_START 13.758
STATE_START}, 13.758
STATE_DATA}, 14.234
2,{ 15.424
1,{ 29.801
#ifndef 18.497
#define 244.36599999999999
#include 363.154
typedef 65.40400000000001
struct 88.037
{ 3406.4530000000004
int 1727.4210000000003
1 158.124
if 1357.555
start 13.58
code 11.278
is 37.463
} 475.07399999999996
extern 75.199
const 806.073
uint8_t 332.87199999999996
void 259.312
width, 30.829
*s, 51.511
int16_t 77.735
#endif 65.209
/* 122.61200000000001
*/ 125.30499999999999
"libavutil/opt.h" 18.497
"avfilter.h" 15.258000000000001
"internal.h" 28.214000000000002
AVClass 24.546000000000003
*class; 15.961
float 214.942
OFFSET(x) 16.506999999999998
x) 22.673
FLAGS 64.935
static 549.96
AVOption 19.902
= 5456.405000000001
"set 72.194
AV_OPT_TYPE_FLOAT, 16.897000000000002
0.0, 23.102
}, 1372.423
1, 744.4540000000001
to 69.228
AV_OPT_TYPE_INT, 49.872
0, 1452.578
NULL 56.545
query_formats(AVFilterContext 11.083
*ctx) 40.507
enum 64.038
AVPixelFormat 20.917
AV_PIX_FMT_NONE 14.166
return 751.283
ff_set_common_formats(ctx, 10.029
*s 88.389
ctx->priv; 66.926
/ 248.659
* 1057.619
<< 195.977
- 662.661
for 551.8340000000001
(int 69.306
i 313.867
0; 803.77
< 814.541
(1 50.028
i++) 199.918
AVFilterContext 29.619
*ctx 39.804
inlink->dst; 15.375
AVPixFmtDescriptor 10.888
|| 205.069
AVERROR(ENOMEM); 89.911
\ 442.95799999999997
height, 16.156
type 34.653
*dst 18.263
*src 14.088
(const 33.013999999999996
y 127.568
height; 15.296999999999999
y++) 37.697
x 132.758
1; 230.669
width; 19.317
x++) 37.853
+ 1324.6580000000001
1); 95.998
width 31.687
2; 100.759
>= 118.164
1) 139.744
height 28.253000000000004
k 30.048
x; 16.39
j 96.466
j++) 49.326
*inlink, 11.005
AVFrame 106.222
AVFilterLink 27.785
*outlink 14.4
ctx->outputs[0]; 11.356
out 24.078
av_frame_free(&in); 11.395000000000001
plane 15.453
& 219.235
7) 12.799999999999999
continue; 27.706999999999997
<= 75.862
8) 41.013999999999996
else 311.721
2, 441.436
2); 44.994
ff_filter_frame(outlink, 14.438999999999998
out); 10.575
av_cold 51.550000000000004
*ctx, 50.497
char 79.491
*arg, 15.688
ret 141.968
(ret 94.086
0) 282.92199999999997
ret; 175.138
AVFilterPad 31.102
.name 86.125
"default", 28.291999999999998
.type 68.174
AVMEDIA_TYPE_VIDEO, 44.799
.config_props 17.131
.filter_frame 10.770999999999999
AVFilter 37.346
.description 17.053
.priv_size 16.975
.priv_class 21.424
.uninit 14.360999999999999
uninit, 10.849
.query_formats 14.985000000000001
query_formats, 12.643999999999998
.inputs 16.624000000000002
.outputs 16.819
.flags 26.224
"libavutil/common.h" 10.184999999999999
av_always_inline 14.867999999999999
ptrdiff_t 54.789
i; 76.174
tmp 16.546
4) 34.38
>> 232.698
3; 44.136
( 10.263
(i 206.27900000000002
len 16.585
0); 79.686
+= 336.618
output 16.429
*c, 11.161
stride, 39.921
x, 56.389
y; 22.829
(y 53.501000000000005
(x 55.608999999999995
1]; 19.746
stride; 19.278000000000002
*data, 13.034
-= 48.702
4; 63.765
1] 41.326
2] 15.258000000000001
2) 70.438
3 79.53
2 129.402
4 100.681
*s) 13.931
NULL; 56.623000000000005
<stdint.h> 11.2
uint32_t 56.70099999999999
*dst, 34.692
linesize, 16.195
0 177.40200000000002
"avcodec.h" 19.746
6 66.49600000000001
13 22.985
8 101.422
int32_t 46.593999999999994
int8_t 15.491999999999999
channel 15.531
and 17.912
a 40.546
buffer 11.044
of 74.691
bits 16.936
double 94.788
i, 75.628
h 25.130999999999997
h; 18.38
(ch 11.122
ch 18.224
ch++) 11.59
*avctx) 30.556
avctx->priv_data; 45.814
uint64_t 17.053
j, 20.526
((ret 51.472
== 358.393
av_log(avctx, 99.744
AV_LOG_WARNING, 21.151
" 39.921
the 84.447
be 18.38
switch 36.175
case 229.30300000000003
break; 194.767
8; 51.394
default: 23.258
AV_LOG_ERROR, 137.988
(j 51.589
6; 10.653
-1; 32.741
AVERROR(EINVAL); 40.858000000000004
> 185.90900000000002
not 33.873
9, 308.872
(k 14.946
k++) 13.658
i); 16.273
? 139.041
: 139.666
j; 23.922
64 10.575
63, 50.926
16; 24.39
s 14.867999999999999
16) 21.853
64; 10.184999999999999
in 44.37
>>= 15.609
a, 12.175
b 27.59
4); 26.341
31, 87.257
value 17.522
m 10.770999999999999
NULL); 13.151
inline 27.199
*in, 10.497
sample 11.511999999999999
samples 11.005
index 12.839
16); 20.565
3) 30.165
4, 344.969
val 19.317
^ 12.058
&& 245.108
t 12.213999999999999
| 102.00800000000001
7 62.711
while 56.038
goto 73.59899999999999
too 10.458
with 13.346000000000002
11, 432.14799999999997
16, 996.6249999999999
5, 270.317
7, 246.74699999999999
14, 457.669
6, 256.971
3, 329.438
8, 325.691
return; 20.722
sum 18.419
*= 23.531
12, 488.186
*avctx, 44.292
AVPacket 20.136000000000003
ret, 11.434000000000001
0)) 16.039
AV_OPT_TYPE_BOOL, 11.356
{.i64 44.682
0}, 16.702
AVCodec 49.403999999999996
.long_name 34.692
AVMEDIA_TYPE_AUDIO, 20.214000000000002
.id 36.175
.capabilities 13.190000000000001
.priv_data_size 17.366
.init 26.145999999999997
.close 11.278
.caps_internal 13.697000000000001
16 31.414
err; 24.273
err 28.409000000000002
(err 18.614
"Failed 13.697000000000001
do 17.717000000000002
#undef 19.746
frame 33.482
video 13.034
.i64 39.687000000000005
unsigned 92.447
) 21.657999999999998
*const 14.985000000000001
}; 35.629
w, 27.59
number 20.526
max 10.575
*src, 27.199
INT_MAX, 39.452999999999996
80, 20.839
AV_OPT_TYPE_DOUBLE, 11.668
color 10.81
AV_OPT_TYPE_STRING, 17.951
{.i64=0}, 13.034
FLAGS, 62.243
AV_OPT_TYPE_CONST, 89.13000000000001
NULL, 67.08200000000001
AVFilterFormats 12.799999999999999
i] 14.360999999999999
y, 33.677
p 29.658
count 11.785
c, 10.107000000000001
!= 139.002
c 30.868
35, 78.789
buf, 14.127
input 20.799999999999997
av_log(ctx, 44.682
AVERROR_INVALIDDATA; 97.481
int64_t 32.78
10, 370.178
end; 17.287
AVCodecContext 16.546
#if 40.623999999999995
n; 10.653
(n 18.575
n 44.448
n++) 11.356
% 25.482
8); 34.38
jobnr, 17.405
nb_jobs) 11.434000000000001
slice_start 18.887
nb_jobs; 14.985000000000001
1)) 15.414000000000001
frame, 11.044
100, 18.38
-10, 20.995
uint16_t 72.35
avctx->width 11.278
dst 37.931
(uint16_t 13.190000000000001
v 25.365000000000002
|= 30.907
AV_LOG_DEBUG, 19.941
size_t 13.892000000000001
from 10.184999999999999
*out, 12.331000000000001
data 15.688
GetBitContext 17.794999999999998
10 32.428999999999995
11 24.0
14 22.009
160, 10.966000000000001
17, 182.39700000000002
size 34.536
%s\n", 11.2
buf_size 14.751
40, 77.26700000000001
buf_size; 10.653
.decode 10.536
h, 22.4
/= 12.605
l 11.356
b, 13.736
n, 12.722
src 29.852999999999998
offset 16.078
size; 16.233999999999998
avctx->pix_fmt 19.785
w 30.711999999999996
3); 20.878
size, 13.424
size) 10.107000000000001
src, 17.599999999999998
stride 16.39
d 12.956
%d\n", 19.59
ptr 12.643999999999998
size); 10.770999999999999
w; 18.419
left 12.527
"Invalid 17.248
r 15.961
, 27.59
av_log(s->avctx, 20.917
AV_LOG_VERBOSE, 11.902
%d 26.887
256, 15.922
fail; 34.302
g 14.711999999999998
9 40.507
15, 328.657
ThreadData 12.917000000000002
20, 124.28999999999999
); 10.732
77, 25.326
28, 102.281
15 17.639
128, 43.004000000000005
13, 502.85900000000004
AV_LOG_INFO, 12.213999999999999
"", 11.98
linesize 12.097
48, 63.022999999999996
64, 52.682
24, 111.608
"Error 10.497
mode 11.122
end 11.161
INT_MIN, 23.414
pos 12.917000000000002
104, 15.531
block 17.209
*buf, 12.839
buf 25.403999999999996
or 11.824
] 18.029
A 14.009
-2, 131.70499999999998
## 47.024
dst[x] 10.029
pixel 21.112
level 14.946
*) 11.356
VE, 16.624000000000002
table 12.058
*gb, 11.122
get_bits(gb, 30.517
get_vlc2(gb, 11.940999999999999
put_bits(&s->pb, 19.160999999999998
1}, 26.263
2}, 13.774999999999999
get_bits1(gb); 11.434000000000001
14; 10.263
*/, 13.112
+1, 27.551000000000002
fprintf(stderr, 10.302
AV_CODEC_PROP_INTRA_ONLY 11.668
.props 18.575
AV_CODEC_PROP_LOSSY, 11.161
STATE_START 11.317
STATE_FOLLOW 11.2
STATE_DATA 11.707
0.0000000, 12.213999999999999
1.0000000, 12.175
2,18, 11.434000000000001
E2( 10.497
E4( 16.312
// Ruby
require'spec_helper' 148.373
{{ 75.261
}} 132.344
beforedo 467.915
theuser 41.134
it"is 16.241
falseif 28.475
ifthe 32.615
doesnot 78.313
#rubocop:disable 33.305
defindex 10.244
path= 24.68
returnfalse 35.534
falseunless 16.162
returnunless 82.48
returnif 58.144
moduleGitlab 47.237
={ 119.12800000000001
=nil 71.20100000000001
=nil) 42.089
user= 39.86
=true 95.43
>0 26.75
=false 112.494
bea 11.73
key= 13.931999999999999
==1 11.836
{key: 11.624
[]} 11.199
includeGitlab::Database::MigrationHelpers 40.284
DOWNTIME= 52.757
defchange 33.199
do|t| 34.818000000000005
subject{ 141.261
it'contains 10.323
ofthe 77.543
disabled'do 32.111
theproject 17.515
IDof 10.297
theproject' 10.456
project'do 42.805
it'creates 41.372
'createsa 21.257
witha 37.126
file'do 16.002
it'returns 331.484
false'do 19.212999999999997
true'do 17.94
context'when 503.343
isenabled' 12.286999999999999
enabled'do 26.511
isdisabled' 18.868
it'uses 10.244
'returnsan 23.141000000000002
anempty 17.064
<ActiveRecord::Migration[6.0] 45.831
defup 58.091
defdown 55.782
presence:true 10.297
->{ 40.391
subjectdo 12.048
params:{ 115.06800000000001
expect(response).tohave_gitlab_http_status(:ok) 52.439
moduleAPI 11.862
params= 24.547
={}) 42.036
=0 28.74
+=1 17.143
it"returns 73.775
"returnsthe 13.056999999999999
it"can 14.595999999999998
asa 13.454999999999998
it"doesn't 26.246000000000002
anerror 35.586999999999996
errorwhen 16.453
expect{ 190.037
}.not_toraise_error 16.215
<ActiveRecord::Base 25.608999999999998
<ActiveRecord::TestCase 10.854000000000001
defsetup 15.312
'whenthe 77.278
{true 21.124
true} 48.272
{false 18.444
false} 30.97
it'allows 18.868
tobe 28.024
it'sets 25.211
ifblock_given? 10.084
do|f| 15.18
args= 12.154
output= 19.001
=[] 52.757
==0 17.488
=1 14.516
={} 32.933
+1 10.801
result= 95.85499999999999
betrue 17.435000000000002
it'has 31.898
context'with 130.725
it{ 283.503
{is_expected.to 183.536
context"when 64.009
"whenthe 15.896
isnot 98.216
nota 15.072999999999999
arenot 13.136
befalse 14.251
thereis 22.079
isa 52.386
asingle 10.217
thereare 16.692
listof 12.022
thegiven 13.614
let(:project){ 65.071
{create(:project, 85.691
create(:project,:repository) 20.567
:repository)} 28.608000000000004
'returnstrue 16.055
truewhen 10.403
whenthe 32.269999999999996
project:project, 79.136
'returnsfalse 18.338
falsewhen 11.252
usingRSpec::Parameterized::TableSyntax 11.517
{create(:project) 29.457
create(:project)} 29.457
|false 54.482
|true 52.969
with_themdo 19.24
thedefault 10.137
onthe 21.23
group'do 21.867
project= 21.734
name'do 15.312
project:project) 72.209
project)} 62.337
options= 38.321
lambda{ 14.304000000000002
#:nodoc: 37.551
renderjson: 19.32
class<< 17.25
<<self 16.268
<Base 12.950000000000001
nil} 39.966
})} 10.721
let(:user){ 57.667
thenew 13.242
'withan 11.013
set'do 14.357000000000001
it'is 38.666
fromthe 19.16
response= 18.736
=[ 24.176
nilif 13.481
url= 15.338999999999999
notbe 18.364
thecorrect 26.989
optional:true, 10.801
procdo 10.005
trueif 26.511
accessto 10.959999999999999
tothe 74.43900000000001
setto 13.533999999999999
forthe 38.745000000000005
anew 33.331
thesame 21.018
withthe 29.563000000000002
itis 11.066
ina 18.311
inthe 55.809000000000005
canbe 11.279
extendActiveSupport::Concern 17.329
json= 14.755
:jsdo 24.415
{create(:user) 86.195
create(:user)} 85.717
let(:group){ 14.702000000000002
{create(:group) 19.718
create(:group)} 19.877
in'do 11.171999999999999
it'shows 27.785
expect(page).tohave_content 17.197
message'do 14.888
nothave 28.502
it'does 142.535
'doesnot 142.083
it'includes 21.655
'whenthere 20.673
anerror' 14.755
error'do 35.534
<ActiveRecord::Migration[4.2] 20.408
null:false 67.778
group)} 20.434
group:group) 15.072999999999999
itdo 10.35
it'updates 22.053
=nil, 20.698999999999998
nextif 27.042
value= 17.674
describe'when 15.338999999999999
avalid 20.116
{create(:user, 16.134999999999998
'whena 17.595
user'do 44.398
thecurrent 10.801
notallow 10.721
hasbeen 17.037000000000003
defexecute 15.737
ofa 20.646
it'removes 12.286999999999999
create(:issue,project: 23.486
mergerequest 29.059
source_project:project, 14.065
context'for 22.0
=create(:project, 10.827
create(:project,:repository, 11.385
'returnsthe 59.78999999999999
path'do 17.197
group= 11.969
{create(:ci_build, 21.628
user:user) 21.840999999999998
user)} 29.988
let(:params){ 32.428999999999995
{subject 35.056
subject}.to 20.912
}.tochange 31.553
change{ 90.706
response'do 17.648
'returnsa 31.5
context"with 26.644000000000002
{get 11.04
packagesaccess' 10.084
page'do 17.488
1} 15.578
user),params: 19.93
context'without 15.896
nil)} 10.827
expect(response).tohave_gitlab_http_status(:bad_request) 13.72
request= 10.589
body= 10.668000000000001
let_it_be(:project){ 32.456
true)} 21.840999999999998
issue'do 13.056999999999999
cannotbe 11.517
}.not_tochange 14.065
notcreate 16.958000000000002
on_delete::cascade 13.402
null:false, 28.13
false,default: 10.058
moduleRuboCop 11.332
moduleCop 10.536
nextunless 18.895
<ActiveRecord::Migration[5.2] 15.472000000000001
isthe 12.818000000000001
hasa 12.977
'witha 23.061
expectdo 44.821999999999996
end.tochange 14.543
expect(response).tohave_gitlab_http_status(:created) 11.783
it'calls 13.905999999999999
with_lock_retriesdo 16.930999999999997
current_user:current_user) 10.774
message= 22.715999999999998
=>{ 48.777
let_it_be(:user){ 24.919
isan 12.26
.tochange 10.536
describe'#execute' 13.056999999999999
'#execute'do 14.092
||={} 10.959999999999999
shouldbe 25.45
featureflag 12.048
{create(:ci_pipeline, 11.171999999999999
pipeline:pipeline, 12.286999999999999
let(:request){ 10.191
{{} 14.782
{}} 17.223
token'do 12.712
aninvalid 10.323
nil'do 23.539
provided'do 10.562
value'do 11.65
request'do 19.637999999999998
present'do 13.985000000000001
valid'do 12.738
hasno 10.35
user:user, 22.026
it'raises 31.208000000000002
:aggregate_failuresdo 18.47
{expect 11.677
opts= 15.896
:testdo 28.183
'raisesan 16.958000000000002
errorif 17.833000000000002
results= 11.171999999999999
let(:path){ 10.721
it"does 26.616999999999997
"doesnot 26.06
sig{ 25.130999999999997
=if 14.994
{|c| 10.642
"\ 17.329
<ActiveSupport::TestCase 15.072999999999999
{nil 32.642
data'do 14.224
{described_class.new 15.286
described_class.new} 15.046999999999999
toa 25.423
exists'do 17.409000000000002
notexist' 19.16
exist'do 21.575000000000003
unique:true 13.136
{id: 20.567
create(:project,:public, 16.930999999999997
{create(:merge_request, 16.904999999999998
create(:merge_request,source_project: 11.624
userhas 13.349
require'rails_helper' 17.302999999999997
topic= 21.814
post= 24.76
it"should 67.22
{Fabricate(:user) 13.72
Fabricate(:user)} 13.72
auser 12.26
Fabricate(:post,topic: 13.454999999999998
fora 32.456
it'should 30.491999999999997
=Fabricate(:post, 12.420000000000002
"shouldnot 10.030999999999999
before{ 16.427
name= 21.124
self.table_name= 18.416999999999998
=project 10.376
found'do 11.703
config= 10.536
theright 16.294
numberof 14.277
mustbe 14.649
=>e 26.246000000000002
="" 10.881
raiseNotImplementedError 11.357999999999999
'whenuser 34.738
useris 38.586000000000006
describe'GET 18.152
it'responds 11.703
'respondswith 10.27
namespace_id:project.namespace, 10.907
it'renders 17.409000000000002
true}, 13.614
anexisting 12.738
createa 16.639
expect(response).tohave_gitlab_http_status(:not_found) 26.14
},{ 11.836
be_truthy} 11.65
|nil 26.352
nil| 24.388
returntrue 19.584999999999997
truedo 13.216000000000001
raiseArgumentError, 19.24
assert_equal1, 24.256
{create(:group, 24.043
:public)} 15.02
create(:project,:public) 10.191
{create(:issue, 21.973000000000003
moduleCi 13.72
it_behaves_like'a 31.792
let(:config){ 11.145999999999999
do|instance| 11.066
definitialize 10.801
%{ 11.066
moduleQA 11.357999999999999
it"raises 18.842
"raisesan 15.153
headers:{ 17.064
=Fastlane::FastFile.new.parse("lane 18.55
Fastlane::FastFile.new.parse("lane:test 26.591
mergerequest' 13.349
{type: 34.871
expected= 32.88
data= 18.258
error= 10.589
amerge 10.801
{name: 32.96
<<" 11.279
expect(response).tohave_gitlab_http_status(:forbidden) 10.934
it'can 15.312
format::json 11.04
assert_equalexpected, 10.164
anarray 12.34
arrayof 13.375
afterdo 16.772
paramsdo 18.205000000000002
type:String, 29.642999999999997
String,desc: 20.698999999999998
desc:'The 22.053
aproject 13.481
null:true, 18.338
ISNOT 12.499
havea 12.022
returnnil 12.022
branch'do 11.836
status'do 12.392999999999999
shouldnot 10.642
params:params 11.756
it'adds 12.579
doc= 16.162
classFoo 14.649
Foo< 13.747
<Formula 14.543
let(:merge_request){ 11.119
assert_equal0, 11.783
assert_equal2, 11.464
projectis 12.765
context'and 12.790999999999999
'setsthe 11.013
expect(response.status).toeq(200) 35.534
=response.parsed_body 12.181000000000001
let(:current_user){ 18.921000000000003
{is_expected.not_to 29.218
pipeline:pipeline) 12.684999999999999
themerge 10.429
type:Boolean, 10.536
:private| 22.291999999999998
true| 48.06
|:developer 13.853
:developer| 14.329999999999998
|:guest 16.108
:guest| 16.532999999999998
false| 44.239000000000004
:public| 16.48
pipeline'do 14.145
be_falsey} 10.456
let(:pipeline){ 10.27
|:unauthorized 11.119
|:private 11.862
:internal| 10.907
expected<< 37.047000000000004
<<"</select>\n" 11.73
assert_dom_equalexpected, 14.329999999999998
access'| 10.030999999999999
require 320.947
'spec_helper' 100.432
RSpec.describe 113.473
do 4256.183
{ 2598.492
} 2045.371
user: 66.248
describe 427.95300000000003
before 341.461
end 7219.883000000001
it 1490.095
the 777.767
user 164.381
if 795.1740000000001
is 447.228
username: 22.418000000000003
be_truthy 37.723
"is 13.598
false 299.82300000000004
does 54.734
not 356.173
be_falsey 30.554999999999996
when 205.336
no 67.631
password 10.328999999999999
module 361.74100000000004
class 372.304
# 128.239
rubocop:disable 22.544
include 190.212
3 22.382
feature_category 11.998999999999999
def 1846.627
< 294.721
= 3195.2630000000004
index 15.682
'') 10.886
show 11.245
redirect_to 11.299
else 173.757
path 61.757
head 12.898
0, 53.674
name: 168.548
private 105.22800000000001
params 48.87799999999999
return 275.141
unless 227.808
true 307.798
||= 117.461
|| 160.483
version 36.878
render 44.89
status: 34.31
Gitlab 32.1
description 15.556000000000001
name 69.194
tag 15.646
alias_method 12.376999999999999
project: 145.55499999999998
description: 79.792
url: 11.856
action: 31.381999999999998
count: 12.125
+ 116.29299999999999
&& 177.458
nil 167.865
nil) 90.929
raise 117.551
user) 61.919000000000004
admin 19.291999999999998
title 18.754
in 160.80599999999998
AND 39.986
NOT 17.73
id 30.394
FROM 45.052
WHERE 39.788
> 61.542
0 94.288
user_id: 18.718
true), 10.239
user.id, 11.496
name, 18.718
!= 33.825
email 30.358
== 176.38
username 11.478
there 27.735
be 148.232
a 495.44100000000003
change 94.899
of 174.745
case 29.747
elsif 47.009
? 70.757
: 70.972
key 40.651
1 110.599
false) 77.798
for 197.271
key: 21.017
default_value: 10.543999999999999
[] 67.308
value) 12.251
<< 166.842
value 60.985
Gitlab::Database::MigrationHelpers 27.285999999999998
DOWNTIME 35.711
|t| 26.406
:integer 10.095
subject 174.90699999999998
state 13.867999999999999
context 751.2180000000001
with 213.25799999999998
disabled' 22.31
project 113.814
ID 14.406
and 163.824
project' 32.172
'creates 29.855
.to 78.14
file' 13.706
file 54.644000000000005
'returns 230.79
false' 13.113
eq(false) 39.052
true' 12.395
eq(true) 48.015
'when 355.149
object 13.328999999999999
enabled' 20.819
up 49.955
to 356.873
expect(subject).to 43.363
=> 515.632
3, 30.447
}) 69.284
using 33.843
are 79.936
an 177.06300000000002
empty 24.214000000000002
ActiveRecord::Migration[6.0] 31.022
disable_ddl_transaction! 21.232
down 38.243
belongs_to 19.364
validates 21.646
:name, 16.005
presence: 12.179
200 11.514
' 13.993
scope 37.381
-> 42.896
[{ 18.61
}] 13.508
post 88.36099999999999
params: 112.611
headers: 20.729
status 34.489
event 13.418
expect(response).to 125.41900000000001
have_gitlab_http_status(:ok) 35.89
error 63.033
token 25.076999999999998
attr_accessor 35.620999999999995
upload 17.676000000000002
API 16.076999999999998
expose 44.261
user, 54.662000000000006
{}) 43.794
tags 14.676000000000002
[], 26.477999999999998
[]) 11.496
+= 33.573
"returns 50.405
all 49.381
given 21.807000000000002
block 13.939
be_empty 34.633
"can 11.407
"foo" 16.113
by 68.404
without 24.717000000000002
parent 15.843000000000002
but 19.167
[ 53.368
only 33.447
as 66.733
"doesn't 18.358
expect 160.231
}.not_to 27.394000000000002
raise_error 17.604
}.to 72.858
ActiveRecord::Base 17.872999999999998
setup 17.263
test 121.10700000000001
execute 30.177999999999997
while 10.616
from 71.88799999999999
'allows 13.669999999999998
false, 109.28800000000001
'sets 18.466
1) 38.261
yield 26.549
begin 36.196
ensure 30.843
body 15.233
assert_equal 352.365
200, 11.622
assert_match 17.334
assert 44.046
on 75.068
=~ 16.364
|f| 14.478
match 20.55
default: 41.315
5 10.958
<<-RUBY 12.808
proc 11.226999999999999
RUBY 28.256
get 168.889
extend 36.034
app_file 11.065000000000001
attr_reader 47.656
string 15.430000000000001
app 22.777
args 15.61
command 25.453999999999997
output 29.801
failed 10.023
environment 15.772
"") 10.437000000000001
- 71.062
ActiveSupport::TestCase 10.328999999999999
new 59.979
add_column 24.735000000000003
| 307.20500000000004
rescue 62.655
>= 15.376
( 10.904
* 39.537
) 14.101
% 15.915
lambda 12.987
& 13.4
2 39.519
last 11.226999999999999
/ 14.191
0) 18.556
4 10.347
{} 56.225
" 54.67999999999999
out 10.347
break 13.185
1, 85.89999999999999
|c| 11.011
10 12.341000000000001
repository 20.334
:repository, 12.466
delegate 11.299
to: 31.543
body: 21.322
result 86.259
be_present 25.705
'has 24.358
'with 95.69
custom 13.975000000000001
is_expected.to 157.68
"when 48.213
protected 13.113
branch 19.939
that 45.285
contains 11.622
matching 11.263
other 14.711999999999998
than 16.957
at 24.680999999999997
list 20.747
let(:project) 45.842
create(:project, 68.96
:repository) 20.442
project, 96.53399999999999
create(:project) 23.119
group 54.141
has 73.28999999999999
set 29.208000000000002
with_them 13.095
default 30.915
group' 16.454
level 11.263
true, 133.017
any 21.933
name' 12.430000000000001
query 15.394
class_name: 16.724
foreign_key: 13.095
include_examples 25.867
project) 73.092
be_nil 60.033
options 42.68
:nodoc: 25.418
field 26.962999999999997
hash 15.394
super 40.399
alias 11.802
url 41.961999999999996
before_action 14.748
json: 14.766
true) 112.28699999999999
self 27.663
service 24.861
current_user, 16.544
params) 11.568
require_relative 39.986
Base 10.005
size 12.520000000000001
}, 139.699
options) 21.268
path: 32.226
id: 61.434
as: 16.778
namespace_id: 18.646
project_id: 28.112
format: 24.663
used 11.55
this 36.357
more 10.922
one 22.291999999999998
be_valid 20.980999999999998
let(:user) 39.537
project.add_maintainer(user) 10.832
sign_in(user) 23.55
eq 101.258
already 22.274
set' 10.023
'is 28.921
expect(page).not_to 21.573999999999998
visit 42.662
click_button 11.73
if: 18.251
with: 30.843
note 15.376
use 29.046
you 27.285999999999998
response 25.813000000000002
created 11.370999999999999
create 44.261
version: 10.706
have 47.225
build 23.909
or 44.728
found 12.251
values 10.543999999999999
issue 35.315999999999995
correct 34.777
FastlaneCore::ConfigItem.new(key: 22.508
env_name: 19.472
your 23.226
optional: 17.244999999999997
find 15.7
then 16.364
update 22.669
will 16.203
can 32.603
type 34.166
access 28.04
"The 14.173000000000002
commit 25.903
URL 10.562
source 17.298
job 25.094
add 13.814
same 18.053
number 15.233
type: 104.40200000000002
"", 18.070999999999998
'The 24.538
link 20.872999999999998
next 42.662
different 11.443
specify 19.921000000000003
&block) 30.016
ActiveSupport::Concern 11.766
json 16.903
:js 17.119
create(:user) 65.116
let(:group) 10.221
create(:group) 15.843000000000002
group: 30.663
group, 11.532
title: 48.429
expect(page).to 82.325
'shows 19.67
have_content 19.291999999999998
message' 11.514
'does 102.37200000000001
text: 15.79
RSpec.shared_examples 16.436
page 12.501999999999999
'includes 15.933000000000002
multiple 18.017
content 21.664
error' 25.453999999999997
ActiveRecord::Migration[4.2] 13.831999999999999
create_table 13.275
t.string 17.263
null: 85.738
t.integer 23.801000000000002
add_index 10.059
nil, 109.86200000000001
{}, 20.173000000000002
email: 21.34
namespace: 25.705
group) 22.31
wait_for_requests 18.951
'user 12.197
fill_in 12.071
'updates 15.772
#:nodoc: 13.472000000000001
enabled 10.005
"" 21.592000000000002
it_behaves_like 163.662
was 33.825
eq(2) 18.43
eq(0) 24.52
valid 35.729
eq(1) 42.698
create(:user, 14.658
been 21.107
user' 32.873
current 18.251
allow 12.664
current_user 13.436
users 20.676000000000002
current_user) 18.143
author: 25.777
present 11.658
create(:issue, 22.201999999999998
merge 51.339
request 48.321
create(:merge_request, 19.221
source_project: 19.867
'for 17.101
projects 14.783999999999999
path' 12.412999999999998
create(:group, 21.34
parent: 12.825999999999999
namespace 15.197
allow(subject).to 10.383000000000001
create(:ci_build, 21.412
let(:params) 28.436
pipeline 28.723000000000003
package 14.802000000000001
}.by(1) 14.280999999999999
success 15.305000000000001
response' 14.209
"with 21.861
'rejects 11.998999999999999
access' 13.221000000000002
first 14.119
page' 13.149000000000001
user), 16.185
include_context 11.622
'without 11.459999999999999
shared_examples 30.843
let_it_be(:project) 22.201999999999998
issue' 10.904
cannot 17.442
message: 27.537
array 16.652
invalid 30.016
feature 24.735000000000003
message 41.728
remove_column 10.401
on_delete: 15.933000000000002
:cascade 12.071
limit: 20.047
2, 56.35
SQL 25.867
\ 33.232
value: 33.447
ActiveRecord::Migration[5.2] 10.472999999999999
member 12.466
author 10.904
time 16.131
end.to 22.580000000000002
current_user: 29.01
scope: 14.173000000000002
JOIN 16.903
ON 20.029
with_lock_retries 11.73
column: 17.478
label 13.257000000000001
Formula 11.299
eq(nil) 19.813
resource 13.669999999999998
:project, 11.317
only: 21.969
after 31.346
attributes 15.79
:id, 12.286999999999999
topic 30.375999999999998
raw 12.501999999999999
data: 10.077
assert_predicate 25.059
let_it_be(:user) 16.921
service.execute 11.263
should 38.226
'' 17.622
flag 17.101
'a 31.776999999999997
is_expected.not_to 22.149
expect(result).to 28.831
create(:ci_pipeline, 11.981
pipeline: 22.201999999999998
project.add_developer(user) 10.76
token' 10.562
allowed 13.059000000000001
nil' 16.293
exception 12.214999999999998
method 11.281
call 10.077
request' 20.173000000000002
returns 17.263
'raises 21.61
desc: 35.711
class: 12.969
args: 10.652000000000001
:aggregate_failures 12.520000000000001
INDEX_NAME 10.688
add_concurrent_index 11.065000000000001
where: 11.263
2) 18.7
path, 10.401
opts 14.693999999999999
:test 20.388
results 13.130999999999998
system 11.55
"does 19.885
<<~SQL 11.065000000000001
SET 12.772
trait 12.089
source: 10.113
sig 17.316
config 22.687
data' 11.137
<<~EOS 10.221
EOS 12.214999999999998
5, 15.322999999999999
described_class.new 12.844000000000001
element 12.251
required: 13.059000000000001
exists' 11.91
exist' 14.802000000000001
data 35.351
t.index 14.908999999999999
unique: 14.406
404 12.089
force: 10.383000000000001
IS 21.304000000000002
attribute 14.280999999999999
:public, 16.149
expected 58.991
state: 14.981
topic, 10.203
files 13.238999999999999
has_many 21.34
'rails_helper' 11.712
posts 14.802000000000001
.and 13.850000000000001
raw: 20.514
"should 49.757999999999996
Fabricate(:user) 16.328
public 10.437000000000001
topic: 18.933
delete 25.328
count 16.185
topic_id: 13.49
Fabricate(:post, 20.065
'should 23.622
log 11.119
created_at: 24.107
issues 17.927
self.table_name 12.538
table 12.341000000000001
right 13.921
must 16.311
run 11.353
e 25.508
assert_nothing_raised 11.047
:string, 10.167
category 10.904
category: 11.245
'GET 13.688
have_gitlab_http_status(:not_found) 18.448
'renders 12.862
expect(json_response).to 12.501999999999999
existing 23.891000000000002
'can 12.071
doc 12.233
target 13.939
String, 24.107
puts 34.22
ArgumentError, 14.046999999999999
:public) 11.927999999999999
let(:config) 13.472000000000001
argument 13.221000000000002
target: 13.293
"raises 13.634000000000002
line 14.065
Fastlane::FastFile.new.parse("lane 18.322
end").runner.execute(:test) 17.999
code 11.407
requests 11.425
requires 16.634
diff 11.73
ref 10.94
action 18.951
project.id, 11.011
sha: 10.958
assert_not_predicate 16.005
assert_nil 20.298000000000002
GitLab 12.538
**options) 10.041
null, 18.285999999999998
SELECT 24.448
NULL 12.501999999999999
put 31.13
10, 25.023
expected, 17.837
text 15.754000000000001
:success 14.299000000000001
4, 17.334
AS 19.059
cache 10.597999999999999
pipeline) 10.311
assert_not 19.472
script: 13.203
push 10.203
eq( 10.508000000000001
desc 17.963
optional 21.502000000000002
BY 11.047
node 10.167
ref: 17.783
specified 11.838000000000001
assert_response 11.173
errors 14.388000000000002
Fabricate(:user, 10.293000000000001
Foo 10.616
resources 10.688
controller: 13.257000000000001
record 12.376999999999999
expect(response.status).to 39.052
eq(200) 26.029
autoload 19.956999999999997
let(:current_user) 12.879999999999999
method: 12.718000000000002
:private 15.484
:developer 10.597999999999999
:guest 11.676
:public 11.604
15, 14.011000000000001
pipeline' 10.437000000000001
using: 10.239
@response.body 14.82
assert_dom_equal 12.305000000000001
run_generator 10.095
assert_file 13.453999999999999
concat 10.239
// Haskell
foo:: 10.764000000000001
::Int 41.44
importqualified 493.51000000000005
#if__GLASGOW_HASKELL__ 54.894000000000005
__GLASGOW_HASKELL__>= 32.829
__GLASGOW_HASKELL__< 25.833
a= 46.821999999999996
->String 61.891
a-> 151.228
->a 37.672
::a 16.145
=id 13.453999999999999
>=806 14.531
__ 128.08599999999998
a=> 34.443
=Just 114.63199999999999
_= 127.00999999999999
=Nothing 116.24700000000001
__) 19.913
_)= 45.745
ab 45.745
=map 58.661
->Just 43.592
->Maybe 71.04
=do 531.182
Name-> 16.684
<806 12.915999999999999
v<- 10.225
f= 40.902
=error 26.909
_))= 19.913
Nothing-> 190.515
->Nothing 25.294
_)-> 35.52
n= 20.989
)where 71.57799999999999
importStack.Prelude 60.81399999999999
Stack.Preludehiding 10.764000000000001
qualifiedData.ByteString.Lazy 11.84
Data.ByteString.Lazyas 11.84
importData.List 39.287
qualifiedData.Map.Strict 14.531
Data.Map.Strictas 14.531
asMap 39.287
qualifiedData.Set 30.138
Data.Setas 30.138
asSet 24.756000000000004
qualifiedData.Text 58.123
Data.Textas 58.123
asT 73.19200000000001
importDistribution.Version 10.764000000000001
importPath 28.522999999999996
importPath.IO 14.531
importStack.Constants 16.684
importStack.Types.Compiler 10.225
importStack.Types.Config 32.291
importStack.Types.SourceMap 12.378000000000002
importSystem.FilePath 18.836
importRIO.Process 16.684
instanceException 15.607
instanceShow 28.522999999999996
packageNameStringname 13.993
name++ 12.915999999999999
::HasEnvConfig 39.825
HasEnvConfigenv 43.592
env=> 50.589000000000006
=>RIO 19.913
RIOenv 78.574
env() 25.833
liftIO$ 284.15799999999996
PackageName-> 16.684
->Path 21.526999999999997
PathAbs 80.189
AbsFile 20.451
File-> 13.993
String-> 90.952
->RIO 89.87599999999999
exists<- 17.222
<-doesFileExist 20.451
$do 445.074
logError$ 11.84
"<> 173.293
<>fromString 30.676
fromString(toFilePath 22.065
->do 339.591
env(Path 13.453999999999999
(PathAbs 59.738
AbsDir) 31.753
AbsFile) 37.672
=>Path 39.287
AbsDir 53.28000000000001
Dir-> 26.371000000000002
<-view 124.31899999999999
=T.pack 20.989
T.pack$ 29.062
$packageNameString 11.302
->False 17.222
_-> 195.35899999999998
->True 12.915999999999999
thenreturn 27.447000000000003
return$ 198.05
$Right 17.222
Right$ 17.222
$Just 39.287
elsedo 32.291
=if 29.599999999999998
Lefterr 20.989
err-> 21.526999999999997
$Left 16.684
->return 231.955
Just$ 85.57000000000001
$map 55.971000000000004
for" 13.993
=case 67.80999999999999
->[] 28.522999999999996
->Text 30.138
Text-> 35.52
->[String] 20.989
[String]-> 37.134
thendo 27.985
"- 17.222
returnNothing 43.053999999999995
<>RIO.display 13.453999999999999
view$ 46.821999999999996
args= 40.363
(\x-> 17.222
logInfo$ 33.367
.fst) 12.378000000000002
letmsg 15.607
++toFilePathNoTrailingSep 11.302
::Bool 48.436
::Maybe 46.283
}deriving 32.829
deriving(Show) 15.607
return[] 11.302
&&not 11.302
logWarn$ 27.447000000000003
<>displayShow 14.531
->throwString 13.453999999999999
throwString$ 10.225
"++ 171.141
inthe 29.062
++T.unpack 10.225
->throwIO 12.378000000000002
_)<- 11.302
elsereturn 15.069
<-case 18.836
=>Text 10.225
[PathAbs 13.453999999999999
<-fmap 12.378000000000002
.map 16.684
logDebug$ 17.76
thefollowing 11.84
unless(null 17.222
"Thefollowing 10.225
ofthe 38.749
"," 19.913
::HasLogFunc 15.069
HasLogFuncenv 17.76
path= 17.222
<-liftIO 107.09700000000001
=Map.fromList 17.222
$T.concat 12.378000000000002
::MonadIO 36.596000000000004
MonadIOm 40.363
m=> 67.272
->m 115.17
m() 40.363
letfp 12.378000000000002
fp= 41.978
=toFilePath 12.378000000000002
::Path 69.96300000000001
t-> 31.753
::String 107.09700000000001
=return 54.894000000000005
Left$ 23.142
<>" 31.753
T.pack. 22.603
=mapMaybe 13.453999999999999
[]-> 46.283
dir= 21.526999999999997
$filter 18.836
importLens.Family2 10.764000000000001
Tensorv 15.069
va 11.84
awhere 12.378000000000002
->Tensor 26.909
x= 85.032
fx 12.915999999999999
::Tensor 25.833
.fromString 15.069
fromString. 12.915999999999999
v= 15.607
=[] 50.051
::(MonadBuild 10.764000000000001
(MonadBuildm, 17.222
b-> 20.451
ma 34.443
build$ 12.378000000000002
.(^. 12.378000000000002
TensorBuild 36.058
Builda 15.069
--^ 164.683
t= 30.676
=>m 20.989
TensorTypea 10.225
::IO 74.807
importOptions.Applicative 19.374
Bool-> 31.214
->Parser 38.749
<>metavar 11.84
s<- 12.915999999999999
sof 13.453999999999999
Lefte 14.531
e-> 19.913
importOptions.Applicative.Builder.Extra 10.225
::Parser 66.734
<>help 24.756000000000004
IO() 94.719
importLanguage.Haskell.LSP.Types 15.069
importHaskell.Ide.Engine.PluginUtils 12.378000000000002
importControl.Applicative 10.225
String-- 13.453999999999999
deriving(Show, 39.287
Position-> 11.302
|Just 15.069
|otherwise 112.47900000000001
otherwise= 88.26100000000001
(not. 11.302
"" 22.603
=pure 21.526999999999997
importControl.Lens 10.225
importData.Aeson 19.374
importData.Maybe 25.294
importData.Monoid 10.764000000000001
importHaskell.Ide.Engine.MonadTypes 16.145
asC 14.531
qualifiedLanguage.Haskell.LSP.Types 10.225
Language.Haskell.LSP.Typesas 11.302
PluginId-> 10.225
thetype 19.374
::Uri 15.069
instanceFromJSON 26.909
parseJSON= 17.76
instanceToJSON 12.378000000000002
->IdeGhcM 18.836
IdeGhcM(IdeResult 13.993
liftToGhc$ 21.526999999999997
$newTypeCmd 18.298000000000002
Uri-> 17.76
->IdeM 16.145
uri= 38.749
uri$ 10.225
debugm$ 17.76
$IdeResultOk 23.68
pos= 10.764000000000001
,T.pack 12.378000000000002
b= 17.222
->Bool 56.509
::T.Text 38.749
deriving(Eq, 30.138
(Eq,Show) 14.531
=concatMap 15.069
$concat 16.684
Nothing(Just 10.764000000000001
->T.Text 29.599999999999998
T.Text-> 44.669000000000004
_(Just 10.225
"Substitutehole 11.84
msg= 22.603
=" 11.84
=fromMaybe 23.142
.snd) 11.84
names= 10.225
[]= 16.684
Justx 21.526999999999997
(Just$ 18.298000000000002
otherwise-> 22.065
->case 13.993
$case 18.836
(Ll 12.915999999999999
.fmap 10.764000000000001
->error 25.833
xs= 13.453999999999999
pure$ 46.283
::Map 14.531
b)-> 13.453999999999999
->f 14.531
=fmap 26.371000000000002
::forall 37.672
foralla 11.84
error$ 24.756000000000004
++show 103.868
::MonadThrow 10.764000000000001
MonadThrowm 10.764000000000001
MonadThrowm) 11.84
m)=> 26.909
=>FilePath 24.218
FilePath-> 105.483
Monadm 11.84
asL 11.302
::[String] 27.985
=[ 18.298000000000002
=True 62.429
Parsera 24.218
p= 17.222
r<- 13.993
qualifiedData.Map 26.909
Data.Mapas 26.909
Map.fromList$ 10.764000000000001
caseMap.lookup 22.603
->Int 17.222
Int-> 44.131
name= 33.367
a)=> 18.298000000000002
=>a 12.378000000000002
importSystem.Environment 16.145
main:: 40.902
main= 61.352
<-asks 15.069
->pure 45.207
<>display 14.531
":" 11.84
res<- 16.145
ifnull 17.222
inner= 22.065
<-ask 13.993
=Map.insert 10.764000000000001
x-> 42.516
::FilePath 67.272
->IO 116.785
dir</> 17.76
::!(Set 13.453999999999999
::Lens' 24.756000000000004
=lens 20.989
(\xy 17.76
y-> 24.218
->x 24.218
x{ 17.222
=y 20.451
y}) 16.684
$fromString 11.302
->FilePath 43.053999999999995
return() 68.887
=liftIO 19.913
importControl.Monad 25.294
=not 12.915999999999999
derivingShow 30.676
instanceArbitrary 10.764000000000001
arbitrary= 10.764000000000001
x)= 18.836
(FilePath-> 11.302
->a) 12.915999999999999
a)-> 25.294
RIORunner 19.374
Runner() 16.145
willbe 16.145
::!(Path 19.374
!(PathAbs 23.68
PathRel 50.589000000000006
RelDir 29.062
,WithoutHaddocks 11.84
WithoutHaddocks$ 11.84
,( 19.374
$T.pack 23.68
$configL.to 10.764000000000001
viewconfigL 25.294
::HasBuildConfig 10.225
HasBuildConfigenv 11.84
=view 12.915999999999999
m,MonadReader 13.993
MonadReaderenv 10.225
envm, 19.374
Dir-- 11.84
m(Path 10.764000000000001
(PathRel 10.225
::(MonadReader 10.764000000000001
(MonadReaderenv 10.764000000000001
config= 10.764000000000001
platform<- 11.302
::![String] 10.764000000000001
(long 15.607
tobe 12.378000000000002
tothe 20.451
importTest.Hspec 29.062
spec:: 24.218
::Spec 37.672
spec= 25.294
s= 34.982
x== 42.516
Left_ 17.222
=head 16.684
importControl.Monad.IO.Class 29.062
asS 13.453999999999999
$T.unpack 13.453999999999999
(Range(Position 27.985
Range(Position 19.374
doesnot 15.069
(T.pack$ 11.302
=IdeResultOk 38.749
moduleMain 16.684
Mainwhere 15.069
importSystem.Directory 24.756000000000004
logm$ 17.76
x<- 41.44
=x 30.676
::Text 95.258
MapPackageName 16.145
(Show,Eq, 22.065
Eq,Ord) 15.607
tof 10.225
=T.unpack 12.915999999999999
,Just 13.993
::!(Maybe 33.367
deps= 13.453999999999999
=False 60.276
$Set.toList 10.225
->Left 16.684
->Right 15.069
=name 15.069
Map.lookupname 11.302
,show 11.302
," 67.80999999999999
isa 13.453999999999999
onthe 12.915999999999999
forallenv. 10.764000000000001
<-mapM 19.913
m,TensorType 11.302
TensorTypea) 10.225
OpParams-> 10.225
.(opAttr 10.764000000000001
t<- 10.225
(Eq,Ord, 10.225
=show 11.302
>>return 11.84
returnTrue 13.453999999999999
->throwM 19.374
importStack.Types.Version 11.302
=concat 33.367
fp-> 12.915999999999999
,T.unpack 10.764000000000001
T.unpack$ 16.145
thepackage 14.531
::!(Map 23.142
!(MapPackageName 11.302
::!Bool 51.665
instanceSemigroup 11.84
y= 38.749
enva 12.378000000000002
action= 10.764000000000001
::(HasEnvConfig 10.225
m,MonadIO 10.225
instanceMonoid 10.764000000000001
mempty= 11.302
mappend= 11.302
=(<>) 11.302
<$>o 28.522999999999996
Justfp 10.225
returnFalse 11.84
_<- 76.96
importTestUtils 13.993
IOa 12.915999999999999
act= 32.291
it"runs 23.142
"runsthe 20.989
[a]-> 11.84
asa 10.225
atomically$ 10.764000000000001
eres<- 11.84
caseeres 12.378000000000002
eresof 12.378000000000002
()-> 16.684
forthe 10.225
importTest.HUnit 11.302
::Koan 11.302
=describe 11.84
=koan 10.225
function"$ 10.764000000000001
letresult 13.993
result= 16.684
assertEqual"use 10.225
importSyntax 11.84
ParserExpr 16.145
<-expr 11.302
returnx 13.453999999999999
->(a 10.764000000000001
(a-> 25.833
->Either 22.603
importData.Int 11.302
asTF 29.062
::Test 46.821999999999996
1:: 13.453999999999999
::Int32] 17.222
<-TF.runSession 18.836
TF.runSession$ 31.214
[1,2, 10.764000000000001
1,1, 18.836
0,0, 12.378000000000002
<-TF.render 38.211
TF.render$ 38.211
=testCase 37.134
run$ 12.378000000000002
$TF.vector 14.531
::V.Vector 17.222
=defaultMain 12.915999999999999
$withCurrentDirectory 34.443
withCurrentDirectory"./test/testdata/context" 12.915999999999999
fp<- 50.589000000000006
<-makeAbsolute 37.672
makeAbsolute"./ExampleContext.hs" 12.915999999999999
arg= 24.218
=filePathToUri 32.829
filePathToUrifp 25.294
letres 22.065
res= 50.051
actual<- 16.145
<-setTypecheckedModule 18.298000000000002
actual`shouldBe` 15.069
`shouldBe`res 13.453999999999999
<-getContextAt 12.378000000000002
getContextAtfp 12.915999999999999
fp(toPos 12.378000000000002
(toPos(6, 10.764000000000001
(toPos(2, 24.218
(2,1)) 12.378000000000002
asJ 16.145
caseres 11.302
resof 12.378000000000002
0)(Position 23.68
=mempty 19.374
config<- 27.985
++" 32.291
"Couldnot 15.069
isnot 18.298000000000002
=putStrLn 18.836
->s 11.302
$runSession 42.516
runSessionhieCommand 44.131
hieCommandfullCaps 39.825
fullCaps"test/testdata" 16.684
"test/testdata"$ 22.603
doc<- 40.902
<-openDoc 46.283
<-count 17.222
count2 17.222
2$ 14.531
$skipManyTill 13.453999999999999
skipManyTillloggingNotification 16.145
loggingNotificationnoDiagnostics 13.993
doc(Position 17.76
(Position1 17.222
`shouldBe`Just 51.126999999999995
.T.pack 10.225
->1 31.214
targets= 10.225
<-run 11.84
reduceDiag^. 10.764000000000001
(Position5 23.68
(Position0 18.836
00) 10.225
`shouldBe`Nothing 10.225
putStrLn$ 17.222
->" 10.225
="" 10.764000000000001
=unlines 14.531
Just_ 11.84
=maybe 10.764000000000001
,[ 22.603
dir<- 10.764000000000001
name-> 12.915999999999999
=go 13.993
[flow 11.302
,style 10.225
line<> 17.76
result<- 15.069
,flow 19.374
$toFilePath 13.993
throwM$ 19.913
::(MonadIO 21.526999999999997
(MonadIOm, 17.76
xy 29.599999999999998
fromString$ 10.225
env,HasLogFunc 25.294
=f 10.764000000000001
liftIO. 15.069
expected= 10.764000000000001
fa 13.453999999999999
item= 11.302
$\s 10.225
\s-> 10.764000000000001
->Bool) 11.84
m= 13.453999999999999
ExprExpr 11.84
::Expr 23.142
Expr-> 25.294
->Expr 17.76
env)=> 10.225
<-forM 12.378000000000002
<>line 11.84
=flip 10.225
,if 12.915999999999999
<-get 13.993
::PackageName 11.84
=Set.empty 10.225
True)-> 11.302
casetaskType 10.225
=Set.fromList 13.993
|not 10.764000000000001
=Map.empty 10.764000000000001
=>String 15.607
=Range 20.451
->Repl 10.764000000000001
->liftIO 15.607
property$ 243.25699999999998
a== 10.764000000000001
x)== 32.291
==x", 13.993
x",property 24.218
$\(QFilePath 33.367
\(QFilePathx) 33.367
x)-> 53.818
==x) 16.684
$\(QFilePathValidP 10.225
\(QFilePathValidPx) 10.225
$\(QFilePathValidW 10.225
\(QFilePathValidWx) 10.225
x)",property 15.607
==True", 12.915999999999999
True",property 12.915999999999999
==True) 12.915999999999999
==False", 21.526999999999997
False",property 21.526999999999997
==False) 21.526999999999997
==Just 10.764000000000001
=fromFirstFalse 12.378000000000002
=fromFirst 11.84
=String 11.302
=TP 17.76
Env-> 10.225
::Name 13.453999999999999
::Float] 18.298000000000002
::TF.OneOf 12.378000000000002
::Float) 11.302
::ByteString 10.764000000000001
=Position 12.378000000000002
::(HasProcessContext 13.453999999999999
(HasProcessContextenv, 15.607
HasLogFuncenv) 16.145
b)= 19.374
NothingNothing 23.68
Type-> 11.84
::HasConfig 18.298000000000002
HasConfigenv 21.526999999999997
<-either 10.225
[TextEdit 16.684
TextEdit(Range 30.676
(Range(toPos 57.047
1))(toPos 30.138
leturi 22.065
testPluginsfp 28.522999999999996
fpact 23.68
->fail 13.453999999999999
cwd</> 29.599999999999998
RelFile 20.989
viewplatformL 12.378000000000002
:map 12.915999999999999
,"" 18.298000000000002
head$ 11.84
e= 10.225
notin 18.298000000000002
inscope: 10.764000000000001
notfind 10.764000000000001
a)= 14.531
::Session 10.764000000000001
->Value 16.145
Value-> 12.915999999999999
evalenv 12.378000000000002
[Just 14.531
_[toT 12.378000000000002
[toT-> 16.145
[dz]= 22.065
[Just$ 10.225
toT-> 13.453999999999999
->x, 11.302
(x:: 10.764000000000001
=lookupAttr 12.915999999999999
lookupAttrnodeDef 13.453999999999999
"data_format".~ 10.764000000000001
testCommandtestPlugins 22.065
argres 19.374
withCurrentDirectory"./test/testdata" 19.913
"./test/testdata"$ 19.913
First<$> 26.909
msg`shouldBe` 12.915999999999999
$fmap 15.069
functionUrlpreludeUrl 10.225
++toFilePath 10.225
message:: 10.764000000000001
->Doc 17.222
instancePretty 10.225
pprp 29.599999999999998
<+>ppr 12.378000000000002
bc 11.302
<-TF.run 12.378000000000002
typecommand, 17.222
setTypecheckedModuleuri 17.76
newTypeCmd(toPos 17.222
TPFalse 17.222
Falseuri 17.222
uri(toPos 17.222
[(Range 16.145
,(Range 23.142
->Int") 10.225
act"generic" 16.684
"generic""type" 16.684
"type"arg 17.222
makeAbsolute"Types.hs" 15.069
"MaybeInt 12.915999999999999
->Action 12.915999999999999
::!(First 33.904999999999994
::!FirstFalse 12.378000000000002
<-First 25.833
o..:? 35.52
<-FirstFalse 11.84
FirstFalse<$> 11.84
TF.OneOf'[Word16, 10.764000000000001
'[Word16,Double, 12.915999999999999
Double,Float] 13.453999999999999
Float]t 11.302
::HasCallStack 14.531
HasCallStack=> 13.993
filter((== 11.84
->Codegen 11.84
lety 15.069
TF.gradientsy 11.84
>>=TF.run 12.378000000000002
[dx]<- 10.225
<*>buildResult 15.069
<*>pureResult 15.069
<$>obj 18.298000000000002
obj..:? 25.294
<-o 10.764000000000001
,mkPackageName 22.065
lette 10.764000000000001
te= 10.764000000000001
=TextEdit 10.764000000000001
<-applyEdit 10.764000000000001
applyEditdoc 10.764000000000001
docte 10.764000000000001
fullCaps"test/testdata/completion" 11.84
"test/testdata/completion"$ 12.378000000000002
openDoc"Completion.hs" 10.764000000000001
"Completion.hs""haskell" 10.764000000000001
compls<- 11.84
<-getCompletions 11.84
getCompletionsdoc 11.84
letitem 10.225
(^.label)) 11.302
label))compls 11.302
item^. 28.522999999999996
resolved^. 10.225
$U.logs 12.378000000000002
U.logs$ 11.84
$passHandler 11.84
passHandlerrin 12.378000000000002
=$(mkRelFile 18.836
=$(mkRelDir 25.294
module 182.291
where 675.2969999999999
foo 31.028000000000002
:: 2162.933
Int 81.018
= 4948.157
import 1678.5459999999998
qualified 397.766
#if 59.902
__GLASGOW_HASKELL__ 51.283
>= 39.647
as 426.20899999999995
GHC 51.714000000000006
#else 46.111999999999995
#endif 66.366
Module 10.343
< 35.338
Name 55.161
hiding 46.111999999999995
type 102.997
GhcTc 10.343
a 624.014
-> 2933.039
String 214.613
id 40.509
pattern 35.338
<- 1471.26
806 21.978
_ 635.65
#elif 12.498000000000001
names 37.924
ty 11.205
. 654.181
data 182.291
forall 36.2
=> 393.88699999999994
ns 15.082999999999998
Just 493.43700000000007
Nothing 455.94399999999996
{ 315.88599999999997
}) 34.907
_) 89.637
| 493.006
deriving 138.335
b 124.544
let 630.047
map 168.932
(Just 171.518
if 169.363
then 175.396
else 171.087
in 185.739
&& 78.43299999999999
, 2050.886
Maybe 107.306
do 1123.053
(_, 28.443
body 12.498000000000001
_, 12.498000000000001
L 10.343
(L 22.84
n) 21.547
n 111.616
v 105.583
e 83.173
f 184.446
r 60.764
l 68.952
g 25.426000000000002
p) 15.945
} 102.135
error 69.383
_)) 21.547
tm 15.514000000000001
case 427.07
of 561.096
fmap 81.018
(map 52.145
fst) 12.498000000000001
df 14.221
key 17.238
deps 39.216
( 152.556
) 107.73700000000001
Stack.Prelude 49.559
(..)) 17.669
Data.ByteString.Lazy 10.343
Data.List 34.907
Data.Map.Strict 12.498000000000001
Map 65.50399999999999
Data.Set 25.857000000000003
Set 35.769000000000005
Data.Text 53.438
T 66.366
Distribution.Version 10.774
Path 135.749
Path.IO 12.067
Stack.Constants 13.79
Stack.Types.Config 26.288
Stack.Types.SourceMap 10.343
System.FilePath 21.978
RIO 101.27300000000001
RIO.Process 13.359
newtype 38.785000000000004
PackageName 54.730999999999995
instance 247.796
Exception 14.652
Show 53.869
show 204.70100000000002
name) 37.924
report 12.498000000000001
targets 34.476
(" 15.514000000000001
++ 483.094
packageNameString 35.338
name 235.29800000000003
" 595.141
is 112.047
used 13.79
with 74.12299999999999
HasEnvConfig 43.957
env 245.641
() 273.653
liftIO 275.807
$ 2760.2290000000003
Abs 147.816
File 42.664
exists 30.597
doesFileExist 24.564
when 68.521
ensureDir 16.375999999999998
(parent 16.375999999999998
logError 19.393
to 218.922
<> 617.981
fromString 80.15700000000001
(toFilePath 74.554
=<< 25.426000000000002
(Path 64.642
Dir) 31.89
(packageNameString 13.79
return 597.726
</> 188.325
File) 31.89
parseRelFile 14.221
"/" 11.636000000000001
Dir 69.383
Package 18.531
[Text] 15.514000000000001
pkgDir 29.305
package 97.39399999999999
tests 14.221
view 124.544
T.pack 80.587
(packageName 12.498000000000001
package) 13.79
packageIdentifierString 12.067
ghcVersion 13.79
False 148.24599999999998
True 134.45600000000002
mkVersion 12.067
Right 101.27300000000001
not 159.01999999999998
Set.null 13.79
Left 91.361
err 49.559
RIO.display 18.962
T.unpack 62.919
forM_ 29.735
(T.unpack 18.1
for 120.666
\"" 10.343
parent 20.255
: 79.726
[] 237.02200000000002
Text 155.142
[String] 55.161
find 30.165999999999997
- 38.354
expected 31.028000000000002
it 162.46800000000002
at 20.686
"." 15.082999999999998
displayShow 16.375999999999998
Nothing) 33.614000000000004
Map.elems 15.082999999999998
args 109.892
concatMap 27.15
(\x 28.874
toFilePathNoTrailingSep 25.426000000000002
logInfo 59.040000000000006
liftM 21.978
proc 15.082999999999998
toFilePath 61.626
all 27.15
msg 59.471000000000004
The 15.945
any 26.719
this 34.907
your 15.082999999999998
the 296.062
library 10.774
code 24.133
stack 46.973
(if 19.824
"") 15.514000000000001
may 14.221
you 22.84
should 15.082999999999998
have 17.238
False) 43.525999999999996
True) 47.404
void 12.498000000000001
Bool 112.047
(Show) 12.498000000000001
opts 35.769000000000005
null 36.2
(null 24.564
logWarn 46.542
concat 67.659
forM 24.564
(Map.toList 12.498000000000001
target 15.082999999999998
throwString 18.962
local 32.321
but 25.426000000000002
either 26.719
an 19.393
or 47.404
throwIO 24.994999999999997
dirs 12.928
files) 11.205
dir 99.97999999999999
xs 62.919
mapM 33.614000000000004
no 24.994999999999997
files 33.183
are 31.459
destDir 15.514000000000001
dest 12.498000000000001
<+> 71.107
length 25.426000000000002
2 54.3
"No 17.238
one 12.928
found 17.238
", 34.476
[Path 12.067
logDebug 28.443
following 21.978
(show 16.807000000000002
unless 38.785000000000004
"The 19.824
out 15.514000000000001
version 78.43299999999999
mconcat 15.945
HasLogFunc 38.785000000000004
(Maybe 39.647
path 70.24499999999999
file 79.295
path) 16.375999999999998
`elem` 19.393
Map.fromList 22.409
k 30.597
x)) 21.978
(Right 14.652
== 469.73400000000004
T.concat 21.978
[ 246.503
This 10.343
be 61.195
available 12.498000000000001
MonadIO 42.664
m 258.56899999999996
fp 254.26
t 169.363
h 26.719
isPathSeparator 13.359
PackageIdentifier 21.978
distDir 16.807000000000002
contents 26.719
": 15.945
result 61.195
[1, 27.580999999999996
config 84.035
Cabal 16.807000000000002
<$> 249.089
(const 15.945
(T.pack 29.305
mapMaybe 25.857000000000003
"" 124.975
f) 20.686
(++) 12.498000000000001
> 17.238
1) 24.564
-- 236.16000000000003
try 14.652
on 49.989999999999995
env) 69.383
filter 34.907
TensorType 31.89
Tensor 59.902
Value 46.973
pure 131.439
<*> 149.53900000000002
x 463.27
Monad 13.79
>>= 55.592
Ref 11.205
value 19.393
(Tensor 16.807000000000002
o 74.985
a) 127.13
render 19.393
class 19.393
t) 46.542
v) 21.547
ts) 10.774
ts 13.359
(MonadBuild 13.79
m, 71.968
d 28.874
build 45.681
(^. 15.945
Build 46.111999999999995
expr 33.614000000000004
ByteString 21.117
^ 132.301
(o 12.928
use 30.597
IO 163.761
[FilePath] 12.928
Options.Applicative 18.531
Parser 94.809
hide 35.338
option 13.359
(long 45.681
metavar 30.597
help 65.935
s 126.268
e) 12.928
many 16.807000000000002
completer 14.221
optional 11.636000000000001
(strOption 11.205
switch 10.774
check 17.669
3 26.288
bar 14.652
FilePath 139.627
Language.Haskell.LSP.Types 20.255
Haskell.Ide.Engine.PluginUtils 10.343
context 10.343
list 13.359
List 16.807000000000002
from 43.095
(Show, 31.459
Position 26.288
pos 33.183
(GHC.L 17.238
r) 21.978
ctx 13.79
go 98.256
otherwise 91.361
{}) 10.774
p 110.323
<|> 46.542
(True, 12.498000000000001
(False, 12.928
Set.empty 24.564
Set.fromList 19.393
dependencies 12.498000000000001
test 20.686
(not 15.082999999999998
global 14.652
"\n" 24.564
cmd 42.664
command 17.669
text 22.84
Data.Aeson 17.669
Data.Maybe 24.994999999999997
Haskell.Ide.Engine.MonadTypes 13.359
C 12.928
PluginId 12.928
PluginDescriptor 12.928
plId 15.514000000000001
"generic" 14.652
which 17.669
"type" 17.669
TP 15.082999999999998
Uri 24.564
FromJSON 24.133
parseJSON 28.012
ToJSON 14.652
toJSON 14.652
IdeGhcM 21.117
(IdeResult 20.255
uri 127.13
liftToGhc 18.962
newTypeCmd 15.514000000000001
IdeM 18.962
pluginGetFile 10.774
(IdeResultOk 13.79
[]) 27.15
info 28.443
debugm 27.15
IdeResultOk 57.74699999999999
fst 35.338
Range 29.735
(Range 71.107
T.Text 73.692
(Eq, 24.133
Show) 18.531
diags 16.807000000000002
^. 140.058
diag 10.774
title 19.824
kind 19.393
we 18.531
range 30.165999999999997
+ 41.802
0) 45.25
(TypeDef 10.343
hole 11.205
0 70.24499999999999
term 17.238
|| 42.664
(== 14.652
fromMaybe 34.476
prefix 17.669
snd 20.686
' 12.928
line 37.062
/= 38.785000000000004
[Just 11.205
doc 96.964
[x] 15.945
"haskell" 40.509
1 93.516
(Nothing, 10.343
Decl 12.498000000000001
l) 12.928
(f 18.1
(Set 15.514000000000001
x) 165.91500000000002
b) 51.283
(x, 13.79
y) 25.426000000000002
x, 15.514000000000001
t1 12.928
t2 12.498000000000001
y 133.163
[a] 20.255
(a 45.681
': 14.652
(x 19.824
xs) 23.702
a, 25.426000000000002
i 34.907
a)) 10.774
tensorType 12.498000000000001
MonadThrow 18.531
m) 60.333
.| 38.785000000000004
lexer 21.547
reserved 15.082999999999998
reservedOp 10.343
parens 14.221
Data.Map 21.547
mappend 12.067
Map.lookup 31.459
loc 37.493
q 12.928
c 67.659
print 15.082999999999998
System.Environment 12.928
main 88.776
Stack 12.498000000000001
options 24.133
asks 15.082999999999998
count 21.117
loop 31.028000000000002
display 32.321
res 124.975
(Set.toList 12.067
mempty 64.211
((== 10.343
Map.toList 15.514000000000001
"- 15.082999999999998
ec 16.375999999999998
os 12.498000000000001
App 12.928
inner 41.371
ask 17.669
canonicalizePath 13.79
"stack" 10.774
const 12.498000000000001
str 14.652
(liftIO 10.774
Map.insert 18.531
(fromString 15.945
runRIO 11.636000000000001
lookupEnv 10.343
!(Set 12.067
FilePath) 18.962
Lens' 28.012
lens 20.686
HasProcessContext 11.636000000000001
processContextL 10.343
<.> 11.205
src 14.652
Map.singleton 15.082999999999998
Control.Monad 21.978
Arbitrary 10.343
arbitrary 23.271
(HasProcessContext 13.79
(..), 14.221
Runner 20.255
"' 10.774
will 26.288
flags 26.288
WithoutHaddocks 10.343
withConfig 15.082999999999998
{..} 17.238
!(Path 19.393
Rel 52.145
HasRunner 11.636000000000001
HasTerm 10.343
HasGHCVariant 11.636000000000001
HasConfig 24.133
HasBuildConfig 15.082999999999998
root 24.133
stack.yaml 12.067
intercalate 13.359
and 66.79700000000001
compiler 37.062
configL 23.702
project 36.2
$(mkRelDir 25.426000000000002
MonadReader 14.221
dir) 11.205
directory 16.375999999999998
$(mkRelFile 19.824
Config 26.719
platform 24.133
env, 54.3
that 43.957
must 15.082999999999998
script 14.652
long 19.824
run 41.802
Test.Hspec 23.271
spec 46.111999999999995
Spec 31.459
input 29.735
Either 22.409
describe 58.178
parse 22.84
s) 29.735
args) 18.1
head 21.547
Control.Monad.IO.Class 23.271
S 10.774
source 23.271
pp 13.79
ex 21.547
(Either 14.652
txt 14.221
(Position 93.085
new 23.271
IdeResultFail 12.498000000000001
does 13.359
(fmap 17.669
maybe 43.095
(Left 11.636000000000001
err) 16.807000000000002
Main 14.221
System.Directory 21.978
given 10.343
logm 20.255
getCurrentDirectory 10.343
cradle 17.238
exe 14.221
* 24.994999999999997
(..) 22.84
locals 21.978
Eq, 24.994999999999997
Ord) 15.514000000000001
(name, 15.945
":" 12.498000000000001
!(Maybe 28.443
NamedComponent 15.082999999999998
flip 22.409
Set.toList 16.375999999999998
comp 11.636000000000001
component 20.686
specified 11.636000000000001
was 10.343
ident 22.409
version) 12.067
Map.empty 29.305
errs 14.652
need 15.514000000000001
packages 42.233
up 12.498000000000001
withCurrentDirectory 30.165999999999997
variable 17.669
params 36.2
(opAttr 10.343
.~ 46.542
shape 27.15
& 30.165999999999997
Double, 14.652
Float] 27.580999999999996
output 19.824
Ord, 11.205
>> 24.994999999999997
throwM 36.631
M 10.343
cabal 20.255
set 13.359
parser 12.067
unlines 20.686
Text) 11.636000000000001
get 16.807000000000002
Version 27.580999999999996
!(Map 18.531
Ghc 10.774
FlagName 12.498000000000001
Bool) 28.443
!Bool 41.371
(Map 23.702
Semigroup 11.205
pkg 40.078
pkg) 19.393
String) 18.1
ActualCompiler 12.067
packageName 10.343
lp) 13.359
lp 34.045
EnvConfig 18.1
action 28.012
Local 11.205
Monoid 12.498000000000001
(<>) 17.238
.= 28.012
fp) 30.165999999999997
GhcPkgId 11.205
stackYaml 12.067
resolver 18.962
old 11.636000000000001
TestUtils 11.636000000000001
testPlugins 31.89
IdePlugins 12.498000000000001
act 55.161
cwd 37.062
default 11.636000000000001
`shouldBe` 150.401
"runs 18.531
req 43.095
lookup 12.067
Action 16.807000000000002
()) 31.459
atomically 10.774
eres 19.824
function" 18.1
assertEqual 17.669
4 18.962
Syntax 11.636000000000001
Integer 10.774
Expr 89.206
Lam 10.343
"-" 12.498000000000001
val 25.426000000000002
TF 23.271
Test 43.957
testCase 37.493
TF.Shape 11.205
1, 32.751999999999995
Int32] 14.652
0, 21.978
TF.runSession 25.857000000000003
TF.render 31.89
TF.run 25.426000000000002
TF.shape 10.343
@=? 53.438
V.fromList 23.702
2, 19.393
[2, 15.514000000000001
1] 10.343
op 16.375999999999998
V.Vector 18.1
TF.vector 19.393
TF.Tensor 12.928
fromIntegral 15.945
Int64 12.928
by 25.426000000000002
(2, 21.547
1)) 26.288
defaultMain 11.205
"./test/testdata/context" 10.343
makeAbsolute 34.476
"./ExampleContext.hs" 10.343
arg 43.525999999999996
filePathToUri 28.012
actual 30.165999999999997
mempty) 14.652
setTypecheckedModule 17.238
getContextAt 10.774
(toPos 133.59400000000002
"import 19.824
def 23.702
J 12.928
tool 14.221
If 12.067
plugins 12.498000000000001
cliOut 10.774
"Could 12.067
mapM_ 17.238
putStrLn 56.022999999999996
match 11.205
runSession 46.111999999999995
hieCommand 38.354
fullCaps 32.751999999999995
"test/testdata" 18.1
openDoc 37.062
skipManyTill 16.375999999999998
loggingNotification 13.79
noDiagnostics 12.928
`shouldSatisfy` 13.79
*> 11.636000000000001
Pretty 14.221
5 24.994999999999997
TF.gradients 18.1
message 15.514000000000001
Type 34.907
config) 25.426000000000002
base 12.928
Platform 22.409
Ctx 14.652
lib 10.774
installedMap 13.79
cabalfp 15.514000000000001
installMap 13.79
pkgName 13.79
(return 16.807000000000002
empty 10.343
pkgs 19.824
] 36.631
c) 20.686
bi 11.205
label 26.288
flow 36.631
style 22.409
arch 12.498000000000001
node 10.343
Lit 10.774
resolved 12.498000000000001
"Invalid 11.636000000000001
(MonadIO 18.962
using 14.652
gpd 17.669
Float 12.928
Float) 21.978
as) 12.067
bs 34.907
item 36.2
eval 36.631
installed 26.288
buildHaddocks 11.636000000000001
template 12.067
can 20.255
\ 34.045
ps 19.393
wanted 15.514000000000001
mcurator 14.221
sourceMap 16.807000000000002
w 19.393
bopts 22.84
dp 12.067
plan 13.359
snapshot 15.945
task 22.409
taskProvides 12.067
taskType 10.774
cp 14.221
unwords 12.928
wc 11.205
{} 10.774
menv 17.669
indent 10.774
\_ 10.343
7 11.636000000000001
"foo" 10.343
Env 20.255
Repl 12.067
exec 10.774
load 15.082999999999998
defs 12.928
fail 18.962
property 194.78900000000002
x", 19.393
\(QFilePath 26.719
x)", 12.498000000000001
True", 10.343
False", 17.238
W.</> 11.205
fromFirstFalse 11.205
FirstFalse 18.1
FirstTrue 11.636000000000001
getFirst 13.359
fromFirst 11.636000000000001
Check 11.205
TF.OneOf 11.205
Session 14.221
lift 18.531
getCompletions 10.774
supported 10.343
compls 24.133
'" 14.221
only 10.343
(WithJSONWarnings 10.774
TextEdit 24.564
boptsCLI 13.359
platformL 12.067
"stack 11.636000000000001
exePath 15.082999999999998
url 17.669
crdl 15.945
v1 12.928
opGrad 27.580999999999996
nodeDef 21.547
toT 15.082999999999998
graph 13.359
dx 13.79
[toT 12.928
[dz] 17.669
dz 22.84
Int32) 11.636000000000001
lookupAttr 11.205
"data_format" 10.774
padding 10.774
\case 10.774
testCommand 18.531
"./test/testdata" 15.945
First 26.288
optionalFirst 12.928
"Maybe 18.1
addCommand' 15.514000000000001
mkPackageName 20.686
pptype 10.774
Doc 15.514000000000001
ppr 43.095
Docker 11.636000000000001
command, 14.221
Int") 18.531
"Types.hs" 12.067
executable 13.79
!(First 27.15
..:? 59.040000000000006
lf 17.669
FP.</> 13.79
rfm 12.067
'[Word16, 10.343
HasCallStack 11.636000000000001
callback 23.702
dtTypeToHaskell 11.636000000000001
ee 10.774
announce 12.067
Codegen 12.928
Operand 14.221
BuildResult 19.393
buildResult 21.547
PureResult 18.962
pureResult 21.117
R 11.205
allVars 12.067
freeVars 12.067
makeRequest 12.928
tn 16.807000000000002
bco 12.067
..!= 16.807000000000002
obj 22.409
\foo 10.343
te 17.238
dotOpts 10.343
reactorSend 11.636000000000001
rin 11.636000000000001
passHandler 10.343
// C++
#pragmaonce 95.91499999999999
#include<string> 31.290000000000003
#include<vector> 26.595999999999997
:public 84.723
namespacedev 34.539
constoverride 36.465
override{ 45.852000000000004
{return 467.54300000000006
#include 11.794
#endif// 127.32600000000001
template<typename 386.43
returnfalse; 137.796
=0; 388.235
elseif 139.12
typedeftypename 31.771
return0; 31.771
friendclass 91.342
}// 258.262
namespacecapnp 15.404000000000002
=false; 86.047
=nullptr; 38.39
constoverride; 61.25599999999999
namespacefl 101.33099999999999
fl{ 50.666000000000004
namespacedetail 12.757
unsignedint 22.866
constchar* 78.82600000000001
staticvoid 51.62800000000001
==nullptr) 15.404000000000002
mustbe 22.866
for(size_t 29.364
(size_ti 21.782999999999998
i= 118.3
0;i 80.51100000000001
i< 95.073
=delete; 56.44200000000001
for(auto 84.362
return*this; 82.19600000000001
*this;} 25.874
#ifdefined(_MSC_VER) 10.59
=true; 79.308
constauto 20.098
autoresult 28.281
result= 110.47699999999999
#include"pch.h" 19.977
usingnamespace 150.432
returnresult; 64.265
return{ 22.144
Copyright(c)2016, 10.951
2016,Harry 10.951
HarryHe 10.951
Allrights 12.155
rightsreserved. 12.035
Distributedunder 10.951
underthe 13.96
theBSD 10.951
BSDlicense. 10.951
(Seeaccompanying 10.951
accompanyingfile 10.951
fileLICENSE.txt 10.951
LICENSE.txtat 10.951
doesnot 13.96
isnot 35.622
shouldbe 14.682
namespacekj 11.553
unsignedchar 10.951
namespace_ 17.691000000000003
{// 18.894
{\ 24.429999999999996
<typenameT> 131.297
{typedef 16.728
Type;}; 13.96
=typename 19.737
staticconstexpr 48.981
constexprbool 17.930999999999997
value= 39.955
inlineconstexpr 28.883000000000003
<typenameT, 37.547999999999995
template<> 48.379
<>struct 12.877
template<typename... 14.201
=default; 81.715
T,typename 47.898
typenameU> 20.459
staticbool 35.863
tobe 24.791
template<typenameT> 18.052
typenameU, 10.469999999999999
constexprsize_t 11.674
const{ 574.65
-1; 16.126
}\ 12.155
-1); 15.765
inlinebool 229.01800000000003
constT& 13.238
inlineexplicit 40.677
inlineconst 13.599
other)const 35.502
booloperator==(const 13.238
booloperator!=(const 11.794
size()const 12.035
const-> 12.877
inlinevoid 156.088
inlineoperator 18.293000000000003
other){ 13.238
}else 103.73800000000001
else{ 77.743
ptr= 10.59
returnnullptr; 12.877
template<size_t 11.794
inthe 38.992
constexprconst 11.794
0;} 16.247
i++){ 30.568
returntrue; 109.635
size){ 18.413
it= 19.375999999999998
ss<< 32.253
<<" 122.51199999999999
"" 11.674
"<< 197.48700000000002
"type":[ 12.877
"null"], 12.877
"description":"The 10.109
tothe 40.075
#include<stdexcept> 12.757
={ 36.585
throwstd::invalid_argument( 13.84
1,1, 39.834
++i){ 28.762999999999998
namespacestd; 16.848000000000003
namespacedev; 17.330000000000002
+1; 16.728
>0) 32.373
r= 13.96
<0) 11.433
staticstd::string 17.57
std::stringconst 17.811
virtualvoid 74.133
const= 45.852000000000004
classReader; 12.877
classBuilder; 12.636000000000001
classPipeline; 12.035
typename= 10.229
friendstruct 82.798
enumclass 22.625
Reader()= 12.395999999999999
totalSize()const 24.670999999999996
struct::capnp::ToDynamic_; 35.502
Builder()= 12.395999999999999
inlineBuilder(decltype(nullptr)) 12.155
Builder(decltype(nullptr)){} 12.155
returnasReader().totalSize(); 11.794
asReader().totalSize();} 11.794
ReaderasReader() 13.358
inlinePipeline(decltype(nullptr)): 11.914
template<typename, 72.929
n= 17.57
delete;// 11.794
staticinline 23.949
t){ 20.218
value){ 90.139
returntypename 17.089000000000002
+1); 14.682
cnote<< 17.450000000000003
returnret; 19.977
h= 11.553
s= 19.014999999999997
(autoconst& 40.316
_out<< 11.674
<<", 15.765
value) 10.711
=1; 39.955
for(int 72.68900000000001
Variable&input) 11.072
input){ 15.645000000000001
0){ 47.776999999999994
==0) 51.62800000000001
(inti 44.769
std::stringconst& 45.370000000000005
namespacedetails 25.754
=0, 23.106
#include<gtest/gtest.h> 11.914
namespace{ 12.516
conststd::string 28.161
for(auto& 29.124000000000002
out<< 12.516
<<"\n"; 16.367
intmain(int 12.636000000000001
main(intargc, 12.395999999999999
argc,char** 10.469999999999999
char**argv) 11.072
namespaceeth 14.08
u256const& 29.364
h256const& 18.293000000000003
namespacestd::string_view_literals; 10.35
constexprstd::string_view 29.724999999999998
namespacelib 16.848000000000003
ofthe 63.181000000000004
for(unsigned 18.773999999999997
(unsignedi 12.516
cwarn<< 12.997
LOG(m_logger)<< 18.052
autoconst 31.531000000000002
autoconst& 13.599
catch(...) 30.808000000000003
return{}; 31.531000000000002
in= 12.877
+1 12.395999999999999
==0); 14.562000000000001
namespaceapp 27.439
app{ 13.719000000000001
namespaceasr 20.218
asr{ 10.109
constVariable& 52.711
constauto& 22.625
T= 10.711
constaf::array& 28.402
staticconst 64.866
constutility::string_t 11.553
constbool 21.903
"+ 53.915
Error,<< 10.59
Info,<< 18.052
Json::Valueresult 12.275
std::stringprettyString() 12.516
prettyString()const 12.035
#include<algorithm> 13.479000000000001
=1, 14.682
template<class 60.293
charconst* 20.098
<classT> 15.886000000000001
v= 12.395999999999999
ret= 16.126
=0) 12.035
-1) 14.803
1)* 11.192
Variable&input, 12.035
constint 76.78099999999999
conststd::string& 49.221
/*= 20.82
for(const 42.963
(constauto& 28.883000000000003
b= 18.293000000000003
+1) 12.035
p= 20.338
1){ 14.201
virtualbool 47.657
virtualstd::string 12.757
0&& 22.986
=new 11.794
std::cout<< 15.886000000000001
template<typenameCharType> 11.072
inlinevirtual 12.155
Json::Value&request, 12.155
&request,Json::Value 11.914
Json::Value&response) 12.155
response= 15.765
numberof 17.811
willbe 17.57
out= 12.997
-1,-1, 12.757
0,0, 46.935
Copyright(c) 13.96
namespaceinternal 13.238
>0); 10.951
c= 28.040999999999997
if(ch 11.914
constT 13.719000000000001
t= 10.229
+" 20.338
j= 10.229
context)const 10.229
context.Reporter.Info()<< 10.229
<<std::endl; 48.498999999999995
constunsigned 18.171999999999997
=10; 12.155
!=0) 19.857
constnoexcept 16.006
namespaceweb 12.636000000000001
!=nullptr) 11.674
#pragma 11.072
value); 10.109
=false) 10.469999999999999
==0 10.711
std::cerr<< 10.59
constint* 11.072
consttypename 51.147
returnnew 13.84
constsize_t 12.997
canbe 20.82
isthe 11.553
forthe 19.255
|The 10.469999999999999
valueis 14.803
=2; 14.441
autoinput 12.275
input= 21.782999999999998
autooutput 10.469999999999999
output= 21.422
0,1, 12.035
a= 11.674
=3; 12.035
#include<memory> 16.367
:{ 11.072
isa 15.404000000000002
constuint32_t 10.229
x= 11.674
struct_capnpPrivate 11.914
_capnpPrivate{ 11.914
#if!CAPNP_LITE 55.961
constexpr::capnp::_::RawBrandedSchema 11.794
::capnp::_::RawBrandedSchemaconst* 11.794
const*brand() 12.035
brand(){ 12.155
return&schema->defaultBrand; 11.433
&schema->defaultBrand;} 11.433
explicitReader(::capnp::_::StructReader 11.674
Reader(::capnp::_::StructReaderbase): 11.674
base):_reader(base) 11.674
_reader(base){} 11.674
inline::capnp::MessageSize 23.347
::capnp::MessageSizetotalSize() 23.347
return_reader.totalSize().asPublic(); 11.914
inline::kj::StringTree 23.347
::kj::StringTreetoString() 23.347
toString()const 23.828
return::capnp::_::structString(_reader, 11.674
::capnp::_::structString(_reader,*_capnpPrivate::brand()); 11.674
::capnp::_::StructReader_reader; 11.674
<typename,::capnp::Kind> 70.04100000000001
struct::capnp::_::PointerHelpers; 23.347
struct::capnp::List; 11.674
class::capnp::MessageBuilder; 11.674
class::capnp::Orphanage; 23.347
Deletedto 11.674
todiscourage 11.674
discourageincorrect 11.674
incorrectusage. 11.674
explicitBuilder(::capnp::_::StructBuilder 11.674
Builder(::capnp::_::StructBuilderbase): 11.674
base):_builder(base) 11.674
_builder(base){} 11.674
operatorReader() 13.118
Reader()const 13.118
returnReader(_builder.asReader()); 12.155
Reader(_builder.asReader());} 12.155
inlineReader 12.997
asReader()const 13.118
returnasReader().toString(); 11.674
asReader().toString();} 11.674
inline::capnp::Orphan< 33.456
::capnp::_::StructBuilder_builder; 11.674
Pipeline(decltype(nullptr)):_typeless(nullptr) 11.674
_typeless(nullptr){} 11.674
explicitPipeline(::capnp::AnyPointer::Pipeline&& 11.674
Pipeline(::capnp::AnyPointer::Pipeline&&typeless) 11.674
:_typeless(kj::mv(typeless)) 11.674
_typeless(kj::mv(typeless)){} 11.674
::capnp::AnyPointer::Pipeline_typeless; 11.674
class::capnp::PipelineHook; 11.674
inline::uint32_t 22.625
inline::uint64_t 10.59
inlinetypename 31.049000000000003
inline::capnp::Void 32.253
inline::capnp::List< 27.439
::capnp::Orphan<::capnp::List< 13.719000000000001
inline::capnp::Text::Builder 12.997
::capnp::bounded<0>()* 152.959
*::capnp::ELEMENTS); 55.599999999999994
returnwhich() 43.083999999999996
which()== 43.083999999999996
if(which() 14.441
(which()!= 14.441
return!_reader.getPointerField( 18.654
*::capnp::POINTERS).isNull(); 37.306999999999995
return!_builder.getPointerField( 18.654
KJ_IREQUIRE((which()== 49.461999999999996
"Mustcheck 49.702999999999996
checkwhich() 49.461999999999996
which()before 49.461999999999996
beforeget()ing 49.461999999999996
get()inga 49.461999999999996
aunion 49.461999999999996
unionmember."); 49.461999999999996
return::capnp::_::PointerHelpers< 66.912
*::capnp::POINTERS)); 64.505
*::capnp::ELEMENTS, 66.912
*::capnp::POINTERS), 42.842999999999996
::capnp::POINTERS),value); 17.209
::capnp::POINTERS),kj::mv(value)); 16.969
return_reader.getDataField< 19.857
return_builder.getDataField< 19.857
::capnp::ELEMENTS,value); 24.31
::capnp::bounded<1>()* 40.195
::capnp::bounded<2>()* 16.608
::capnp::bounded<3>()* 13.118
::capnp::_::PointerHelpers<::capnp::List< 27.679000000000002
constfloat 17.450000000000003
index= 24.912
size= 10.469999999999999
m_SPP[0]= 14.923
1: 10.35
:0; 11.553
>0 14.08
clangdiagnostic 12.395999999999999
input,const 10.711
cerr<< 13.96
<<endl; 21.782999999999998
context<< 15.164
LOG(INFO)<< 13.84
res= 15.284
throwstd::runtime_error( 11.072
ifthe 10.951
};// 16.126
{} 22.505
toa 12.757
aJSON 20.338
#define 56.322
typedefT1 12.395999999999999
lhs,const 20.338
JSONvalue 24.189
tmp= 12.395999999999999
template<GTEST_TEMPLATE_ 25.273
<typenameT1, 55.599999999999994
T1,typename 55.961
constU& 12.395999999999999
constutility::string_t& 17.811
virtualconst 10.109
#if 14.441
#endif 16.969
!=std::string::npos); 10.711
==1); 21.662
&&INVALID,\ 15.886000000000001
template<typenameE> 10.831
template<typenameT, 23.588
T&result) 11.674
U,typename 10.109
-task: 10.469999999999999
result+= 16.367
if(c 16.848000000000003
(c== 13.96
voidoperator=(const 19.977
T1Head; 12.035
typenameT2, 52.711
T2,typename 51.989
typenameT3, 50.785999999999994
T3,typename 50.303999999999995
typenameT4, 48.85999999999999
T4,typename 48.62
T3,T4, 97.721
typenameT5, 46.935
T4,T5, 94.351
typenameT6, 45.25
T6,typename 45.25
T5,T6, 90.98100000000001
typenameT7, 43.565
T7,typename 43.565
T6,T7, 86.89
typenameT8, 41.879999999999995
T8,typename 41.879999999999995
T7,T8, 84.242
typenameT9, 40.195
T9,typename 40.195
T8,T9, 80.391
typenameT10, 38.510999999999996
T9,T10, 77.503
typenameT11, 37.547999999999995
T11,typename 37.547999999999995
T10,T11, 75.577
typenameT12, 36.585
T12,typename 36.585
T11,T12, 64.505
typenameT13, 35.622
T13,typename 35.622
T12,T13, 62.580000000000005
typenameT14, 34.660000000000004
T14,typename 34.660000000000004
T13,T14, 52.23
typenameT15, 33.697
T14,T15, 51.026999999999994
typenameT16, 32.734
T16,typename 32.734
typenameT17, 31.771
T17,typename 31.771
T16,T17, 64.024
typenameT18, 30.808000000000003
T18,typename 30.808000000000003
T17,T18, 62.098000000000006
typenameT19, 29.846
T19,typename 29.846
T18,T19, 60.172999999999995
typenameT20, 28.883000000000003
T19,T20, 58.247
typenameT21, 27.92
T21,typename 27.92
T20,T21, 56.322
typenameT22, 26.957
T22,typename 26.957
T21,T22, 54.396
typenameT23, 25.995
T23,typename 25.995
T22,T23, 52.471
typenameT24, 25.032
T24,typename 25.032
T23,T24, 50.544999999999995
typenameT25, 24.069
T24,T25, 48.62
typenameT26, 23.106
T26,typename 23.106
T25,T26, 40.918
typenameT27, 22.144
T27,typename 22.144
T26,T27, 38.992
typenameT28, 21.181
T28,typename 21.181
T27,T28, 37.547999999999995
typenameT29, 20.218
T29,typename 20.218
T28,T29, 30.568
typenameT30, 19.255
typenameT31, 18.293000000000003
T31,typename 18.293000000000003
T30,T31, 32.493
typenameT32, 17.330000000000002
T32,typename 17.330000000000002
T31,T32, 35.141000000000005
typenameT33, 16.367
T33,typename 16.367
T32,T33, 33.215
typenameT34, 15.404000000000002
T34,typename 15.404000000000002
T33,T34, 31.290000000000003
typenameT35, 14.441
T34,T35, 29.364
typenameT36, 13.479000000000001
T36,typename 13.479000000000001
T35,T36, 27.439
typenameT37, 12.516
T37,typename 12.516
T36,T37, 25.513
typenameT38, 11.553
T38,typename 11.553
T37,T38, 23.588
typenameT39, 10.59
T39,typename 10.59
T38,T39, 21.662
T39,T40, 17.330000000000002
T40,T41, 15.404000000000002
T41,T42, 13.96
T42,T43, 12.275
=internal::None, 11.794
T2,T3, 78.465
T15,T16, 49.582
T29,T30, 29.364
internal::None,internal::None, 212.29
internal::None>{ 12.035
structTypes<T1, 11.794
Types<T1,T2, 11.794
typedefTemplateSel<T1> 12.035
TemplateSel<T1>Head; 12.035
<GTEST_TEMPLATE_T1, 23.347
T1,GTEST_TEMPLATE_ 23.347
GTEST_TEMPLATE_T2, 22.866
T2,GTEST_TEMPLATE_ 22.866
GTEST_TEMPLATE_T3, 22.384
GTEST_TEMPLATE_T4, 21.903
T4,GTEST_TEMPLATE_ 21.903
GTEST_TEMPLATE_T5, 21.422
T5,GTEST_TEMPLATE_ 21.422
GTEST_TEMPLATE_T6, 20.939999999999998
GTEST_TEMPLATE_T7, 20.459
T7,GTEST_TEMPLATE_ 20.459
GTEST_TEMPLATE_T8, 19.977
T8,GTEST_TEMPLATE_ 19.977
GTEST_TEMPLATE_T9, 19.496
GTEST_TEMPLATE_T10, 19.014999999999997
T10,GTEST_TEMPLATE_ 19.014999999999997
GTEST_TEMPLATE_T11, 18.532999999999998
T11,GTEST_TEMPLATE_ 18.532999999999998
GTEST_TEMPLATE_T12, 18.052
GTEST_TEMPLATE_T13, 17.57
T13,GTEST_TEMPLATE_ 17.57
GTEST_TEMPLATE_T14, 17.089000000000002
T14,GTEST_TEMPLATE_ 17.089000000000002
GTEST_TEMPLATE_T15, 16.608
GTEST_TEMPLATE_T16, 16.126
T16,GTEST_TEMPLATE_ 16.126
GTEST_TEMPLATE_T17, 15.645000000000001
T17,GTEST_TEMPLATE_ 15.645000000000001
GTEST_TEMPLATE_T18, 15.164
GTEST_TEMPLATE_T19, 14.682
T19,GTEST_TEMPLATE_ 14.682
GTEST_TEMPLATE_T20, 14.201
T20,GTEST_TEMPLATE_ 14.201
GTEST_TEMPLATE_T21, 13.719000000000001
GTEST_TEMPLATE_T22, 13.238
T22,GTEST_TEMPLATE_ 13.238
GTEST_TEMPLATE_T23, 12.757
T23,GTEST_TEMPLATE_ 12.757
GTEST_TEMPLATE_T24, 12.275
GTEST_TEMPLATE_T25, 11.794
T25,GTEST_TEMPLATE_ 11.794
GTEST_TEMPLATE_T26, 11.312
T26,GTEST_TEMPLATE_ 11.312
GTEST_TEMPLATE_T27, 10.831
GTEST_TEMPLATE_T28, 10.35
T28,GTEST_TEMPLATE_ 10.35
=NoneT, 11.794
NoneT,NoneT, 255.37300000000002
NoneT>{ 12.035
structTemplates<T1, 11.794
Templates<T1,T2, 11.553
NoneT,NoneT> 10.831
::std::ostream*os) 11.553
os){ 14.201
operatorParamGenerator<T>() 12.035
ParamGenerator<T>()const 12.035
constT1 12.035
T1v1_; 12.035
v1,T2 22.866
:v1_(v1), 11.794
Tarray[] 11.794
array[]= 11.794
={static_cast<T>(v1_), 11.794
returnValuesIn(array); 11.794
constT2 11.794
T2v2_; 11.794
T2v2, 23.106
v2,T3 21.662
v1_(v1),v2_(v2), 10.109
{static_cast<T>(v1_),static_cast<T>(v2_), 11.553
constT3 11.553
T3v3_; 11.553
T3v3, 22.625
v3,T4 21.662
constT4 11.312
T4v4_; 11.312
T4v4, 22.144
v4,T5 20.698999999999998
static_cast<T>(v3_),static_cast<T>(v4_), 11.072
constT5 11.072
T5v5_; 11.072
T5v5, 21.662
v5,T6 20.939999999999998
static_cast<T>(v4_),static_cast<T>(v5_), 10.831
constT6 10.831
T6v6_; 10.831
T6v6, 21.181
v6,T7 20.459
constT7 10.59
T7v7_; 10.59
T7v7, 20.698999999999998
static_cast<T>(v6_),static_cast<T>(v7_), 10.35
constT8 10.35
T8v8_; 10.35
v7,T8 19.014999999999997
T8v8, 20.218
static_cast<T>(v7_),static_cast<T>(v8_), 10.109
constT9 10.109
T9v9_; 10.109
v8,T9 19.255
T9v9, 19.737
T10v10, 19.255
v10,T11 19.255
T11v11, 18.773999999999997
v11,T12 18.293000000000003
T12v12, 18.293000000000003
v12,T13 16.848000000000003
T13v13, 17.811
v13,T14 16.608
T14v14, 17.330000000000002
v14,T15 16.608
T15v15, 16.848000000000003
v15,T16 14.682
T16v16, 16.367
v16,T17 15.645000000000001
T17v17, 15.886000000000001
T18v18, 15.404000000000002
v18,T19 15.404000000000002
T19v19, 14.923
v19,T20 14.441
T20v20, 14.441
v20,T21 12.997
T21v21, 13.96
v21,T22 13.238
T22v22, 13.479000000000001
v22,T23 12.997
T23v23, 12.997
v23,T24 11.553
T24v24, 12.516
v24,T25 11.794
T25v25, 12.035
T26v26, 11.553
v26,T27 11.553
T27v27, 11.072
v27,T28 10.831
T28v28, 10.59
T29v29, 10.109
Values(T1v1, 11.794
v2,v3, 18.052
v3,v4, 14.682
v4,v5, 11.312
v5,v6, 10.35
namespaceCatch 38.269999999999996
Catch{ 23.467
}}, 36.465
Tier::VeryLow} 11.553
},{ 22.866
c== 10.831
cout<< 24.069
theJSON 15.645000000000001
virtualJson::Value 10.469999999999999
::capnp::bounded<5>()* 10.59
)) 10.59
)= 10.831
)const 12.155
){ 46.574000000000005
__VA_ARGS__) 16.367
...) 24.912
@sinceversion 17.57
version1.0.0 10.951
@sa@ref 18.293000000000003
{"Command" 10.831
"Command"}, 10.831
"balance":"0" 29.846
)E"+ 32.854
+R"E( 32.854
throw(jsonrpc::JsonRpcException) 11.674
Json::Valuep; 11.674
throwjsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, 11.674
jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE,result.toStyledString()); 11.674
"balance":"2000000000000000000000" 130.57500000000002
"balance":"20000000000000000000" 34.78
"balance":"10000000000000000000000" 24.670999999999996
"balance":"200000000000000000000" 44.287
"balance":"6000000000000000000000" 13.96
"balance":"4000000000000000000000" 37.788999999999994
"balance":"100000000000000000000" 20.098
"balance":"500000000000000000000" 20.579
"balance":"1970000000000000000000" 14.562000000000001
"balance":"20000000000000000000000" 17.930999999999997
"balance":"1000000000000000000000" 60.293
"balance":"400000000000000000000" 17.089000000000002
#pragma 100.156
once 72.897
#include 731.1909999999999
#ifdef 42.352999999999994
_WIN32 12.076
#endif 238.136
<string> 23.263
<vector> 19.799999999999997
class 431.07800000000003
: 532.921
public 97.137
public: 225.88299999999998
size_t 174.47400000000002
int 425.662
void 727.373
if 1174.611
as 31.608999999999998
when 15.006
the 347.704
only 16.426000000000002
bool 658.826
utility::string_t& 29.301000000000002
private: 170.389
typedef 214.607
namespace 577.05
dev 26.193
test 20.154999999999998
explicit 77.958
const& 497.05
{} 234.85099999999997
/* 63.48499999999999
*/) 12.697000000000001
const 1921.5179999999998
override 63.48499999999999
{ 3520.637
return 1894.703
} 776.6519999999999
#ifndef 36.049
#define 232.365
#if 160.09
# 159.734
include 11.632
template 494.20899999999995
<typename 284.396
switch 40.932
case 295.939
default: 32.586
false; 167.725
= 3479.7050000000004
std::size_t 16.249
0; 337.404
for 375.14
== 732.878
else 315.91700000000003
|| 171.632
< 223.664
continue; 14.473
>= 103.17499999999998
typename 1242.536
#else 49.989000000000004
break; 124.84
std::string 266.638
return; 59.579
friend 142.509
void* 25.749
using 228.01399999999998
> 150.855
enum 44.04
capnp 11.365
with 67.037
version 32.142
private 11.72
uint 37.202999999999996
kj::Promise<void> 10.211
override; 105.572
nullptr; 44.839
mutable 16.781000000000002
connection, 18.024
struct 322.754
inline 819.094
auto 584.775
\ 244.174
fl 75.206
constexpr 132.12
unsigned 134.962
| 160.977
char* 101.48799999999999
static 285.551
nullptr) 23.441
"The 14.384
must 26.991999999999997
be 105.217
before 44.218
first 17.758
use 24.684
on 36.315000000000005
" 359.069
(size_t 21.754
i 189.923
i++) 32.053000000000004
delete; 41.643
operator=(const 35.516
(auto 63.30799999999999
!= 273.031
*this; 64.018
nullptr); 17.492
defined(_MSC_VER) 12.253
&& 265.573
_MSC_VER 17.758
union 40.755
T> 141.088
T 68.10199999999999
true; 141.532
}); 73.607
result 107.969
throw 103.44099999999999
has 13.674
not 105.217
to 254.03
"pch.h" 14.828000000000001
<< 928.928
result; 71.476
}; 125.81599999999999
uint64_t 49.723
All 11.454
rights 10.655
under 12.875000000000002
file 38.979
at 26.016000000000002
#elif 11.72
code 20.777
does 12.253
it 44.573
or 63.397
is 166.216
5 10.832
but 12.342
If 14.917000000000002
should 22.109
try 44.129
this 49.456
of 179.80100000000002
and 104.95100000000001
#undef 20.688
1 66.504
char 62.953
delete 14.029
__VA_ARGS__ 14.295
defined 13.318999999999999
in 124.66199999999999
define 44.04
_ 13.052
"" 11.72
do 13.851
diagnostic 15.805
while 53.363
name, 19.356
<= 76.36
type 47.414
? 122.442
name 20.599
Type; 12.431000000000001
value 130.078
T, 72.72
<> 35.693999999999996
Type 11.809000000000001
<typename... 10.477
default; 61.087999999999994
{}; 44.839
U> 32.32
template<typename 119.42299999999999
t) 24.506
noexcept 39.068000000000005
T& 52.031
U, 28.857
true, 21.221
false, 23.707
a, 15.006
b) 12.875000000000002
-> 53.98500000000001
a 206.349
b 23.885
s; 10.299999999999999
* 460.024
- 272.05400000000003
1; 70.85499999999999
operator 52.653
0 66.41499999999999
1); 76.893
t, 13.674
t 16.16
long 24.416999999999998
const; 192.232
float 53.541000000000004
begin, 12.875000000000002
Iterator 15.094
value; 22.375
index) 12.164
+ 476.27299999999997
+= 117.20400000000001
-= 11.632
(const 45.283
other) 57.092000000000006
begin() 10.211
end() 11.276
size() 11.632
end) 11.01
value, 34.895
index 41.732
0); 66.85900000000001
count) 10.921000000000001
typename... 20.511
new 45.905
& 65.971
T* 11.276
other 17.669
ptr 13.94
ref 12.164
ptr, 13.495999999999999
array 25.305
we 10.655
may 11.632
can 29.567
end 31.343
other); 21.221
size) 19.889
size); 20.955
nullptr, 19.09
v) 11.72
auto& 53.717999999999996
x, 11.099
ss 24.595
std::stringstream 10.566
ss; 10.477
"description": 20.599
manifest 12.253
app 22.285999999999998
"type": 22.464
[ 26.904
"string", 13.674
], 10.566
1, 140.911
package 12.431000000000001
2, 54.606
"$ref": 11.72
3, 30.365999999999996
Copyright 14.828000000000001
This 23.885
source 20.422
any 14.739
no 21.043
will 26.814999999999998
from 45.194
following 12.608
The 54.429
you 15.805
that 35.160999999999994
an 55.494
bytes 68.63499999999999
std::invalid_argument( 10.211
than 13.407
4 10.122
++i) 37.292
std; 12.875000000000002
dev; 12.875000000000002
/ 116.671
path 13.584999999999999
0, 123.419
0) 110.012
string 71.92
r 16.426000000000002
R"E( 26.726000000000003
"0x00", 14.473
true 23.263
virtual 227.304
type, 14.828000000000001
value); 96.693
uint16_t 15.360999999999999
value) 85.061
Reads; 10.211
Reader() 18.824
totalSize() 18.38
which() 71.21000000000001
name) 12.519000000000002
::capnp::ToDynamic_; 26.193
Reader 10.655
asReader() 10.477
index, 11.809000000000001
context) 19.977999999999998
<typename, 53.806999999999995
n 25.572000000000003
type; 26.814999999999998
int64_t 47.947
double 72.098
check 43.152
kj::mv(value)); 12.608
list 11.898
10; 15.716
cnote 12.963
BlockHeader 14.207
false)); 11.365
ret; 26.548000000000002
RLP 15.271999999999998
i: 11.72
2) 18.646
h256 48.92400000000001
h 12.076
d 12.608
s 31.253999999999998
block 20.511
std::ostream& 15.537999999999998
", 22.642
Value& 23.618000000000002
) 213.275
false 17.137
); 113.918
std::wstring 12.963
std::vector<int> 20.422
(int 53.98500000000001
Variable 47.414
Variable& 66.771
input) 23.618000000000002
std::vector<Variable> 10.832
af::array 37.292
2 29.922
input, 38.979
std::ostringstream 15.006
"; 19.534000000000002
false); 45.194
bigint 12.786000000000001
"", 15.271999999999998
af::array& 36.403999999999996
details 19.977999999999998
-1, 17.846999999999998
c 49.456
data 19.534000000000002
(auto& 21.487000000000002
out 31.076999999999998
"\n"; 13.94
3); 11.276
std::vector<float> 23.885
3; 11.898
argc, 12.519000000000002
SQLite::rowid_t 10.389
std::filesystem::path& 10.744
std::vector<std::string> 23.973000000000003
std::string_view 62.242000000000004
protected: 20.777
eth 10.655
u256 67.303
RLPStream 10.477
lib 12.431000000000001
are 38.535000000000004
copy 10.299999999999999
(unsigned 32.053000000000004
i; 10.122
catch 50.611000000000004
LOG(m_logger) 14.029
uint32_t 21.043
have 13.407
(" 10.477
was 10.211
error 15.626999999999999
const* 39.245000000000005
bytesConstRef 18.912
(...) 22.997
key 23.53
expected 10.655
*/, 26.193
1)); 11.188
s, 12.164
}, 106.549
size 28.502
asr 14.917000000000002
std::vector<Variable>& 11.365
B, 14.295
N, 16.337
B 13.763
N 21.132
input 36.848
target 11.898
output 27.968999999999998
length 18.291
utility::string_t 35.160999999999994
^ 24.684
e) 12.076
String 19.623
result) 14.118
token 11.188
template<> 13.674
stream 14.917000000000002
Json::Value 69.345
Info, 13.851
default 12.253
<class 38.002
element 15.626999999999999
>> 25.572000000000003
""); 11.365
8, 11.01
v 16.249
ret 16.693
true); 51.41
(i 12.697000000000001
1) 48.746
std::string& 84.085
given 10.122
% 22.908
pos 12.963
p 27.436000000000003
p; 14.029
const&) 15.271999999999998
Address 18.291
4, 16.781000000000002
std::cout 11.809000000000001
response 12.963
JSON 60.733
example 15.182999999999998
values 15.716
used 17.758
A 10.389
number 26.281999999999996
supported 10.299999999999999
installer 11.01
one 12.076
by 36.227
client 12.608
4; 11.543
7, 10.832
(c) 13.495999999999999
GTEST_API_ 17.048000000000002
internal 12.963
ch 12.519000000000002
2; 21.754
Value 17.314
i) 11.01
x 22.997
' 19.179000000000002
start 11.276
j 16.693
(c 16.071
std::endl; 36.671
byte 19.889
3 11.632
pplx::task<void> 11.72
extern 15.805
( 32.940999999999995
os) 11.099
int32_t 15.182999999999998
int* 14.828000000000001
E> 26.814999999999998
itr 12.342
1), 11.809000000000001
buffer 12.342
count 11.365
context 13.851
current 15.982
which 14.118
all 18.646
empty 10.744
target, 11.454
AICLI_LOG(Repo, 13.140999999999998
5, 15.716
state 15.537999999999998
{}, 10.211
2); 22.285999999999998
<memory> 12.076
iterator 25.838
version, 10.033
!CAPNP_LITE 82.48599999999999
base): 17.581
::capnp::MessageSize 17.225
::kj::StringTree 17.225
toString() 18.735
::capnp::Kind> 51.676
::capnp::_::PointerHelpers; 17.225
::capnp::Orphanage; 17.225
::capnp::Orphan< 37.026
::uint32_t 25.039
::uint64_t 11.72
::capnp::Void 35.693999999999996
::capnp::List< 64.64
::capnp::Kind::STRUCT>::Reader 12.786000000000001
::capnp::Kind::STRUCT>::Builder 12.786000000000001
::capnp::bounded<0>() 112.853
::capnp::ELEMENTS); 41.021
(which() 10.655
!_reader.getPointerField( 13.763
::capnp::POINTERS).isNull(); 27.525
!_builder.getPointerField( 13.763
KJ_IREQUIRE((which() 36.493
"Must 37.026
get()ing 36.493
member."); 36.759
::capnp::_::PointerHelpers< 74.229
::capnp::POINTERS)); 47.592
::capnp::ELEMENTS, 49.368
::capnp::POINTERS), 31.608999999999998
_reader.getDataField< 14.65
::uint32_t>( 12.519000000000002
_builder.getDataField< 14.65
_builder.setDataField< 17.225
::capnp::bounded<1>() 29.656000000000002
::capnp::bounded<2>() 12.253
::capnp::Void>( 17.846999999999998
updateIOGas(); 18.557
m_SPP[0] 11.188
\param 15.894
'" 13.584999999999999
pointer 13.407
, 33.385
char> 10.832
k 10.299999999999999
cerr 10.389
endl; 16.071
idx 11.898
Argument{ 11.809000000000001
LOG(INFO) 10.655
af::span, 11.809000000000001
tmp 13.407
res 12.253
OR 10.033
_ASYNCRTIMP 23.618000000000002
__cdecl 14.295
*/ 18.024
object 29.301000000000002
endif 12.697000000000001
T1 20.688
T2 29.567
T3 27.703
T4 26.814999999999998
T5 26.104
T6 25.394000000000002
T7 24.684
T8 23.973000000000003
T9 23.263
NOLINT 10.299999999999999
rhs) 21.399
key) 11.72
key, 12.519000000000002
rhs); 11.276
lhs, 26.459999999999997
\c 13.140999999999998
reference 12.164
str 11.898
SizeType 12.963
Ch* 10.744
function 18.38
ValueType& 10.122
integer 11.01
... 23.707
<data 22.997
</data> 22.642
xml:space="preserve"> 22.285999999999998
<GTEST_TEMPLATE_ 18.646
Head; 17.936
T1, 59.845000000000006
U& 11.632
lhs 10.477
ON_OP(); 17.936
NEXT 12.697000000000001
DWORD 10.744
10, 11.898
), 15.271999999999998
&&INVALID, 11.898
__int64 12.875000000000002
SAFEINT_NOTHROW 19.179000000000002
SAFEINT_CPP_THROW 13.674
SafeInt<T, 14.029
v2, 34.184
-- 11.099
Tail; 17.758
T2, 116.405
T3, 128.746
T4, 124.307
T5, 120.045
T6, 115.961
T7, 111.87599999999999
T8, 107.792
T9, 103.707
T10, 99.623
T11, 97.137
T12, 94.651
T13, 92.16499999999999
T14, 89.679
T15, 87.192
T16, 84.70599999999999
T17, 82.22
T18, 79.734
T19, 77.248
T20, 74.762
T21, 72.276
T22, 69.789
T23, 67.303
T24, 64.817
T25, 62.330999999999996
T26, 59.845000000000006
T27, 57.359
T28, 54.873
T29, 52.386
T30, 49.9
T31, 47.414
T32, 44.928
T33, 42.442
T34, 39.955999999999996
T35, 37.47
T36, 34.984
T37, 32.497
T38, 30.011000000000003
T39, 27.525
T40, 25.039
T41, 22.552999999999997
T42, 20.067
T43, 17.581
T44, 15.094
T45, 12.608
T46, 10.122
internal::None, 226.061
T10 22.198
T11 21.665
T12 21.132
T13 20.599
T14 20.067
T15 19.534000000000002
T16 19.001
T17 18.468
T18 17.936
T19 17.403000000000002
T20 16.87
T21 16.337
T22 15.805
T23 15.271999999999998
T24 14.739
T25 14.207
T26 13.674
T27 13.140999999999998
T28 12.608
T29 12.076
T30 11.543
T31 11.01
T32 10.477
GTEST_TEMPLATE_ 435.252
NoneT, 226.061
::std::ostream* 11.01
os); 11.809000000000001
v1, 27.968999999999998
v3, 31.076999999999998
v4, 28.058
v5, 25.039
v6, 23.441
v7, 22.908
v8, 22.375
v9, 21.842000000000002
v10, 21.31
v11, 20.777
v12, 20.244
v13, 19.712
v14, 19.179000000000002
v15, 18.646
v16, 18.113
v17, 17.581
v18, 17.048000000000002
v19, 16.515
v20, 15.982
v21, 15.45
v22, 14.917000000000002
v23, 14.384
v24, 13.851
v25, 13.318999999999999
v26, 12.786000000000001
v27, 12.253
v28, 11.72
v29, 11.188
v30, 10.655
v31, 10.122
Catch 28.679
Subschema 12.076
cout 17.936
"0" 22.375
if( 23.796
"Moniker", 10.033
@brief 22.908
@since 13.052
@sa 14.917000000000002
@ref 33.918
@a 31.076999999999998
@liveexample{The 10.566
@param[in] 13.407
@throw 14.029
@complexity 10.122
"balance": 812.878
)E" 24.240000000000002
StatementBuilder& 15.894
// C#
publicclass 165.14100000000002
classC 11.027999999999999
staticvoid 139.125
publicstatic 338.622
voidMain 23.873
Main() 33.43
#regionCopyright 11.062
Copyright& 11.264000000000001
&License 11.264000000000001
LicenseInformation 11.264000000000001
usingSystem.Linq; 20.493000000000002
publicreadonly 40.71
readonlystring 21.41
publicoverride 345.077
overrideobject 27.907000000000004
{return 333.057
returnnew 143.698
{} 46.03
usingSystem; 191.04
usingSystem.Collections; 51.074
usingSystem.Globalization; 34.271
usingSystem.IO; 36.221000000000004
usingSystem.Text; 39.777
internalsealed 21.553
sealedclass 64.624
privatestatic 113.605
=new 1228.995
get{ 559.082
overridestring 49.199
set{ 169.26
=value; 204.372
overridevoid 168.075
key= 13.189000000000002
!=null) 399.47200000000004
null){ 235.053
staticstring 63.8
0&& 27.865000000000002
staticbool 72.929
returntrue; 125.113
internalstatic 154.382
value){ 37.759
buffer,int 14.600999999999999
intcount) 12.819
publicvoid 587.158
name,string 11.651
stringname, 10.456999999999999
=false; 189.182
else{ 155.483
for(int 132.544
(inti 99.887
i= 129.022
=0; 257.833
0;i 92.66600000000001
i< 109.285
i++){ 44.114000000000004
=null; 284.757
publicstring 103.199
publicbool 115.27799999999999
=name; 10.087
usingSystem.Collections.Generic; 66.768
usingSystem.Diagnostics; 30.9
=-1; 24.31
internalint 23.023999999999997
value;} 84.0
=true; 209.129
if(value 43.82
(value== 20.351
>0) 65.894
internalclass 44.82
privateset; 19.275
==null) 422.798
!=null 126.92
null? 31.48
:null; 13.306000000000001
returnnull; 101.164
:this 13.592
thrownew 451.24299999999994
newArgumentException 18.215
}else 75.92999999999999
ret= 14.055
"+ 83.848
usingSystem.Reflection; 33.195
privatevoid 99.038
!=0) 55.042
==null 83.411
null|| 50.511
elseif 148.372
p= 22.939999999999998
t= 26.714000000000002
value= 35.759
(value!= 11.171
return1; 29.974999999999998
returnfalse; 167.092
usingSystem.Runtime.InteropServices; 22.746
usingSystem.Runtime.Serialization; 16.778
publicsealed 40.498999999999995
:base 28.773
usingSystem.Xml; 25.738999999999997
internalabstract 14.491999999999999
abstractclass 23.948
==0) 84.378
0){ 79.452
overrideint 32.48
return0; 42.357
{get 55.117000000000004
!=0 12.079
}} 57.109
publicabstract 50.233000000000004
publicint 82.529
{get; 76.35
get;set; 35.565
set;} 49.257999999999996
staticclass 23.705
#endregion// 17.173000000000002
usingSystem.Collections.ObjectModel; 15.61
protectedvirtual 47.644
virtualbool 25.646
try{ 140.37800000000001
privateint 30.916999999999998
null)? 20.813
if(index 13.08
usingSystem.Data; 13.062999999999999
usingNUnit.Framework; 33.202999999999996
exp= 38.045
catch(Exceptionex) 14.803
inthe 16.156
catch(Exception 54.251
(Exceptionex) 16.257
if( 55.705999999999996
null)&& 14.046
get;private 14.870000000000001
usingSystem.Runtime.CompilerServices; 11.533
usingSystem.Runtime; 13.315000000000001
usingSystem.Security; 14.726999999999999
staticint 66.583
publicenum 21.427
=0, 20.956
=1, 15.626
=2, 10.684
usingSystem.ComponentModel; 33.052
=string.Empty; 10.894
newDictionary<string, 10.306000000000001
internalstring 21.242
internalbool 40.222
internalvoid 71.71000000000001
inti 13.213999999999999
){ 67.46499999999999
null) 11.684
yieldreturn 17.055
publicconst 121.465
constint 87.186
conststring 154.315
overridebool 84.765
null&& 109.217
protectedoverride 125.827
null,null, 19.779
usingSystem.Web; 16.206
usingSystem.Web.UI; 14.290000000000001
protectedvoid 21.284
+=new 28.563
usingSystem.ServiceModel.Channels; 13.709999999999999
usingSystem.Collections.Specialized; 12.331000000000001
usingSystem.Security.Permissions; 27.638
publicinterface 18.585
get;} 27.924
publicvirtual 107.18299999999999
null;} 23.478
protectedabstract 10.398
privatestring 39.692
result= 72.24799999999999
j= 12.247000000000002
staticreadonly 71.828
index= 15.98
<0) 29.774
newNotSupportedException 11.306000000000001
=true)] 32.178000000000004
[ExpectedException(typeof 65.398
overrideType 11.003
intMain 13.5
=typeof 16.988
a= 29.168
return2; 13.549999999999999
publicdelegate 10.213
delegatevoid 11.945
(objectsender, 14.139
stringv 11.129
v= 19.392
=""; 13.684999999999999
==0 21.006
privatebool 52.545
>0 15.803
=1; 33.825
if(i 12.760000000000002
<0 14.45
==1) 11.113
usingSystem.Threading; 20.913999999999998
!=null, 40.13
protectedinternal 24.352
o= 23.444000000000003
id= 10.104
internalconst 84.882
tobe 16.484
readonlyint 14.004
={ 27.168
[MethodImpl(MethodImplOptions.InternalCall, 11.373
(MethodImplOptions.InternalCall,MethodCodeType 12.02
MethodCodeType= 12.861
=MethodCodeType.Runtime)] 12.819
objecto 12.247000000000002
virtualvoid 62.775000000000006
AsyncCallbackcallback, 21.342
callback,object 23.15
objectstate) 21.25
!=null); 31.774
privatereadonly 29.453999999999997
mustbe 17.282
privateconst 38.330999999999996
intcount 10.121
count= 13.92
if(null 37.019
(null!= 23.015
publicobject 27.151
outint 16.064
buffer= 10.053
intoffset, 13.945
offset,int 13.626
b= 26.075000000000003
==-1) 11.76
ofthe 19.72
[Test]public 13.786000000000001
=ex;} 15.038
=null;} 13.433
usingSystem.ServiceModel; 14.912
MessageId= 25.478
Justification= 83.184
!=null; 10.222
throwDiagnosticUtility.ExceptionUtility.ThrowHelperError(new 34.489
message= 12.163
type= 22.687
if(type 15.046
(type== 12.634000000000002
returnresult; 25.898000000000003
#ifDEBUG 11.121
doesnot 14.248000000000001
name= 18.527
()){ 16.097
}catch 80.28399999999999
ex){ 31.892
foreach(string 13.912
d= 14.870000000000001
x= 14.567
res= 17.299
foreach(var 35.716
=() 13.08
()=> 22.822
newNotImplementedException 57.504
NotImplementedException(); 55.696999999999996
{throw 51.208000000000006
();} 26.705000000000002
(typeof(ArgumentNullException))] 12.096
notbe 13.811
Unrestricted= 14.904
usingSystem.Configuration; 14.129999999999999
=true, 11.306000000000001
DefaultValue= 15.559
(){ 70.668
timeout,AsyncCallback 10.423
virtualstring 15.164
stringName 13.129999999999999
staticpublic 13.945
callback,state); 12.549999999999999
#pragmawarning 24.184
(Exceptione) 28.898999999999997
{new 11.239
newPoint 11.254999999999999
data= 15.383000000000001
(()=> 19.09
Assert.AreEqual(0, 61.817
path= 10.196000000000002
r= 17.887999999999998
abstractvoid 14.828000000000001
internalvirtual 17.913
reader= 12.231000000000002
0|| 21.628
-1; 13.971
0x00,0x00, 136.654
newbyte 22.990000000000002
newArgumentNullException 25.562
newException 10.027999999999999
publicnew 12.373000000000001
list= 13.122
sb= 11.482
s= 32.59
e){ 44.660000000000004
=>throw 16.19
byte[] 21.561
staticextern 41.222
tothe 11.424000000000001
c= 31.118
=2; 15.584
e= 22.183
n= 14.222999999999999
isnot 29.387
Assert.AreEqual(1, 40.498999999999995
[Browsable(false)] 10.818
=String.Empty; 12.826999999999998
newArrayList 10.247
publicevent 21.116
newEventHandler 10.616999999999999
sender,EventArgs 12.180000000000001
EventArgse) 13.332
newPlatformNotSupportedException 20.384
{// 19.157
(null== 17.753
shouldnot 10.524000000000001
finally{ 35.254
=>{ 22.881
0x01,0x00, 11.751000000000001
staticinternal 19.064
partialclass 21.065
internaloverride 76.468
value);} 17.232
false,false, 22.855999999999998
true,false, 16.375
false,true, 12.138
true,true, 16.694
staticobject 15.467
0,0, 37.086999999999996
string[] 17.72
}// 12.02
strings 10.566
add{ 17.703
remove{ 17.232
Target= 70.937
+1; 12.046
object[] 13.449
catch{ 15.164
+" 26.973999999999997
newInvalidOperationException 14.113
+1, 10.852
new[]{ 33.993
Assert.Fail("#1"); 14.265
Assert.AreEqual(typeof 46.593999999999994
ex.GetType(), 23.141000000000002
(),"#2"); 14.609
Assert.IsNull(ex.InnerException, 20.435000000000002
(ex.InnerException,"#3"); 10.331
Assert.IsNotNull(ex.Message, 21.317
Assert.AreEqual(string.Empty, 16.005
!=-1, 11.163
}finally 18.451
[System.Security.SecuritySafeCritical]// 15.197999999999999
[System.Security.SecurityCritical]// 30.496000000000002
#endif// 14.794
code= 10.658999999999999
cannotbe 14.004
constuint 12.709999999999999
ch= 88.32900000000001
cmd= 10.491
newobject 20.023
node= 10.121
externint 15.072
Name= 15.5
Assert.AreEqual(-1, 32.489
Assert.AreEqual(false, 20.62
newNotImplementedException(); 12.449
newstring 11.39
[]{ 45.846
eventEventHandler 12.02
Assert.AreEqual(2, 18.316
Assert.AreEqual(true, 20.442999999999998
[Test]// 13.726999999999999
Assert.AreEqual(3, 11.323
externstatic 14.702000000000002
Assert.AreEqual(String.Empty, 13.549999999999999
Assert.AreEqual(new 18.207
="The 13.567
status= 10.07
},new 15.475
(typeof(ArgumentException))] 11.407
new[] 14.399000000000001
-1,-1, 21.973000000000003
newuint 27.192999999999998
uint[] 26.697
newPlatformNotSupportedException(); 17.493000000000002
PlatformNotSupportedException();} 10.667
Scope= 70.76899999999999
Assert.AreEqual(string.Format 11.718
}}, 11.936
thrownull; 15.366
Systemviolations 38.65
violationsfrom 38.65
from3.5 38.65
total+= 10.793000000000001
partialvoid 11.197
*/return 14.324
2930 56.613
3029 56.218
3030 21.980999999999998
2929 14.542
mapto 34.641
=@"phuff: 15.03
[module:SuppressMessage("Microsoft.Design", 17.644000000000002
[module:SuppressMessage("Microsoft.Performance", 10.095
[module:SuppressMessage("Microsoft.Security", 31.328999999999997
="member", 51.183
"member",Target 51.158
[module:SuppressMessage("Microsoft.Naming", 38.221000000000004
SuppressMessage("Microsoft.Naming","CA1704:IdentifiersShouldBeSpelledCorrectly", 25.192
=@"NO_JUSTIFICATION_PROVIDED")] 11.634
="Member", 14.391
returnSR.GetString 11.936
"CA1704:IdentifiersShouldBeSpelledCorrectly",Scope="member", 17.627
},// 34.817
"Member",Target 14.239999999999998
dt.CustomFormat= 12.264000000000001
},new[] 25.201
mrp.CanCastToCalled= 10.087
newTestResult(0, 11.213
[module:SuppressMessage("Microsoft.Naming","CA1704:IdentifiersShouldBeSpelledCorrectly", 12.441
=global::MonoTests.Helpers.RepeatInfoUser.DoTest 10.768
[module:SuppressMessage("Microsoft.Naming","CA1709:IdentifiersShouldBeCasedCorrectly", 23.73
[module:SuppressMessage("Microsoft.Naming","CA1707:IdentifiersShouldNotContainUnderscores", 19.157
SuppressMessage("Microsoft.Naming","CA1707:IdentifiersShouldNotContainUnderscores",Scope="member", 19.157
SuppressMessage("Microsoft.Naming","CA1709:IdentifiersShouldBeCasedCorrectly",MessageId="IDS", 10.331
MessageId="IDS",Scope="member", 10.331
Justification="BASELINE:Baseline 38.642
BaselineSystem 38.642
3.5SP1")] 38.642
topacked 34.43
packedkey 34.43
(-1,mtp.FindAssignedEditPositionInRange 22.191
public 2172.9869999999996
class 352.533
C 13.018
static 641.124
void 1027.356
Foo 13.036999999999999
(int 137.746
Main 28.627999999999997
() 494.18300000000005
(i 19.051
: 449.63399999999996
#region 96.544
& 79.894
#endregion 98.496
using 989.633
System.Linq; 15.470999999999998
namespace 196.915
while 59.658
readonly 140.388
string 784.105
= 5808.001
to 134.51999999999998
the 131.864
override 431.51500000000004
object 221.981
{ 3264.4310000000005
return 1851.6870000000001
new 1735.1470000000002
this); 15.464
} 687.156
=> 119.43599999999999
== 974.087
var 245.741
if 2075.239
&& 347.18399999999997
!= 795.7540000000001
System; 146.39
System.Collections; 38.578
System.Globalization; 25.871
System.IO; 27.316
System.Text; 30.003
internal 640.763
sealed 58.46
private 514.134
Hashtable 16.554
+ 529.028
1); 28.558
true, 64.322
true); 56.844
writer) 10.369
get 535.429
set 182.845
value; 179.429
key 45.67
null) 631.884
>= 57.611000000000004
0 93.818
< 207.493
String.Empty; 18.158
bool 574.5649999999999
true; 253.74
name, 42.248
key, 11.744
false, 77.847
false); 55.208000000000006
value) 68.638
buffer, 19.964000000000002
int 735.887
index, 20.357
count) 13.138
count); 10.21
object[] 29.395000000000003
value); 46.678000000000004
false; 271.061
false) 10.628
else 397.35400000000004
for 180.164
i 211.98
0; 246.901
count; 10.540000000000001
i++) 66.534
"); 18.43
char[] 10.768
null; 323.056
4; 14.862
- 162.62099999999998
foreach 124.328
in 190.729
break; 235.696
struct 23.653
name; 16.345
System.Collections.Generic; 51.051
System.Diagnostics; 23.361
StringWriter 12.245
-1; 27.137999999999998
(value 37.444
> 141.326
0) 192.979
get; 82.22
set; 56.419
null 187.51600000000002
? 117.23599999999999
(string 84.62899999999999
this 55.918000000000006
null, 137.479
throw 499.93800000000005
ArgumentException 15.850999999999999
ret 12.706999999999999
(); 619.8480000000001
+= 102.945
" 132.022
System.Reflection; 25.104
0); 47.35
pos 10.508000000000001
% 10.66
|| 212.31599999999997
o 26.435
is 185.761
(object 40.264
element 11.592
| 132.637
f 10.635
as 126.87
p 23.526
Type 98.014
t 26.422
value 61.065000000000005
null); 89.173
", 18.639
A 13.227
operator 18.684
1; 75.787
switch 44.358
(new 115.684
()) 20.724999999999998
default: 30.225
System.Runtime.InteropServices; 17.15
System.Runtime.Serialization; 12.65
[Serializable] 16.548
(false)] 16.313
base 36.766
message) 10.514
message, 20.319000000000003
Exception 52.813
System.Xml; 19.406
abstract 62.74400000000001
protected 237.89499999999998
name) 19.489
) 103.42000000000002
double 20.997
this; 13.385
map 29.876
name 31.119
1 47.831
()); 50.980999999999995
System.Collections.ObjectModel; 11.814
{} 19.032
context) 27.119
virtual 134.82399999999998
result) 21.916
result); 11.376
out 200.71099999999998
try 172.743
case 439.72200000000004
catch 134.399
MethodInfo 21.186999999999998
2; 33.02
(index 12.15
enum 32.418
NUnit.Framework; 25.041
[TestFixture] 26.104999999999997
exp 29.040000000000003
catch(Exception 16.732
ex) 47.191
finally 53.377
[Test] 292.128
result 61.673
should 29.293
be 82.772
a 96.018
on 22.822
of 65.482
{0}", 11.731
byte 56.318000000000005
(Exception 42.038999999999994
an 22.284
exception 13.967999999999998
( 112.85100000000001
System.Runtime; 10.039000000000001
System.Security; 11.110000000000001
[ResourceExposure(ResourceScope.None)] 13.486999999999998
short 12.764
uint 73.607
long 48.826
0, 167.844
unsafe 26.929
code 17.797
IntPtr 74.767
float 22.270999999999997
method 18.83
T 33.083
where 20.927
1, 67.56099999999999
2, 37.463
4, 21.079
8, 10.749
System.ComponentModel; 24.977
EventArgs 16.06
interface 30.808000000000003
(bool 10.026
[] 111.704
#if 103.03999999999999
#endif 101.86699999999999
string.Empty; 12.232000000000001
Dictionary<string, 17.372
type 46.748
ref 77.59400000000001
return; 91.55600000000001
e 24.705000000000002
yield 15.483
a, 13.081
const 210.71900000000002
state) 26.586999999999996
e) 88.767
^ 10.92
are 25.307
source, 15.850999999999999
args) 15.090000000000002
System.Web; 12.226
System.Web.UI; 10.793000000000001
Form 12.72
sender, 25.839
string[] 30.573
int[] 14.627999999999998
System 32.144999999999996
error 16.332
The 11.953
no 13.176
System.ServiceModel.Channels; 10.337
Message 19.299
System.Security.Permissions; 20.883
CultureInfo 11.624
Stream 11.896
j 19.419
(this); 11.584999999999999
index 28.514000000000003
(0, 72.568
type) 17.239
typeof 68.911
from 59.379
(Type 10.907
[Category 19.356
true)] 27.506
[ExpectedException 49.872
(typeof 132.618
/ 35.308
* 70.939
3; 14.976
Console.WriteLine 32.088
delegate 19.945
e); 20.889
); 85.66799999999999
array, 10.469999999999999
index) 16.396
s 34.635999999999996
value, 31.537
v 19.413
""; 12.695
partial 26.206999999999997
#else 25.128999999999998
-1) 18.304000000000002
goto 12.536000000000001
2 25.369999999999997
i; 15.154
1) 36.22
continue; 38.927
System.Threading; 15.787
Uri 25.895999999999997
null"); 13.270999999999999
list 14.666
item 14.184000000000001
event 29.788
and 46.455999999999996
or 23.31
}; 46.393
}); 41.608
id 10.438
[In] 11.465
byte[] 82.429
(), 117.458
char 22.848000000000003
by 19.044999999999998
with 26.435
at 16.092
6, 12.048
3, 24.939
(var 38.089999999999996
length 14.088999999999999
offset, 26.885
obj) 10.616
[MonoTODO] 24.09
IAsyncResult 23.45
AsyncCallback 21.396
callback, 33.413
state 15.008
Task 11.001999999999999
must 25.548
Object 25.598
count 22.341
<= 43.078
(null 31.467000000000002
X 13.69
buffer 12.479000000000001
offset 13.397999999999998
-= 24.515
b 27.999999999999996
<< 60.013000000000005
bytes 11.021
data) 10.914
DataTable 19.317999999999998
ex;} 11.345
null;} 10.786999999999999
obj 12.485
System.ServiceModel; 11.243
Type[] 16.7
MessageId 19.349
Justification 62.738
lock 30.371
DiagnosticUtility.ExceptionUtility.ThrowHelperError(new 26.08
message 13.081
(type 12.98
++i) 16.199
result; 27.081000000000003
has 17.803
true 11.459
{0} 11.642999999999999
does 11.985
not 86.118
types 11.027999999999999
?? 13.664
we 16.719
add 20.698999999999998
false 13.302999999999999
null)) 10.552000000000001
type; 11.001999999999999
property 10.863
type, 26.004
(this, 14.995000000000001
2) 11.655
throw; 24.755000000000003
Properties 18.487000000000002
(IntPtr 18.126
Test 17.250999999999998
d 17.220000000000002
x 19.463
res 16.44
n 16.066
NotImplementedException 43.433
(null, 32.969
Assert.IsTrue 106.703
2); 13.460999999999999
Assert.AreEqual 640.9340000000001
Unrestricted 11.636000000000001
System.Configuration; 10.66
DefaultValue 12.251
Name 25.053
ConfigurationPropertyCollection 12.745000000000001
ConfigurationProperty 14.399000000000001
Methods 14.799
TimeSpan 27.601
timeout, 18.266
state); 16.573
(true)] 10.343
#pragma 18.335
warning 19.375
e; 10.171999999999999
Point 18.657999999999998
(3, 13.835
(2, 20.762999999999998
data 22.309
Assert.IsNull 71.947
(() 14.406
Assert.IsNotNull 75.59100000000001
path 11.433
(1, 43.984
r 16.643
context, 18.627
Guid 18.151
reader 11.858
Rectangle 27.582000000000004
0x00, 186.572
0xE0, 15.642
(ref 15.355999999999998
|= 22.125
Value 13.563
ArgumentNullException 19.685
(String.Empty, 11.927999999999999
StringBuilder 23.209
sb.Append 11.527999999999999
when 11.864
this, 14.951
5, 16.998
7, 11.706
10, 11.516
String 63.429
x, 15.344
extern 48.269
[assembly: 17.777
Color 14.045
c 36.582
5; 11.37
(byte) 24.42
-1, 43.743
>> 23.754
(-1, 27.310000000000002
; 11.82
"#A1"); 11.345
"#A2"); 11.991
Assert.AreSame 14.456000000000001
Size 20.439
ArrayList 27.727999999999998
Public 11.484
, 52.585
EventHandler 22.588
PlatformNotSupportedException 15.414000000000001
Target 56.603
size 11.668
DateTime 28.222
(int) 17.562
have 19.07
been 13.17
use 13.511999999999999
/* 32.456
"#1"); 31.651
"#2"); 35.358999999999995
"#3"); 28.368000000000002
"#4"); 21.884
Assert.IsFalse 64.937
"#5"); 16.079
0x03, 13.677000000000001
0x04, 13.341000000000001
0xFF, 28.799
0x0E, 14.488000000000001
0x1F, 16.186999999999998
0x01, 49.852999999999994
0x69, 11.193
0x20, 12.124
0x72, 11.199
0x74, 12.638
0x65, 16.567
0x06, 18.335
0x02, 15.756
0xF0, 12.561000000000002
0x30, 22.987
0xFE, 25.205
0x0F, 12.992
(null); 10.521
}, 129.887
(string) 10.666
item) 10.754999999999999
(false, 19.463
(true, 19.451
i); 10.35
source 10.077
used 10.166
was 13.17
only 14.520000000000001
*/ 27.328999999999997
row 14.342
await 14.171
remove 16.409000000000002
that 16.13
Contract.EndContractBlock(); 14.032000000000002
expected 10.267000000000001
InvalidOperationException 12.858999999999998
"The 16.174
it 15.559
new[] 26.200000000000003
(" 15.116000000000001
Assert.Fail 45.163000000000004
("#1"); 10.768
ex.GetType 18.126
(ex.InnerException, 17.461000000000002
(ex.Message, 16.174
(string.Empty, 13.683
"#6"); 10.565000000000001
[System.Security.SecuritySafeCritical] 14.425
auto-generated 29.775
[System.Security.SecurityCritical] 30.656
[0]; 10.236
cannot 14.216000000000001
MemoryStream 12.536000000000001
(object) 11.459
ch 78.798
Node 16.618000000000002
29 59.480000000000004
"A1"); 10.464
DataSet 11.174
DataColumn 10.717
localName, 10.109
node 15.452
Control 14.368
Expression 23.405
XmlDictionaryString 14.552
/> 10.666
[0], 11.852
[DllImport 18.145
z 25.218
Scope="member", 89.078
[SecurityCritical] 12.289000000000001
flags), 12.295
true), 13.981
0xF1, 12.035
0xE1, 15.369
0x1E, 16.364
(string.Format 11.624
false), 14.216000000000001
30 67.263
PlatformNotSupportedException(); 13.189000000000002
eh 10.501999999999999
"CA1704:IdentifiersShouldBeSpelledCorrectly", 21.599
SuppressMessage("Microsoft.Naming", 29.451999999999998
Scope 54.029999999999994
violations 29.268
3.5 29.173
SuppressMessage("Microsoft.Design", 13.549999999999999
SuppressMessage("Microsoft.Security", 25.066
[module: 135.508
@"phuff: 11.332
"member", 38.597
"Member", 10.901
_nfi), 10.064
packed 26.004
Baseline 30.477999999999998
SuppressMessage("Microsoft.Naming","CA1709:IdentifiersShouldBeCasedCorrectly", 17.892
SuppressMessage("Microsoft.Naming","CA1707:IdentifiersShouldNotContainUnderscores", 14.443999999999999
Justification="BASELINE: 29.135
SP1")] 29.135
mtp.FindAssignedEditPositionInRange 17.835
// Swift
publicfinal 17.903
finalclass 106.933
publicstruct 39.676
fileprivatelet 114.674
privatevar 137.416
_lock= 19.838
publicvar 178.06
Bool{ 180.47899999999998
self._lock.lock();defer 19.838
defer{ 50.805
{self._lock.unlock() 19.838
self._lock.unlock()} 19.838
==nil 52.741
init(){ 17.903
_= 65.321
tothe 44.031
ifthe 11.129
-parameter 232.25199999999998
-returns: 197.898
thatcan 23.225
canbe 46.45
beused 29.032
usedto 54.192
Incase 21.29
willbe 28.064000000000004
publicfunc 386.119
Disposable)-> 13.064000000000002
key= 15.966999999999999
nil{ 50.321000000000005
privatefunc 138.86700000000002
Int{ 63.385000000000005
??0 11.613
funcdispose() 17.419
dispose(){ 16.451
iflet 346.443
=nil 96.28800000000001
publicstatic 160.641
staticfunc 220.63899999999998
fileprivatefinal 14.516
ObserverType>: 12.58
Sink<O>,ObserverType 14.999999999999998
ObserverType{ 18.87
=O.E 33.386
typealiasE 30.483
E= 30.483
funcon(_ 40.644
on(_event: 40.644
event:Event<E>) 33.386
Event<E>){ 29.999
switchevent 42.096000000000004
event{ 42.096000000000004
case.next: 17.419
!=nil 46.934
case.error: 12.58
case.completed: 34.838
Producer<Element>{ 17.419
let_source: 24.193
_source:Observable<Element> 15.483
self._source= 24.677
=source 27.096
overridefunc 212.41400000000002
funcrun<O 18.387
run<O: 18.387
:ObserverType>(_ 21.29
ObserverType>(_observer: 59.515
observer:O, 74.51400000000001
O,cancel: 78.385
cancel:Cancelable) 81.288
Cancelable)-> 41.612
->(sink: 41.612
(sink:Disposable, 41.612
Disposable,subscription: 42.096000000000004
subscription:Disposable) 43.063
Disposable)where 41.612
whereO.E 73.063
O.E== 73.063
==Element 23.709
Element{ 26.128000000000004
letsink 41.612
sink= 41.612
observer,cancel: 78.385
cancel:cancel) 79.353
letsubscription 49.837
subscription= 49.837
=self._source.subscribe(sink) 10.645
return(sink: 41.612
(sink:sink, 41.128
sink,subscription: 41.128
subscription:subscription) 40.644
importFoundation 82.256
publictypealias 58.547000000000004
extensionObservableType 56.611
ObservableType{ 49.837
thesource 47.902
-seealso: 115.15799999999999
operatoron 115.15799999999999
returns:An 112.255
Anobservable 112.255
observablesequence 273.86400000000003
sequencethat 69.676
asingle 21.774
->Observable<E> 50.321000000000005
Observable<E>{ 45.967
functionto 21.774
@escaping(E) 11.613
throws-> 150.964
->Bool) 14.999999999999998
typealiasParent 34.354
Parent= 34.354
privatelet 126.771
let_parent: 34.354
_parent:Parent 31.451
Bool= 62.902
=false 218.70399999999998
init(parent:Parent, 29.515
Parent,observer: 25.644
Cancelable){ 39.676
self._parent= 35.806
=parent 37.257000000000005
super.init(observer:observer, 30.967000000000002
case.next(let 20.806
do{ 97.739
=try 107.9
catchlet 20.322
leterror 30.483
error{ 14.032000000000002
=true 199.834
}else 392.409
else{ 721.9169999999999
->Bool 94.352
init(source:Observable<Element>, 13.064000000000002
=nil) 51.289
nil){ 21.774
self,observer: 27.58
observer:observer, 41.128
print("Helloworld") 579.6619999999999
importAlamofire 16.935
importXCTest 24.677
BaseTestCase{ 37.257000000000005
leturl 55.644
url= 56.12800000000001
letexpectation 77.901
expectation= 77.901
=self.expectation(description: 77.901
varresponse: 87.578
response:DataResponse<Data?, 23.709
DataResponse<Data?,AFError>? 22.741
parameters:["foo": 10.161
.response{ 44.515
{resp 79.353
respin 79.353
response= 118.06099999999999
=resp 41.128
waitForExpectations(timeout:timeout) 150.48
shouldbe 83.224
=[] 74.998
Double= 12.096
itemin 11.613
shouldnot 62.418
notbe 59.998
benil") 58.062999999999995
letparameters 44.999
parameters= 44.999
self.expectation(description:"request 30.483
"requestshould 67.256
shouldsucceed") 15.966999999999999
DataResponse<Any,AFError>? 15.966999999999999
as?[String: 19.838
[String:String] 16.451
String= 29.032
={ 171.286
=url(forResource: 12.096
letdata 48.87
data= 59.031000000000006
XCTAssertEqual(response?.result.isSuccess,true) 18.387
queue= 12.58
=DispatchQueue(label: 17.419
letmanager 16.451
manager= 18.387
shouldcomplete") 59.515
letsession 62.902
session= 64.353
{_ 103.06200000000001
_in 186.769
letexpect 18.387
expect= 18.387
=expectation(description: 193.06
expectation(description:"request 39.193000000000005
DataResponse<TestResponse,AFError>? 12.58
TestResponse.self){ 14.032000000000002
{response 30.967000000000002
responsein 22.741
=response 15.483
=ClosureEventMonitor() 14.516
{_, 80.804
_,_ 67.256
inexpect.fulfill() 28.064000000000004
expect.fulfill()} 29.515
letrequest 84.675
request= 91.449
for_ 12.58
=Session(startRequestsImmediately: 19.838
=2 14.032000000000002
{[unowned 20.322
iin 29.032
shouldfire") 43.547
letdidComplete 13.548
didComplete= 15.483
_,_, 48.386
{return 283.541
return} 132.577
=Session() 22.257
expectation(description:"response 20.806
=$0; 17.419
Session(startRequestsImmediately:false) 11.613
response:HTTPURLResponse? 14.999999999999998
configuration= 10.161
=Session(configuration: 11.613
==true) 28.548000000000002
=Thread.isMainThread 22.741
HTTPHeaders= 10.161
=$0 26.612000000000002
=["foo": 11.129
{$0 26.612000000000002
String)-> 58.547000000000004
timeout:timeout, 12.58
timeout,enforceOrder: 12.58
enforceOrder:true) 12.58
task= 17.903
letfileURL 20.322
fileURL= 20.322
{stream 20.322
streamin 20.322
guardcase 11.129
caselet 181.931
#ifos(iOS) 40.644
os(iOS)|| 29.999
||os(tvOS) 29.999
importUIKit 33.386
indexPath:IndexPath) 11.129
observablesequences 118.06099999999999
sequencesinto 56.611
intoone 52.257
oneobservable 52.257
sequenceby 28.064000000000004
eachelement 31.451
withthe 17.903
fromthe 45.483
thesecond 12.58
parameterresultSelector: 23.709
resultSelector:Function 23.709
Functionto 23.709
toinvoke 51.772999999999996
invokefor 24.193
foreach 35.322
sequencecontaining 60.482000000000006
containingthe 62.418
theresult 60.966
resultof 56.12800000000001
ofcombining 47.418
elementof 18.87
ofthe 181.447
usingthe 64.837
thespecified 111.28699999999999
specifiedresult 31.451
resultselector 31.451
selectorfunction. 33.386
resultSelector:@escaping 32.419000000000004
byusing 24.193
anelement. 25.160999999999998
finalprivate 74.03
privateclass 75.966
O:ObserverType> 16.451
,ObserverType 11.613
=RecursiveLock() 15.483
fileprivatevar 31.451
funcrun() 21.774
run()-> 21.29
->Disposable 89.03
Disposable{ 65.80499999999999
=SingleAssignmentDisposable() 51.772999999999996
func_synchronized_on(_ 11.613
_synchronized_on(_event: 11.613
guardlet 198.866
}catch 86.12700000000001
lete 11.129
e{ 13.548
=value 48.386
=sink.run() 20.806
()-> 36.289
T)-> 25.644
->T 10.161
T{ 13.548
->Void) 73.54599999999999
Void){ 34.838
error= 36.772999999999996
deinit{ 20.806
fileprivatefunc 17.903
varvalue: 11.129
T){ 14.999999999999998
get{ 45.483
set{ 22.257
value= 34.838
=newValue 22.741
data:Data) 11.129
returnfalse 125.31899999999999
false} 21.29
returntrue 100.643
letendpoint 18.387
endpoint= 18.387
letexpectation1 13.548
expectation1= 13.548
letexpectation2 13.548
expectation2= 13.548
"downloadshould 10.161
=resp.error 27.096
errorin 16.451
shouldsucceed 11.613
succeedand 11.613
andreturn 13.064000000000002
funcrequest(_ 61.45
interceptor:RequestInterceptor? 16.935
RequestInterceptor?= 15.966999999999999
nil)-> 22.741
DataRequest{ 14.032000000000002
interceptor:interceptor, 15.483
returnrequest 10.161
=nil, 84.675
DownloadRequest{ 12.58
overridevar 35.806
String?{ 13.548
nil} 34.354
leturlRequest 35.806
urlRequest= 43.063
Error{ 12.096
->Self 39.676
Self{ 29.032
nilelse 17.419
error:Error) 10.161
[unownedself] 14.516
catch{ 76.45
publicprotocol 28.548000000000002
queue:DispatchQueue 11.129
{get 18.87
get} 13.548
funcurlSession(_ 43.063
urlSession(_session: 43.063
session:URLSession, 54.192
error:Error?) 15.483
task:URLSessionTask, 33.87
task:URLSessionTask) 22.257
response:HTTPURLResponse, 14.999999999999998
dataTask:URLSessionDataTask, 10.161
downloadTask:URLSessionDownloadTask, 11.613
request(_request: 55.16
request:Request, 40.644
witherror: 11.129
request:Request) 20.322
request:DownloadRequest, 13.064000000000002
publiclet 81.288
performEvent{ 20.806
URLSessionTask){ 13.064000000000002
{$0.request(request, 12.096
Request){ 12.096
response:response, 28.548000000000002
data:data, 17.419
openclass 27.096
openvar 45.483
->Void)? 66.289
DispatchQueue= 22.257
openfunc 68.224
XCTestCase{ 11.129
Int){ 30.967000000000002
String){ 44.515
String{ 144.19
Int)-> 76.45
->Int 34.354
=0 107.9
==1 22.741
1{ 21.774
==0 61.934000000000005
0? 14.032000000000002
0{ 89.998
importRxSwift 52.741
functableView(_ 24.193
tableView(_tableView: 24.193
tableView:UITableView, 10.161
private(set)var 16.451
$0)} 18.87
letsubject 12.096
subject= 13.064000000000002
weakvar 253.542
openoverride 13.548
Bool){ 26.612000000000002
importCocoa 51.772999999999996
@IBOutletweak 236.12300000000002
@IBOutletvar 30.967000000000002
staticlet 665.305
CGFloat= 19.354
NSHomeDirectory()+ 10.645
Notification){ 28.548000000000002
=self 95.804
letdefaults 11.129
defaults= 12.096
=UserDefaults.standard 12.58
[String]= 15.483
="" 25.644
+1 14.032000000000002
=[ 21.774
elseif 74.998
@IBActionfunc 100.643
sender:NSMenuItem) 44.515
NSMenuItem){ 44.515
*){ 47.902
=URL(string: 14.999999999999998
.map{ 37.257000000000005
letindex 20.322
index= 30.967000000000002
letresult 117.09400000000001
result= 142.738
letitem 11.129
item= 11.129
@objcfunc 43.547
>0 38.708999999999996
=try? 26.128000000000004
sender:AnyObject) 34.838
AnyObject){ 35.322
urlRequest:URLRequest, 10.161
forsession: 15.483
session:Session, 15.483
completion:@escaping 20.806
Error>)-> 10.161
publicenum 31.451
switchself 56.12800000000001
self{ 90.965
returnnil 111.771
varerror: 18.387
returnerror 10.161
Void)-> 19.838
->Void 55.644
for:session, 12.096
{result 19.838
resultin 12.58
switchresult 11.613
result{ 14.516
session,dueTo: 10.161
importclass 11.613
publicclass 11.613
anaction 10.645
actionto 17.419
tobe 35.806
parameterstate: 10.161
state:State 11.129
passedto 15.966999999999999
theaction 11.613
beexecuted. 20.322
Actionto 34.838
returns:The 33.386
objectused 14.516
tocancel 11.613
thescheduled 10.161
state:StateType, 11.613
action:@escaping 14.032000000000002
@escaping(StateType) 11.613
(StateType)-> 11.613
->Disposable) 10.645
elementsfrom 23.709
sourceobservable 22.741
observablesequence, 13.064000000000002
incase 18.387
ObserverType>:Sink<O>, 11.613
funcrun<O: 22.741
run<O:ObserverType>(_ 22.741
=Endpoint().urlRequest 13.548
tryencoding.encode(self.urlRequest, 14.032000000000002
encoding.encode(self.urlRequest,with: 14.032000000000002
XCTFail("Testencountered 19.354
encounteredunexpected 19.354
unexpectederror: 19.354
error:\(error)") 19.838
[String:Any] 11.613
=[:] 23.225
with:parameters) 19.354
NSObject{ 13.548
extensionReactive 35.322
Reactivewhere 35.322
whereBase: 35.322
returnBinder(self.base) 17.903
Binder(self.base){ 21.29
Voidin 22.741
mutatingfunc 40.644
-1) 13.064000000000002
fori 24.677
in0 10.161
0..< 10.161
index:Int) 18.387
/2 16.935
notification:Notification) 21.774
object:ParentObject) 10.645
letsource 61.45
source= 62.902
{[weak 14.516
valuein 13.064000000000002
letresponse 29.032
as?String 20.806
(()-> 20.322
DispatchQueue.main.async{ 22.257
method:HTTPMethod 13.548
HTTPMethod= 12.58
headers:HTTPHeaders? 16.935
HTTPHeaders?= 15.483
method:method, 14.032000000000002
lettask 14.032000000000002
=request 19.354
->UploadRequest 13.064000000000002
UploadRequest{ 10.161
=MultipartFormData() 12.096
=error 29.999
ifcase 59.031000000000006
+=1 38.708999999999996
completionHandler:@escaping 19.838
response:self.response, 10.161
returnself 35.806
=data 13.064000000000002
response,data: 16.935
data,error: 13.064000000000002
letstring 12.58
string= 12.58
0else 13.548
Set<Int>= 10.645
importstruct 11.129
staticvar 49.837
#ifDEBUG 21.774
Createsnew 12.096
newsubscription 12.096
subscriptionand 14.516
andsends 11.613
sendselements 11.613
elementsto 20.322
returns:Disposable 19.354
Disposableobject 18.387
objectthat 18.387
tounsubscribe 16.451
unsubscribethe 12.096
@available(*,deprecated, 13.064000000000002
observer:O) 20.322
O)-> 19.354
Disposablewhere 21.29
==E 20.322
E{ 20.322
caseerror 12.096
erroroccurs 11.129
->R 16.451
R{ 16.451
anelement 32.419000000000004
toan 13.064000000000002
anobservable 65.80499999999999
observablesequence. 65.80499999999999
elementin 23.225
inthe 52.257
theobservable 84.191
Thismethod 10.161
->SharedSequence<SharingStrategy, 20.806
SharedSequence<SharingStrategy,E> 13.064000000000002
E>{ 14.032000000000002
=self.asObservable() 10.645
.next(letelement): 10.645
view= 11.613
case.error(let 22.257
.error(leterror): 17.903
String?= 16.935
extensionSharedSequenceConvertibleType 18.387
SharedSequenceConvertibleTypewhere 10.645
whereSharingStrategy 15.966999999999999
SharingStrategy== 70.15899999999999
=e 17.903
ObservableTypewhere 11.613
event:Event<Element>) 14.032000000000002
Event<Element>){ 14.516
returnvalue 14.999999999999998
didSet{ 13.548
lazyvar 25.644
=Preference.bool(for: 12.58
Int= 24.677
letnewValue 11.613
newValue= 12.096
as?Int 12.58
letwindow 15.483
window= 15.483
ifPreference.bool(for: 17.903
internalfunc 11.129
if#available(macOS 42.096000000000004
#available(macOS10.14, 18.87
10.14,*) 18.87
event:NSEvent) 24.193
NSEvent){ 22.257
target:self, 10.645
!=0 16.935
=true) 10.645
letvalue 29.515
sender:NSButton) 22.741
NSButton){ 23.709
returnresult 16.935
Any{ 20.322
row:Int) 14.032000000000002
CustomStringConvertible{ 10.645
vardescription: 14.999999999999998
description:String 14.999999999999998
privatestatic 11.129
letprofile 13.548
profile= 14.032000000000002
>=0 12.58
sender:Any) 19.838
Any){ 20.806
return0 10.161
->Any? 13.548
Any?{ 14.516
tableView:NSTableView, 15.966999999999999
tableColumn:NSTableColumn?, 11.613
NSTableColumn?,row: 10.645
<0 12.58
->T? 11.613
T?{ 13.064000000000002
ona 11.129
theresulting 17.903
resultingobservable 14.516
onthe 13.064000000000002
sequencewhose 18.87
@escaping() 11.129
extensionPrimitiveSequenceType 18.87
PrimitiveSequenceTypewhere 18.87
whereTraitType 11.613
TraitType== 18.387
sequenceto 14.999999999999998
terminationof 13.064000000000002
thatcontains 25.160999999999998
containsthe 14.032000000000002
theelements 32.902
elementsof 73.54599999999999
->String 62.418
->Data 12.58
Data{ 13.064000000000002
URL{ 12.096
letmultipartFormData 13.548
multipartFormData= 13.548
datashould 12.096
"Content-Disposition:form-data; 12.58
=Data() 12.096
boundaryKey:boundary)) 13.548
streamOnMain= 11.613
completeOnMain= 11.613
expectation(description:"stream 35.806
"streamshould 27.58
switchstream.event 18.387
stream.event{ 18.87
let.complete(completion): 11.613
=completion.response 10.645
=1 26.612000000000002
isnot 24.193
letserializer 39.193000000000005
serializer= 39.193000000000005
type== 11.613
whereS.Iterator.Element 12.096
S.Iterator.Element== 12.096
varresult: 20.806
{continue 11.129
continue} 11.129
=String(format: 13.064000000000002
name:String) 16.935
NSNib.Name{ 12.096
{// 13.548
iftableView 10.645
tableView== 11.613
s= 13.064000000000002
}){ 11.613
->String? 10.161
path= 10.161
n:Int) 24.677
Returnsan 19.354
bythe 10.645
aspecified 10.645
elementsare 13.064000000000002
parameterdueTime: 10.645
eachelement. 10.645
parameterscheduler: 15.483
scheduler:Scheduler 15.483
Schedulerto 14.516
torun 19.838
dueTime:RxTimeInterval, 11.129
scheduler:SchedulerType) 13.064000000000002
scheduler:scheduler) 11.613
typealiasElement 15.483
Element= 15.483
let_lock 14.999999999999998
returnDisposables.create() 21.29
=scheduler 13.064000000000002
??"" 17.419
ofan 14.032000000000002
intoa 11.129
anew 10.645
transformfunction 15.483
whoseelements 10.645
oneach 10.161
selector:@escaping 11.129
{try 104.03
mergesthe 10.645
theinput 11.129
notpass 14.999999999999998
elementat 31.451
numberof 15.966999999999999
sourcesequence. 10.645
ofelements 26.612000000000002
sourcesequence 17.903
letsource: 18.87
#ifTRACE_RESOURCES 20.806
=Resources.incrementTotal() 10.161
=Resources.decrementTotal() 10.161
producesan 24.193
Observablesequence 20.322
trust= 12.58
publicmutating 25.160999999999998
element:T) 10.645
keys= 11.129
key:Key) 17.903
Key)-> 14.032000000000002
Key){ 14.516
returnControlEvent(events: 29.999
ControlEvent(events:source) 29.515
String]= 14.516
self= 13.064000000000002
Theobservable 14.032000000000002
thegiven 16.451
throws{ 41.612
returnSharedSequence<SharingStrategy, 14.032000000000002
basedon 10.161
whereE 19.354
sequenceof 44.031
eventin 11.613
invokeupon 10.161
Void)?= 25.644
UInt= 10.645
specifiedscheduler 10.161
asthe 11.129
extensionSharedSequence 10.161
Element>{ 12.096
Mergesthe 45.483
specifiedobservable 45.483
theselector 23.709
selectorfunction 22.741
functionwhenever 24.193
wheneverall 29.032
allof 30.483
sequenceshave 29.999
haveproduced 29.999
producedan 29.999
ata 29.999
acorresponding 29.999
correspondingindex. 29.999
eachseries 14.999999999999998
seriesof 14.999999999999998
elementsat 14.999999999999998
atcorresponding 14.999999999999998
correspondingindexes 14.999999999999998
indexesin 14.999999999999998
thesources. 30.967000000000002
combiningelements 45.483
thesources 37.257000000000005
sourcesusing 29.515
wheneverany 23.225
anyof 23.709
sequencesproduces 15.483
=false) 10.161
false){ 14.516
letcredential 11.129
credential= 12.58
letinterceptor 14.516
interceptor= 14.516
XCTAssertEqual(response?.result.isFailure,true) 12.096
finalfunc 11.613
funccombineLatest<O1: 13.548
ObservableType,O2: 13.548
(_source1: 27.096
source1:O1, 27.096
O1,_ 27.096
_source2: 40.644
source2:O2, 25.160999999999998
@escaping(O1.E, 13.548
->E) 17.419
source1:source1.asObservable(), 13.548
source1.asObservable(),source2: 13.548
source2:source2.asObservable(), 13.548
resultSelector:resultSelector 13.548
E== 16.451
==Any 13.548
oftuples 13.548
tupleswhenever 20.322
=CombineLatestObserver(lock: 16.935
CombineLatestObserver(lock:self._lock, 16.935
self._lock,parent: 33.87
parent:self, 34.838
self,index: 33.87
setLatestValue:{ 16.935
{(e: 16.935
e}, 16.935
},this: 33.87
returntry 33.386
O2:ObservableType, 11.613
ObservableType,O3: 11.613
O2,_ 23.225
_source3: 34.838
source3:O3, 21.29
(O1.E,O2.E, 23.225
source2.asObservable(),source3: 11.613
source3:source3.asObservable(), 11.613
E2,E3, 41.612
(E1,E2, 17.419
O3,_ 19.354
_source4: 29.032
source4:O4, 17.419
O2.E,O3.E, 24.193
E3,E4, 33.87
O4,_ 15.483
_source5: 23.225
source5:O5, 13.548
O3.E,O4.E, 19.354
E4,E5, 26.128000000000004
O5,_ 11.613
_source6: 17.419
O4.E,O5.E, 14.516
E5,E6, 18.387
_source7: 11.613
E6,E7, 10.645
Result{ 80.321
=TestTrusts.leafValidDNSName.trust 14.999999999999998
lethost 36.289
host= 36.772999999999996
="test.alamofire.org" 31.935
letserverTrust 32.902
serverTrust= 32.902
letserverTrustPolicy 31.451
serverTrustPolicy= 31.451
=Result 74.998
tryserverTrustPolicy.evaluate(serverTrust, 30.483
serverTrustPolicy.evaluate(serverTrust,forHost: 31.451
forHost:host) 34.354
host)} 31.935
XCTAssertTrue(result.isSuccess,"server 17.903
"servertrust 31.935
trustshould 31.935
shouldpass 17.903
passevaluation") 31.935
XCTAssertFalse(result.isSuccess,"server 14.032000000000002
letcertificates 14.032000000000002
certificates= 14.032000000000002
=PinnedCertificatesTrustEvaluator(certificates: 11.129
PinnedCertificatesTrustEvaluator(certificates:certificates, 11.129
performDefaultValidation:false, 11.129
validateHost:false) 13.064000000000002
letkeys 10.645
=Queue(capacity: 19.354
funcencode(_ 16.451
->URLRequest 13.064000000000002
URLRequest{ 12.58
returnurlRequest 10.645
=.main, 14.999999999999998
executeTest(cachePolicy:cachePolicy, 11.129
cachePolicy,cacheControl: 11.129
"responseshould 25.644
seealso:[zip 21.29
[zipoperator 21.29
onreactivex.io](http://reactivex.io/documentation/operators/zip.html) 21.29
funczip<E1, 13.548
source1:PrimitiveSequence<TraitType, 13.548
PrimitiveSequence<TraitType,E1>, 13.548
E1>,_ 13.548
source2:PrimitiveSequence<TraitType, 13.548
PrimitiveSequence<TraitType,E2>, 12.58
->PrimitiveSequence<TraitType, 16.935
PrimitiveSequence<TraitType,ElementType> 11.129
ElementType>{ 11.129
returnPrimitiveSequence(raw: 27.096
PrimitiveSequence(raw:Observable.zip( 13.548
source1.asObservable(),source2.asObservable(), 12.58
zip<E1,E2, 11.613
E2>,_ 11.613
source3:PrimitiveSequence<TraitType, 11.613
PrimitiveSequence<TraitType,E3>, 10.645
source2.asObservable(),source3.asObservable(), 10.645
$mutableState.write{ 12.58
{state 11.613
leta 12.096
a= 14.516
anerror 13.064000000000002
"+ 13.064000000000002
{a 15.483
ain 14.516
Double{ 10.645
couldnot 13.064000000000002
Error>{ 32.902
name:String, 12.096
staticprivate 11.129
@objcvar 17.419
=Preference.string(for: 10.645
true} 48.386
$0} 11.129
funcurlSession( 10.161
_session: 10.645
letencoder 34.354
encoder= 34.354
tryencoder.encode(parameters) 28.548000000000002
Result<String,Error> 27.58
encoder.encode(parameters)} 28.064000000000004
level:.error, 13.548
.error,subsystem: 13.548
subsystem:subsystem) 46.934
XCTAssertTrue(response?.result.isSuccess== 11.613
funczip<O1: 13.548
SharedSequenceConvertibleType,O2: 13.548
==O1.SharingStrategy, 13.548
source1.asSharedSequence().asObservable(),source2.asSharedSequence().asObservable(), 12.58
O2:SharedSequenceConvertibleType, 11.613
SharedSequenceConvertibleType,O3: 11.613
==O2.SharingStrategy, 11.613
source2.asSharedSequence().asObservable(),source3.asSharedSequence().asObservable(), 10.645
Set<HTTPMethod>= 11.129
_,completion 13.548
completionin 14.999999999999998
Queue(capacity:2) 16.935
=ZipObserver(lock: 16.935
ZipObserver(lock:self._lock, 16.935
setNextValue:{ 16.935
@available(macOS10.15, 38.225
10.15,iOS 38.225
iOS13, 38.225
13,watchOS 38.225
watchOS6, 38.225
6,tvOS 38.225
tvOS13, 38.225
13,*) 38.225
letresponseReceived 21.774
responseReceived= 21.774
bereceived") 24.677
letcompletionReceived 24.677
completionReceived= 24.677
store{ 23.225
.publishDecodable(type:TestResponse.self) 18.87
.sink(receiveCompletion:{ 23.225
incompletionReceived.fulfill() 21.774
completionReceived.fulfill()}, 19.838
receiveValue:{ 22.741
$0;responseReceived.fulfill() 10.161
responseReceived.fulfill()}) 11.129
return( 15.966999999999999
DataPreprocessor= 10.161
emptyResponseCodes:Set<Int> 11.613
emptyRequestMethods:Set<HTTPMethod> 10.645
Endpoint{ 10.645
=self, 13.548
=URLEncodedFormEncoder() 17.903
=Result<String, 27.096
tryserializer.serialize(request: 23.709
serializer.serialize(request:nil, 17.903
nil,response: 30.483
response:nil, 21.774
nil,data: 13.064000000000002
error:nil) 33.87
nil)} 33.87
data:nil, 13.548
nil,error: 17.903
=HTTPURLResponse(statusCode: 15.966999999999999
tryserializer.serializeDownload(request: 14.032000000000002
serializer.serializeDownload(request:nil, 12.58
false,nil, 15.966999999999999
nil,nil), 18.387
public 879.05
final 154.107
class 273.54900000000004
: 233.233
{ 6129.2390000000005
struct 85.908
fileprivate 160.512
let 3752.826
key: 33.534
= 6376.4130000000005
key 53.881
private 410.701
var 1501.13
_lock 15.448
Bool 213.263
self._lock.lock(); 15.448
defer 41.07
self._lock.unlock() 24.868
} 1069.706
return 1818.011
== 575.735
nil 254.333
override 210.625
init() 19.97
init(_ 18.463
Disposable, 39.563
_ 383.949
Disposable) 48.229
for 264.506
disposable 26.752
in 775.057
a 188.77200000000002
to 399.39700000000005
the 656.3679999999999
or 42.577
if 988.696
is 159.75900000000001
- 579.126
parameter 186.888
Disposable 94.574
returns: 154.107
that 133.007
can 41.447
be 216.65399999999997
used 53.504
from 81.387
In 20.347
case 866.24
was 16.956
will 43.708
func 1789.375
-> 1076.112
count: 39.186
Int 93.067
?? 132.253
0 225.697
dispose() 13.564
extension 282.969
static 741.899
switch 169.93200000000002
default: 50.113
ObserverType> 21.477
Sink<O>, 12.434
ObserverType 31.273999999999997
typealias 170.309
ElementType 13.940999999999999
O.E 88.922
E 60.286
on(_ 31.65
event: 69.706
Event<E>) 27.128999999999998
event 52.751000000000005
.next: 13.940999999999999
!= 113.03699999999999
self.dispose() 56.518
.error: 10.927
self.forwardOn(event) 20.723
.completed: 33.911
element 110.023
self.forwardOn(.completed) 19.593
Producer<Element> 13.940999999999999
_source: 18.839
Observable<Element> 21.477
init(source: 21.1
self._source 19.593
source 142.803
run<O 14.318
ObserverType>(_ 46.345
observer: 111.15299999999999
O, 62.924
cancel: 127.355
Cancelable) 63.301
(sink: 64.80799999999999
subscription: 67.44500000000001
where 191.032
Element 46.345
sink 33.157
observer, 61.794
cancel) 61.794
subscription 73.097
sink, 32.027
subscription) 33.911
import 253.57999999999998
Foundation 65.561
ObservableType 48.606
The 56.141999999999996
single 23.738
operator 98.719
but 14.318
throws 155.614
Observable 27.506
not 110.399
one 54.635000000000005
before 13.940999999999999
seealso: 89.676
on 148.455
An 89.29899999999999
observable 389.977
sequence 295.026
an 142.427
more 13.564
of 350.038
are 29.766
Observable<E> 44.084
predicate: 11.304
A 23.361
function 51.997
each 64.431
@escaping 156.368
Bool) 36.549
self.asObservable(), 17.709
Parent 52.373999999999995
_parent: 27.506
false 273.173
init(parent: 27.881999999999998
Parent, 22.984
self._parent 28.636
parent 33.157
super.init(observer: 24.115000000000002
.next(let 16.201999999999998
value): 15.825
do 81.387
try 262.246
true 243.78300000000002
catch 78.372
error 129.239
as 132.253
else 620.573
Observable<Element>, 11.304
nil) 136.398
self, 84.401
print("Hello 451.771
world") 451.394
Alamofire 13.187999999999999
XCTest 19.216
BaseTestCase 29.012999999999998
url 60.286
expectation 60.663000000000004
self.expectation(description: 60.663000000000004
request 111.15299999999999
should 285.22999999999996
response: 154.484
DataResponse<Data?, 19.97
AFError>? 64.80799999999999
parameters: 33.534
["foo": 17.332
.response 34.665
resp 93.821
response 144.31
expectation.fulfill() 60.663000000000004
waitForExpectations(timeout: 119.44200000000001
timeout) 121.32600000000001
XCTAssertNotNil(response?.request) 25.997999999999998
XCTAssertNotNil(response?.response) 20.347
XCTAssertNotNil(response?.data) 13.940999999999999
XCTAssertNil(response?.error) 11.680000000000001
* 45.968
progress 16.201999999999998
[] 73.474
Double 23.361
item 29.39
nil") 47.099000000000004
parameters 38.433
"request 61.794
succeed") 13.564
DataResponse<Any, 12.811
parameters) 16.579
as? 137.151
[String: 61.417
String] 22.607
#if 111.53
String 194.424
URL 32.781
url(forResource: 11.680000000000001
withExtension: 13.564
data 94.951
try! 10.55
Data(contentsOf: 19.97
URL) 22.231
}() 42.577
method: 31.65
XCTAssertEqual(response?.result.isSuccess, 16.579
true) 170.309
#endif 111.53
queue 18.839
DispatchQueue(label: 14.318
manager 18.463
queue) 13.940999999999999
complete") 53.127
attributes: 10.173
session 53.504
count 31.273999999999997
timeout, 11.304
}) 47.852000000000004
expect 14.318
expectation(description: 150.339
TestResponse.self) 26.752
expect.fulfill() 34.665
ClosureEventMonitor() 11.304
4 10.173
_, 122.08
Session(startRequestsImmediately: 15.448
false, 80.256
2 40.317
[unowned 15.825
i 46.345
fire") 33.911
didComplete 12.811
guard 285.22999999999996
Session() 17.332
serializer 32.781
"response 21.477
1 121.32600000000001
completion 22.607
$0; 13.564
false) 99.472
"Request 11.304
HTTPURLResponse? 15.448
session: 64.054
headers 12.057
configuration 10.927
Session(configuration: 10.927
$0) 21.854
Thread.isMainThread 18.463
String? 41.824
headers: 46.345
HTTPHeaders 11.680000000000001
$0 47.099000000000004
1, 49.359
encoding: 25.244999999999997
withName: 18.086
}, 62.17
to: 68.953
String) 95.328
[String] 21.854
"" 45.968
&& 83.271
request: 108.139
wait(for: 13.940999999999999
timeout: 16.201999999999998
task: 54.257999999999996
task 23.361
fileURL 23.361
stream 29.39
stream.event 15.825
os(iOS) 33.157
|| 73.851
os(tvOS) 25.622
UIKit 25.997999999999998
Merges 41.824
sequences 97.589
into 56.518
by 61.04
combining 37.679
self 169.555
with 79.87899999999999
second 16.201999999999998
second: 11.680000000000001
resultSelector: 68.199
Function 20.723
invoke 40.317
containing 51.243
result 230.219
using 71.967
specified 102.11
selector 51.997
function. 29.39
time 33.534
when 18.086
element. 38.056
O: 22.984
Sink<O> 11.304
, 62.924
RecursiveLock() 12.057
run() 16.956
SingleAssignmentDisposable() 40.317
e 32.781
self.forwardOn(.error(error)) 10.173
value 128.10899999999998
ResultSelector 12.811
first 12.811
resultSelector 17.332
sink.run() 16.201999999999998
protocol 33.534
() 38.809
T) 35.041
T 17.332
Void) 57.272
1) 81.01
0, 58.779
deinit 16.201999999999998
os(macOS) 10.927
value: 69.32900000000001
get 59.533
set 31.273999999999997
newValue 29.766
@discardableResult 50.113
inout 16.201999999999998
S) 10.927
Data? 11.304
data: 70.836
Data) 11.680000000000001
state: 26.375
state 18.839
endpoint 14.695
expectation1 10.55
status 25.622
expectation2 10.55
AFError? 27.128999999999998
resp.error 21.1
expectation1.fulfill() 10.55
expectation2.fulfill() 10.55
[]) 15.448
and 110.776
no 16.201999999999998
request(_ 47.852000000000004
convertible: 10.927
URLRequestConvertible, 11.680000000000001
interceptor: 45.968
RequestInterceptor? 13.187999999999999
DataRequest 13.564
interceptor, 12.057
delegate: 22.607
self) 19.97
nil, 180.482
destination: 12.434
DownloadRequest 13.940999999999999
mimeType: 11.304
200) 17.332
urlRequest 45.968
enum 68.576
Error 14.695
Self 32.781
error: 125.848
Error) 16.579
self] 13.187999999999999
fileURL) 13.187999999999999
queue: 36.925
DispatchQueue 24.868
urlSession(_ 33.534
URLSession, 44.838
Error?) 17.332
URLSessionTask, 33.911
didReceive 13.187999999999999
Int64, 21.477
Int64) 13.564
URLSessionTask) 20.723
HTTPURLResponse, 15.825
URLRequest) 17.709
metrics: 18.839
@available(macOS 36.172
iOS 35.041
tvOS 52.373999999999995
watchOS 38.433
*) 90.053
dataTask: 11.304
URLSessionDataTask, 13.187999999999999
downloadTask: 15.072
URLSessionDownloadTask, 12.811
Request, 32.403999999999996
urlRequest: 29.012999999999998
URLRequest, 18.463
Request) 16.201999999999998
URLRequest?, 14.318
result: 42.954
AFError>) 12.434
stream: 10.55
DownloadRequest, 10.55
url: 23.361
fileURL: 26.375
{} 35.418
performEvent 16.201999999999998
error) 34.288
task, 17.332
task) 12.434
response, 38.433
request) 16.201999999999998
data) 12.811
with: 46.345
data, 26.752
response) 11.304
url) 16.201999999999998
open 125.848
((URLSession, 18.463
Void)? 51.62
array 17.332
3, 19.593
2, 32.781
0) 71.967
Int, 46.345
Int) 97.965
c 10.173
identifier 10.55
" 41.824
+= 68.953
+ 194.047
/ 53.127
items 13.940999999999999
< 65.938
( 15.072
? 113.791
RxSwift 41.07
@available(iOS 13.564
10.0, 13.564
NSObject 13.940999999999999
tableView(_ 18.839
tableView: 30.897
weak 205.727
private(set) 13.564
ParentObject) 12.811
tableView 12.057
internal 23.738
subject 24.491
retainDelegate: 10.173
Cocoa 40.317
@IBOutlet 207.988
NSMenuItem! 37.679
NSView! 20.347
NSTextField! 39.94
CGFloat 22.231
NSHomeDirectory() 10.173
as! 47.476
ofType: 10.927
Notification) 22.231
[ 29.39
true, 56.895
"", 15.072
image 15.072
NSImage(named: 12.811
object: 31.273999999999997
> 70.46
forKey: 19.216
@IBAction 79.503
sender: 116.80499999999999
NSMenuItem) 35.418
URL(string: 15.072
name: 41.447
userInfo: 13.564
.map 29.012999999999998
index 61.04
url, 15.825
.off 13.940999999999999
.on 18.463
p 10.55
break 41.447
index) 13.940999999999999
at: 19.97
@objc 56.141999999999996
String, 77.242
title 13.187999999999999
"") 15.448
notification: 17.332
message: 15.072
message 13.564
str 13.187999999999999
try? 24.868
AnyObject) 33.157
URL(fileURLWithPath: 13.940999999999999
options: 45.968
has 25.622
been 12.811
failed 11.680000000000001
Session, 12.811
completion: 21.854
Error? 17.709
Void 43.331
session, 18.839
[], 11.680000000000001
for: 52.751000000000005
action 40.693
State 10.173
passed 14.695
executed. 15.825
action: 53.127
Action 29.766
object 37.302
cancel 13.940999999999999
elements 135.268
sequence, 18.839
any 30.897
which 17.709
E) 20.347
ObserverType>: 15.825
run<O: 17.709
Endpoint().urlRequest 10.55
encoding.encode(self.urlRequest, 10.927
XCTFail("Test 15.448
encountered 15.072
unexpected 15.448
\(error)") 17.709
Any] 10.927
[:] 21.1
XCTAssertEqual(urlRequest.url?.query, 12.434
expected 12.811
URLRequest 14.695
Reactive 33.534
Base: 28.259
Binder(self.base) 16.579
Bool, 15.072
mutating 32.781
element: 27.128999999999998
..< 13.564
index: 48.229
>= 29.39
while 31.273999999999997
delegate 30.897
[weak 11.304
observer 29.39
behavior 15.072
info 10.927
#else 18.463
UInt64 11.304
(() 16.956
DispatchQueue.main.async 17.332
URLConvertible, 11.680000000000001
HTTPMethod 11.304
HTTPHeaders? 13.187999999999999
method, 15.072
request, 22.607
URL, 10.927
UploadRequest 10.927
URL? 11.680000000000001
throw 47.099000000000004
uploadable 11.304
macOS 13.940999999999999
nil), 36.549
all 53.504
associatedtype 11.680000000000001
HTTPURLResponse?, 10.173
completionHandler: 29.766
queue, 13.940999999999999
string 19.216
Set<Int> 11.304
DEBUG 16.956
Creates 11.680000000000001
new 22.607
this 25.997999999999998
it 30.897
unsubscribe 13.564
@available(*, 16.201999999999998
deprecated, 10.55
renamed: 12.057
O) 23.738
elements. 13.940999999999999
R 25.997999999999998
after 24.491
handler 15.072
sequence. 83.271
unavailable, 11.304
This 33.157
method 29.39
scheduler: 54.257999999999996
SharedSequence<SharingStrategy, 30.143
E> 18.086
view 25.997999999999998
.error(let 17.332
error): 21.854
only 21.477
SharedSequenceConvertibleType 15.825
SharingStrategy 55.388
Event<Element>) 12.811
.error, 16.956
value) 19.216
transform: 13.564
continue 16.201999999999998
Data 16.956
didSet 10.55
lazy 20.723
Preference.bool(for: 31.65
Preference.integer(for: 12.811
NSButton! 25.622
window 23.738
forName: 19.593
Any? 16.956
name, 16.956
.main, 13.564
#available(macOS 33.534
10.14, 21.477
level: 28.636
NSEvent) 18.839
event) 13.564
target: 17.709
selector: 28.259
duration 17.332
NSButton) 18.463
from: 13.187999999999999
in: 19.216
Any 19.97
row: 14.695
description: 11.680000000000001
subsystem: 40.317
arguments: 14.318
profile 12.434
Any) 21.854
<= 16.579
NSTableView, 13.187999999999999
row 11.680000000000001
-= 13.940999999999999
y: 22.231
T? 12.434
whose 15.448
resulting 15.072
Disposables.create() 17.709
PrimitiveSequenceType 15.448
TraitType 15.072
upon 13.564
termination 10.173
contains 22.607
boundaryKey: 16.201999999999998
multipartFormData 16.579
match 10.55
at 53.504
Data() 10.173
boundary)) 10.55
fileName: 10.173
file 20.723
comment: 66.692
String(format: 21.1
"stream 27.881999999999998
""" 15.825
password: 12.811
Error> 30.143
type: 52.751000000000005
type 32.781
(_ 35.795
range: 13.940999999999999
key) 16.201999999999998
| 19.593
s 12.434
Int? 16.201999999999998
Double) 11.304
filter 11.304
super.init() 14.695
sheetWindow: 17.332
input 15.448
name 20.723
NSRect(x: 10.55
width: 12.057
height: 25.622
children: 12.057
label: 10.927
current 11.304
next 12.057
& 10.173
6, 39.186
alpha: 11.304
path 17.709
n: 22.231
height 12.057
use 12.434
Returns 23.738
then 11.304
dueTime: 30.52
Scheduler 12.057
run 16.956
on. 12.434
RxTimeInterval, 14.318
SchedulerType) 10.55
scheduler 24.115000000000002
given 19.97
index. 24.491
transform 14.318
series 12.811
pass 25.997999999999998
number 18.086
observers 15.072
produced 29.39
have 30.897
source: 30.897
TRACE_RESOURCES 16.956
other 10.55
produces 24.491
policies 10.55
validateHost: 15.825
certificates 13.187999999999999
policy 10.173
host 33.911
host) 31.273999999999997
trust 37.679
list 10.927
keys 10.927
values 12.057
Key) 24.115000000000002
left 11.680000000000001
right 10.173
ControlEvent(events: 23.361
source) 30.143
parent: 30.143
It 12.434
params: 10.55
this: 29.766
If 13.564
S 11.680000000000001
R> 13.940999999999999
some 10.55
onCompleted: 10.55
because 14.695
events 13.187999999999999
UInt 10.55
initial 10.55
value. 10.173
Element> 12.811
whenever 41.824
corresponding 39.186
indexes 12.434
sources. 24.115000000000002
sources 31.65
SharedSequenceConvertibleType, 42.577
credential: 12.057
credential 12.811
interceptor 15.072
2) 34.288
work 10.173
period: 10.927
size 12.434
combineLatest<O1: 10.55
ObservableType, 48.606
O2: 21.1
ObservableType> 14.318
source1: 44.838
O1, 21.1
source2: 50.113
O2, 19.593
(O1.E, 21.1
source1.asObservable(), 21.1
source2.asObservable(), 20.347
tuples 16.201999999999998
E2, 38.433
CombineLatestObserver(lock: 13.187999999999999
self._lock, 26.752
setLatestValue: 13.564
(e: 13.187999999999999
(E1, 15.825
O3: 18.086
source3: 42.954
O3, 16.579
O2.E, 22.607
source3.asObservable(), 17.332
E3, 32.403999999999996
O4: 15.072
source4: 35.795
O4, 13.564
O3.E, 18.839
source4.asObservable(), 14.318
E4, 26.375
4, 19.97
O5: 12.057
source5: 28.636
O5, 10.55
O4.E, 15.072
source5.asObservable(), 11.304
E5, 20.347
5, 18.463
source6: 21.477
O5.E, 11.304
E6, 14.318
source7: 14.318
12, 14.318
Result 62.547000000000004
"test.alamofire.org" 27.881999999999998
TestTrusts.leafValidDNSName.trust 11.680000000000001
serverTrust 25.622
serverTrustPolicy 24.491
setRootCertificateAsLoneAnchorCertificateForTrust(serverTrust) 13.564
serverTrustPolicy.evaluate(serverTrust, 24.491
forHost: 26.752
XCTAssertTrue(result.isSuccess, 13.940999999999999
"server 24.868
evaluation") 24.868
XCTAssertFalse(result.isSuccess, 10.927
PinnedCertificatesTrustEvaluator(certificates: 10.55
performDefaultValidation: 11.680000000000001
10.12, 10.927
NSLayoutConstraint! 10.173
10, 11.304
Queue(capacity: 15.448
context 10.927
encode(_ 12.811
boolEncoding: 10.55
key, 11.680000000000001
[zip 16.579
reactivex.io](http://reactivex.io/documentation/operators/zip.html) 16.579
zip<E1, 10.55
PrimitiveSequence<TraitType, 68.953
E1>, 10.55
PrimitiveSequence(raw: 21.1
Observable.zip( 15.825
code 13.564
method. 10.173
10.15, 32.403999999999996
NSSize(width: 11.680000000000001
AnyObject? 10.173
args: 13.564
NSColor 10.173
fileManager: 11.680000000000001
as: 12.057
13, 63.301
``` 10.55
size: 19.593
right: 15.072
dispatchPrecondition(condition: 13.940999999999999
could 11.304
store 19.216
Preference.string(for: 10.173
XCTAssertNotNil(response?.metrics) 12.434
by: 10.55
node 12.057
Result<String, 22.231
j 10.173
NSLog("Request: 11.304
OR 10.55
encoder 28.259
encoder.encode(parameters) 22.231
setNextValue: 13.564
requestModifier: 15.072
subsystem) 36.549
zip<O1: 10.55
SharedSequenceConvertibleType> 10.55
SharedSequence<O1.SharingStrategy, 10.55
O1.SharingStrategy, 10.55
source1.asSharedSequence().asObservable(), 10.55
Set<HTTPMethod> 12.057
XCTAssertTrue(result.isSuccess) 13.940999999999999
XCTAssertEqual(result.success, 21.477
XCTAssertTrue(result.isFailure) 17.709
ZipObserver(lock: 13.187999999999999
responseReceived 16.956
received") 19.216
completionReceived 19.216
.publishDecodable(type: 16.956
.sink(receiveCompletion: 18.086
completionReceived.fulfill() 19.216
receiveValue: 17.709
responseReceived.fulfill() 16.956
DataPreprocessor 12.811
emptyResponseCodes: 14.318
emptyRequestMethods: 13.564
URLEncodedFormEncoder() 13.940999999999999
serializer.serialize(request: 18.463
XCTAssertNotNil(result.success) 10.927
XCTAssertNil(result.failure) 12.434
XCTAssertNil(result.success) 15.448
XCTAssertNotNil(result.failure) 15.448
HTTPURLResponse(statusCode: 12.434
serializer.serializeDownload(request: 10.927
