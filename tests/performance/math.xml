<test>


    <stop_conditions>
        <all_of>
            <iterations>5</iterations>
            <min_time_not_changing_for_ms>10000</min_time_not_changing_for_ms>
        </all_of>
        <any_of>
            <iterations>50</iterations>
            <total_time_ms>60000</total_time_ms>
        </any_of>
    </stop_conditions>

    <substitutions>
        <substitution>
           <name>func_slow</name>
           <values>
               <value>atan</value>
               <value>cbrt</value>
               <value>cos</value>
               <value>lgamma</value>
               <value>tgamma</value>
               <value>log10</value>
               <value>sin</value>
               <value>tan</value>
           </values>
        </substitution>
        <substitution>
           <name>func</name>
           <values>
               <value>exp</value>
               <value>log</value>
               <value>exp2</value>
               <value>log2</value>
               <value>exp10</value>
               <value>sqrt</value>
               <value>erf</value>
               <value>erfc</value>
               <value>asin</value>
               <value>acos</value>
               <value>sigmoid</value>
               <value>tanh</value>
           </values>
        </substitution>
        <substitution>
            <name>arg</name>
            <values>
                <value>toFloat64(number)</value>
                <value>toFloat32(number)</value>
                <value>number</value>
            </values>
        </substitution>
    </substitutions>

    <query>SELECT count() FROM numbers(100000000) WHERE NOT ignore({func}({arg}))</query>
    <query>SELECT count() FROM numbers(10000000) WHERE NOT ignore({func_slow}({arg}))</query>
</test>
