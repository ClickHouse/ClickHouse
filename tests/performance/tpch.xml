<test>

<!--
See https://clickhouse.com/docs/en/getting-started/example-datasets/tpch
-->

    <!-- Q1 -->
    <query>
        SELECT
            l_returnflag,
            l_linestatus,
            sum(l_quantity) AS sum_qty,
            sum(l_extendedprice) AS sum_base_price,
            sum(l_extendedprice * (1 - l_discount)) AS sum_disc_price,
            sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) AS sum_charge,
            avg(l_quantity) AS avg_qty,
            avg(l_extendedprice) AS avg_price,
            avg(l_discount) AS avg_disc,
            count(*) AS count_order
        FROM
            tpch10.lineitem
        WHERE
            l_shipdate &lt;= DATE &apos;1998-12-01&apos; - INTERVAL &apos;90&apos; DAY
        GROUP BY
            l_returnflag,
            l_linestatus
        ORDER BY
            l_returnflag,
            l_linestatus;
    </query>

    <!-- Q2, manually decorrelated version -->
    <query>
        WITH MinSupplyCost AS (
            SELECT
                ps_partkey,
                MIN(ps_supplycost) AS min_supplycost
            FROM
                tpch10.partsupp ps
            JOIN
                tpch10.supplier s ON ps.ps_suppkey = s.s_suppkey
            JOIN
                tpch10.nation n ON s.s_nationkey = n.n_nationkey
            JOIN
                tpch10.region r ON n.n_regionkey = r.r_regionkey
            WHERE
                r.r_name = &apos;EUROPE&apos;
            GROUP BY
                ps_partkey
        )
        SELECT
            s.s_acctbal,
            s.s_name,
            n.n_name,
            p.p_partkey,
            p.p_mfgr,
            s.s_address,
            s.s_phone,
            s.s_comment
        FROM
            tpch10.part p
        JOIN
            tpch10.partsupp ps ON p.p_partkey = ps.ps_partkey
        JOIN
            tpch10.supplier s ON s.s_suppkey = ps.ps_suppkey
        JOIN
            tpch10.nation n ON s.s_nationkey = n.n_nationkey
        JOIN
            tpch10.region r ON n.n_regionkey = r.r_regionkey
        JOIN
            MinSupplyCost msc ON ps.ps_partkey = msc.ps_partkey AND ps.ps_supplycost = msc.min_supplycost
        WHERE
            p.p_size = 15
            AND p.p_type LIKE &apos;%BRASS&apos;
            AND r.r_name = &apos;EUROPE&apos;
        ORDER BY
            s.s_acctbal DESC,
            n.n_name,
            s.s_name,
            p.p_partkey;
    </query>

    <!-- Q3 -->
    <query>
        SELECT
            l_orderkey,
            sum(l_extendedprice * (1 - l_discount)) AS revenue,
            o_orderdate,
            o_shippriority
        FROM
            tpch10.customer,
            tpch10.orders,
            tpch10.lineitem
        WHERE
            c_mktsegment = &apos;BUILDING&apos;
            AND c_custkey = o_custkey
            AND l_orderkey = o_orderkey
            AND o_orderdate &lt; DATE &apos;1995-03-15&apos;
            AND l_shipdate &gt; DATE &apos;1995-03-15&apos;
        GROUP BY
            l_orderkey,
            o_orderdate,
            o_shippriority
        ORDER BY
            revenue DESC,
            o_orderdate;
    </query>

    <!-- Q4, manually decorrelated version -->
    <query>
        WITH ValidLineItems AS (
            SELECT
                l_orderkey
            FROM
                tpch10.lineitem
            WHERE
                l_commitdate &lt; l_receiptdate
            GROUP BY
                l_orderkey
        )
        SELECT
            o.o_orderpriority,
            COUNT(*) AS order_count
        FROM
            tpch10.orders o
        JOIN
            ValidLineItems vli ON o.o_orderkey = vli.l_orderkey
        WHERE
            o.o_orderdate &gt;= DATE &apos;1993-07-01&apos;
            AND o.o_orderdate &lt; DATE &apos;1993-07-01&apos; + INTERVAL &apos;3&apos; MONTH
        GROUP BY
            o.o_orderpriority
        ORDER BY
            o.o_orderpriority;
    </query>

    <!-- Q5 -->
    <query>
        SELECT
            n_name,
            sum(l_extendedprice * (1 - l_discount)) AS revenue
        FROM
            tpch10.customer,
            tpch10.orders,
            tpch10.lineitem,
            tpch10.supplier,
            tpch10.nation,
            tpch10.region
        WHERE
            c_custkey = o_custkey
            AND l_orderkey = o_orderkey
            AND l_suppkey = s_suppkey
            AND c_nationkey = s_nationkey
            AND s_nationkey = n_nationkey
            AND n_regionkey = r_regionkey
            AND r_name = &apos;ASIA&apos;
            AND o_orderdate &gt;= DATE &apos;1994-01-01&apos;
            AND o_orderdate &lt; DATE &apos;1994-01-01&apos; + INTERVAL &apos;1&apos; year
        GROUP BY
            n_name
        ORDER BY
            revenue DESC;
    </query>

    <!-- Q6, with workaround for decimal addition bug -->
    <query>
        SELECT
            sum(l_extendedprice * l_discount) AS revenue
        FROM
            tpch10.lineitem
        WHERE
            l_shipdate &gt;= DATE &apos;1994-01-01&apos;
            AND l_shipdate &lt; DATE &apos;1994-01-01&apos; + INTERVAL &apos;1&apos; year
            AND l_discount BETWEEN 0.05 AND 0.07
            AND l_quantity &lt; 24;
    </query>

    <!-- Q7 -->
    <query>
        SELECT
            supp_nation,
            cust_nation,
            l_year,
            sum(volume) AS revenue
        FROM (
            SELECT
                n1.n_name AS supp_nation,
                n2.n_name AS cust_nation,
                extract(year FROM l_shipdate) AS l_year,
                l_extendedprice * (1 - l_discount) AS volume
            FROM
                tpch10.supplier,
                tpch10.lineitem,
                tpch10.orders,
                tpch10.customer,
                tpch10.nation n1,
                tpch10.nation n2
            WHERE
                s_suppkey = l_suppkey
                AND o_orderkey = l_orderkey
                AND c_custkey = o_custkey
                AND s_nationkey = n1.n_nationkey
                AND c_nationkey = n2.n_nationkey
                AND (
                    (n1.n_name = &apos;FRANCE&apos; AND n2.n_name = &apos;GERMANY&apos;)
                    OR (n1.n_name = &apos;GERMANY&apos; AND n2.n_name = &apos;FRANCE&apos;)
                )
                AND l_shipdate BETWEEN DATE &apos;1995-01-01&apos; AND DATE &apos;1996-12-31&apos;
            ) AS shipping
        GROUP BY
            supp_nation,
            cust_nation,
            l_year
        ORDER BY
            supp_nation,
            cust_nation,
            l_year;
    </query>

    <!-- Q8 -->
    <query>
        SELECT
            o_year,
            sum(CASE
                    WHEN nation = &apos;BRAZIL&apos;
                    THEN volume
                    ELSE 0
                END) / sum(volume) AS mkt_share
        FROM (
            SELECT
                extract(year FROM o_orderdate) AS o_year,
                l_extendedprice * (1 - l_discount) AS volume,
                n2.n_name AS nation
            FROM
                tpch10.part,
                tpch10.supplier,
                tpch10.lineitem,
                tpch10.orders,
                tpch10.customer,
                tpch10.nation n1,
                tpch10.nation n2,
                tpch10.region
            WHERE
                p_partkey = l_partkey
                AND s_suppkey = l_suppkey
                AND l_orderkey = o_orderkey
                AND o_custkey = c_custkey
                AND c_nationkey = n1.n_nationkey
                AND n1.n_regionkey = r_regionkey
                AND r_name = &apos;AMERICA&apos;
                AND s_nationkey = n2.n_nationkey
                AND o_orderdate BETWEEN DATE &apos;1995-01-01&apos; AND DATE &apos;1996-12-31&apos;
                AND p_type = &apos;ECONOMY ANODIZED STEEL&apos;
            ) AS all_nations
        GROUP BY
            o_year
        ORDER BY
            o_year;
    </query>

    <!-- Q9 -->
    <query>
        SELECT
            nation,
            o_year,
            sum(amount) AS sum_profit
        FROM (
            SELECT
                n_name AS nation,
                extract(year FROM o_orderdate) AS o_year,
                l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity AS amount
            FROM
                tpch10.part,
                tpch10.supplier,
                tpch10.lineitem,
                tpch10.partsupp,
                tpch10.orders,
                tpch10.nation
            WHERE
                s_suppkey = l_suppkey
                AND ps_suppkey = l_suppkey
                AND ps_partkey = l_partkey
                AND p_partkey = l_partkey
                AND o_orderkey = l_orderkey
                AND s_nationkey = n_nationkey
                AND p_name LIKE &apos;%green%&apos;
            ) AS profit
        GROUP BY
            nation,
            o_year
        ORDER BY
            nation,
            o_year DESC;
    </query>

    <!-- Q10 -->
    <query>
        SELECT
            c_custkey,
            c_name,
            sum(l_extendedprice * (1 - l_discount)) AS revenue,
            c_acctbal,
            n_name,
            c_address,
            c_phone,
            c_comment
        FROM
            tpch10.customer,
            tpch10.orders,
            tpch10.lineitem,
            tpch10.nation
        WHERE
            c_custkey = o_custkey
            AND l_orderkey = o_orderkey
            AND o_orderdate &gt;= DATE &apos;1993-10-01&apos;
            AND o_orderdate &lt; DATE &apos;1993-10-01&apos; + INTERVAL &apos;3&apos; MONTH
            AND l_returnflag = &apos;R&apos;
            AND c_nationkey = n_nationkey
        GROUP BY
            c_custkey,
            c_name,
            c_acctbal,
            c_phone,
            n_name,
            c_address,
            c_comment
        ORDER BY
            revenue DESC;
    </query>

    <!-- Q11 -->
    <query>
        SELECT
            ps_partkey,
            sum(ps_supplycost * ps_availqty) AS value
        FROM
            tpch10.partsupp,
            tpch10.supplier,
            tpch10.nation
        WHERE
            ps_suppkey = s_suppkey
            AND s_nationkey = n_nationkey
            AND n_name = &apos;GERMANY&apos;
        GROUP BY
            ps_partkey HAVING
                sum(ps_supplycost * ps_availqty) > (
                    SELECT
                        sum(ps_supplycost * ps_availqty) * 0.0001
                    FROM
                        tpch10.partsupp,
                        tpch10.supplier,
                        tpch10.nation
                    WHERE
                        ps_suppkey = s_suppkey
                        AND s_nationkey = n_nationkey
                        AND n_name = &apos;GERMANY&apos;
                )
        ORDER BY
            value DESC;
    </query>

    <!-- Q12 -->
    <query>
        SELECT
            l_shipmode,
            sum(CASE
                    WHEN o_orderpriority = &apos;1-URGENT&apos;
                        OR o_orderpriority = &apos;2-HIGH&apos;
                    THEN 1
                    ELSE 0
                END) AS high_line_count,
            sum(CASE
                WHEN o_orderpriority &lt;&gt; &apos;1-URGENT&apos;
                        AND o_orderpriority &lt;&gt; &apos;2-HIGH&apos;
                    THEN 1
                ELSE 0
                END) AS low_line_count
        FROM
            tpch10.orders,
            tpch10.lineitem
        WHERE
            o_orderkey = l_orderkey
            AND l_shipmode in (&apos;MAIL&apos;, &apos;SHIP&apos;)
            AND l_commitdate &lt; l_receiptdate
            AND l_shipdate &lt; l_commitdate
            AND l_receiptdate &gt;= DATE &apos;1994-01-01&apos;
            AND l_receiptdate &lt; DATE &apos;1994-01-01&apos; + INTERVAL &apos;1&apos; year
        GROUP BY
            l_shipmode
        ORDER BY
            l_shipmode;
    </query>

    <!-- Q13, manually decorrelated version-->
    <query>
        WITH CustomerOrderCounts AS (
            SELECT
                c.c_custkey,
                count(o.o_orderkey) AS order_count
            FROM
                tpch10.customer c
            LEFT OUTER JOIN
                tpch10.orders o ON c.c_custkey = o.o_custkey
                AND o.o_comment NOT LIKE &apos;%special%requests%&apos;
            GROUP BY
                c.c_custkey
        )
        SELECT
            order_count AS c_count,
            count(*) AS custdist
        FROM
            CustomerOrderCounts
        GROUP BY
            order_count
        ORDER BY
            custdist DESC,
            c_count DESC;
    </query>

    <!-- Q14 -->
    <query>
        SELECT
            100.00 * sum(CASE
                            WHEN p_type LIKE &apos;PROMO%&apos;
                            THEN l_extendedprice * (1 - l_discount)
                            ELSE 0
                        END) / sum(l_extendedprice * (1 - l_discount)) AS promo_revenue
        FROM
            tpch10.lineitem,
            tpch10.part
        WHERE
            l_partkey = p_partkey
            AND l_shipdate &gt;= DATE &apos;1995-09-01&apos;
            AND l_shipdate &lt; DATE &apos;1995-09-01&apos; + INTERVAL &apos;1&apos; MONTH;
    </query>

    <!-- Q15 -->
    <query>
        CREATE VIEW revenue0 (supplier_no, total_revenue) AS
            SELECT
                l_suppkey,
                sum(l_extendedprice * (1 - l_discount))
            FROM
                tpch10.lineitem
            WHERE
                l_shipdate &gt;= DATE &apos;1996-01-01&apos;
                AND l_shipdate &lt; DATE &apos;1996-01-01&apos; + INTERVAL &apos;3&apos; MONTH
            GROUP BY
                l_suppkey;

        SELECT
            s_suppkey,
            s_name,
            s_address,
            s_phone,
            total_revenue
        FROM
            tpch10.supplier,
            revenue0
        WHERE
            s_suppkey = supplier_no
            AND total_revenue = (
                SELECT
                    max(total_revenue)
                FROM
                    revenue0
            )
        ORDER BY
            s_suppkey;

        DROP VIEW revenue0;
    </query>

    <!-- Q16 -->
    <query>
        SELECT
            p_brand,
            p_type,
            p_size,
            count(distinct ps_suppkey) AS supplier_cnt
        FROM
            tpch10.partsupp,
            tpch10.part
        WHERE
            p_partkey = ps_partkey
            AND p_brand &lt;&gt; &apos;Brand#45&apos;
            AND p_type NOT LIKE &apos;MEDIUM POLISHED%&apos;
            AND p_size in (49, 14, 23,  45, 19, 3, 36, 9)
            AND ps_suppkey NOT in (
                SELECT
                    s_suppkey
                FROM
                    tpch10.supplier
                WHERE
                    s_comment LIKE &apos;%Customer%Complaints%&apos;
            )
        GROUP BY
            p_brand,
            p_type,
            p_size
        ORDER BY
            supplier_cnt DESC,
            p_brand,
            p_type,
            p_size;
    </query>

    <!-- Q17, manually decorrelated version -->
    <query>
        WITH AvgQuantity AS (
            SELECT
                l_partkey,
                AVG(l_quantity) * 0.2 AS avg_quantity
            FROM
                tpch10.lineitem
            GROUP BY
                l_partkey
        )
        SELECT
            SUM(l.l_extendedprice) / 7.0 AS avg_yearly
        FROM
            tpch10.lineitem l
        JOIN
            tpch10.part p ON p.p_partkey = l.l_partkey
        JOIN
            AvgQuantity aq ON l.l_partkey = aq.l_partkey
        WHERE
            p.p_brand = &apos;Brand#23&apos;
            AND p.p_container = &apos;MED BOX&apos;
            AND l.l_quantity &lt; aq.avg_quantity;
    </query>

    <!-- Q18 -->
    <query>
        SELECT
            c_name,
            c_custkey,
            o_orderkey,
            o_orderdate,
            o_totalprice,
            sum(l_quantity)
        FROM
            tpch10.customer,
            tpch10.orders,
            tpch10.lineitem
        WHERE
            o_orderkey in (
                SELECT
                    l_orderkey
                FROM
                    tpch10.lineitem
                GROUP BY
                    l_orderkey
                HAVING
                    sum(l_quantity) &gt; 300
            )
            AND c_custkey = o_custkey
            AND o_orderkey = l_orderkey
        GROUP BY
            c_name,
            c_custkey,
            o_orderkey,
            o_orderdate,
            o_totalprice
        ORDER BY
            o_totalprice DESC,
            o_orderdate;
    </query>

    <!-- Q19 -->
    <query>
        SELECT
            sum(l_extendedprice * (1 - l_discount)) AS revenue
        FROM
            tpch10.lineitem,
            tpch10.part
        WHERE
            (
                p_partkey = l_partkey
                AND p_brand = &apos;Brand#12&apos;
                AND p_container in (&apos;SM CASE&apos;, &apos;SM BOX&apos;, &apos;SM PACK&apos;, &apos;SM PKG&apos;)
                AND l_quantity &gt;= 1 AND l_quantity &lt;= 1 + 10
                AND p_size BETWEEN 1 AND 5
                AND l_shipmode in (&apos;AIR&apos;, &apos;AIR REG&apos;)
                AND l_shipinstruct = &apos;DELIVER IN PERSON&apos;
            )
            OR
            (
                p_partkey = l_partkey
                AND p_brand = &apos;Brand#23&apos;
                AND p_container in (&apos;MED BAG&apos;, &apos;MED BOX&apos;, &apos;MED PKG&apos;, &apos;MED PACK&apos;)
                AND l_quantity &gt;= 10 AND l_quantity &lt;= 10 + 10
                AND p_size BETWEEN 1 AND 10
                AND l_shipmode in (&apos;AIR&apos;, &apos;AIR REG&apos;)
                AND l_shipinstruct = &apos;DELIVER IN PERSON&apos;
            )
            OR
            (
                p_partkey = l_partkey
                AND p_brand = &apos;Brand#34&apos;
                AND p_container in (&apos;LG CASE&apos;, &apos;LG BOX&apos;, &apos;LG PACK&apos;, &apos;LG PKG&apos;)
                AND l_quantity &gt;= 20 AND l_quantity &lt;= 20 + 10
                AND p_size BETWEEN 1 AND 15
                AND l_shipmode in (&apos;AIR&apos;, &apos;AIR REG&apos;)
                AND l_shipinstruct = &apos;DELIVER IN PERSON&apos;
            );
    </query>

    <!-- Q20, n/a because of correlated subqueries -->
    <query>
        SELECT 1;
    </query>

    <!-- Q21, n/a because of correlated subqueries -->
    <query>
        SELECT 1;
    </query>

    <!-- Q22 -->
    <query>
        SELECT
            cntrycode,
            count(*) AS numcust,
            sum(c_acctbal) AS totacctbal
        FROM (
            SELECT
                substring(c_phone FROM 1 for 2) AS cntrycode,
                c_acctbal
            FROM
                tpch10.customer
            WHERE
                substring(c_phone FROM 1 for 2) in
                    (&apos;13&apos;, &apos;31&apos;, &apos;23&apos;, &apos;29&apos;, &apos;30&apos;, &apos;18&apos;, &apos;17&apos;)
                AND c_acctbal &gt; (
                    SELECT
                        avg(c_acctbal)
                    FROM
                        tpch10.customer
                    WHERE
                        c_acctbal &gt; 0.00
                        AND substring(c_phone FROM 1 for 2) in
                            (&apos;13&apos;, &apos;31&apos;, &apos;23&apos;, &apos;29&apos;, &apos;30&apos;, &apos;18&apos;, &apos;17&apos;)
                )
                AND NOT EXISTS (
                    SELECT
                        *
                    FROM
                        tpch10.orders
                    WHERE
                        o_custkey = c_custkey
                )
            ) AS custsale
        GROUP BY
            cntrycode
        ORDER BY
            cntrycode;
    </query>

</test>
