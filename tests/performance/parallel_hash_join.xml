<test>
    <settings>
        <max_threads>8</max_threads>
        <join_algorithm>parallel_hash</join_algorithm>
    </settings>
    <create_query>
        CREATE TABLE test_data_left (
            `id` UInt64,
            `x` UInt64,
            `y` UInt64,
            `z` UInt64,
            `w` String
        )ENGINE = Memory
    </create_query>

    <create_query>
        CREATE TABLE test_data_right (
            `id` UInt64,
            `x` UInt64,
            `y` UInt64,
            `z` UInt64,
            `w` String
        )ENGINE = Memory
    </create_query>
    <fill_query>
        insert into test_data_left select number as id, number % 1111 as x, number * 3 as y, number - 100 as z, cast(number as String) as w from numbers(10000000);
    </fill_query>
    <fill_query>
        insert into test_data_right select number as id, number % 1311 as x, number * 5 as y, number + 100 as z, cast(number as String) as w from numbers(10000000);    </fill_query>
    <!-- could test the performance of column scatter -->
    <query>
        SELECT
            t1.id,
            t1.x,
            t1.y,
            t2.id,
            t2.x,
            t2.y
        FROM test_data_left AS t1
        INNER JOIN test_data_right AS t2
        ON t1.id = t2.id
        FORMAT `Null`
    </query>

    <query>
        SELECT
            t1.id,
            t1.x,
            t1.y,
            t2.id,
            t2.x,
            t2.y
        FROM test_data_left AS t1
        LEFT JOIN test_data_right AS t2
        ON t1.id = t2.id
        FORMAT `Null`
    </query>
    
    <query>
        SELECT
            t1.id,
            t1.x,
            t1.y,
            t2.id,
            t2.x,
            t2.y
        FROM test_data_left AS t1
        RIGHT JOIN test_data_right AS t2
        ON t1.id = t2.id
        FORMAT `Null`
    </query>

    <drop_query> DROP TABLE test_data_right </drop_query>
    <drop_query> DROP TABLE test_data_left </drop_query>
</test>
