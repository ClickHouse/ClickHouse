<test>
    <substitutions>
       <substitution>
           <name>table_size</name>
           <values>
               <value>100000000</value>
           </values>
       </substitution>
    </substitutions>

    <settings>
        <join_algorithm>full_sorting_merge</join_algorithm>
    </settings>

    <create_query>
        CREATE TABLE t1 (x UInt64, y UInt64) ENGINE = MergeTree ORDER BY y
        AS SELECT
            sipHash64(number, 't1_x') % {table_size} AS x,
            sipHash64(number, 't1_y') % {table_size} AS y
        FROM numbers({table_size})
    </create_query>

    <create_query>
        CREATE TABLE t2 (x UInt64, y UInt64) ENGINE = MergeTree ORDER BY y
        AS SELECT
            sipHash64(number, 't2_x') % {table_size} AS x,
            sipHash64(number, 't2_y') % {table_size} AS y
        FROM numbers({table_size})
    </create_query>

    <query>SELECT * FROM t1 JOIN t2 ON t1.x = t2.x WHERE less(t1.y, 10000)</query>
    <query>SELECT * FROM t2 JOIN t1 ON t1.x = t2.x WHERE less(t1.y, 10000)</query>

    <query>SELECT * FROM t1 JOIN t2 ON t1.x = t2.x WHERE greater(t1.y, {table_size} - 10000)</query>
    <query>SELECT * FROM t2 JOIN t1 ON t1.x = t2.x WHERE greater(t1.y, {table_size} - 10000)</query>

    <query>SELECT * FROM t1 JOIN t2 ON t1.x = t2.x WHERE t1.y % 100 = 0</query>
    <query>SELECT * FROM t2 JOIN t1 ON t1.x = t2.x WHERE t1.y % 100 = 0</query>

    <query>SELECT * FROM t1 JOIN t2 ON t1.x = t2.x WHERE t1.y % 1000 = 0</query>
    <query>SELECT * FROM t2 JOIN t1 ON t1.x = t2.x WHERE t1.y % 1000 = 0</query>

    <drop_query>DROP TABLE IF EXISTS t1</drop_query>
    <drop_query>DROP TABLE IF EXISTS t2</drop_query>
</test>
