<test>

    <settings>
        <input_format_values_accurate_types_of_literals>1</input_format_values_accurate_types_of_literals>
    </settings>
    <!--
    Generate test_all_expr_matches.values:
    SELECT * FROM test.hits LIMIT 100000 INTO OUTFILE '/path/to/data/user_files/test_all_expr_matches.values' FORMAT Template SETTINGS format_schema_rows = '(toStartOfInterval(CAST(${EventTime:Quoted} AS DateTime), INTERVAL 10 minute), intHash32(${UserID:Quoted}), lower(replaceRegexpAll(${Title:Quoted}, \'[^\\\\w\\\\p{Cyrillic}]+\', \' \')), ${WindowClientWidth:Quoted} * ${WindowClientHeight:Quoted}, if(${FlashMajor:Quoted} == 0, NULL,  format(\'{0}.{1}.{2}\', toString(${FlashMajor:Quoted}), toString(${FlashMinor:Quoted}), ${FlashMinor2:Quoted})), arraySort(${`ParsedParams.Key1`:Quoted}))', format_schema_rows_between_delimiter = ',\n'

    Generate test_some_expr_matches.values:
    SELECT DOMInteractiveTiming, NSToDOMContentLoadedTiming, RefererCategories, URLCategories, arrayMap(x -> x * 0.5, RefererRegions) AS arf from test.hits LIMIT 10000 INTO OUTFILE '/path/to/data/user_files/test_some_expr_matches.values' FORMAT Template SETTINGS format_schema_rows = '(${DOMInteractiveTiming:Quoted} * ${NSToDOMContentLoadedTiming:Quoted}, arraySort(arrayConcat(${RefererCategories:Quoted}, ${URLCategories:Quoted})), arrayMap(x -> toString(x), ${arf:Quoted}))', format_schema_rows_between_delimiter = ',\n'
    -->


    <preconditions>
        <table_exists>file('test_all_expr_matches.values', Values, 'd DateTime, i UInt32, s String, ni Nullable(UInt64), ns Nullable(String), ars Array(String)')</table_exists>
        <table_exists>file('test_some_expr_matches.values', Values, 'i Int64, ari Array(Int64), ars Array(String)')</table_exists>
    </preconditions>

    <query>select * from file('test_all_expr_matches.values', Values, 'd DateTime, i UInt32, s String, ni Nullable(UInt64), ns Nullable(String), ars Array(String)')</query>
    <query>select * from file('test_some_expr_matches.values', Values, 'i Int64, ari Array(Int64), ars Array(String)')</query>

</test>
