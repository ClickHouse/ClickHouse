Using queries from 'queries' directory
Connecting to ClickHouse server... OK
Connected to server 24.7.1.1 @ cc02ebca751aa3f253e46832b1be3e16face9c37 multi_auth_methods
Found 3111 parallel tests and 272 sequential tests
Running about 156 stateless tests (Process-11).
00916_create_or_replace_view:                                           [ OK ] 0.22 sec.
Running about 156 stateless tests (Process-8).
01517_select_final_distributed:                                         [ FAIL ] 0.27 sec.
Reason: return code:  23
[arthur] 2024.07.15 10:05:19.255083 [ 3188177 ] {f5d1d061-1c2c-4388-bf3f-7588386951a5} <Error> executeQuery: Code: 279. DB::Exception: All connection tries failed. Log: 

Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)

: While executing Remote. (ALL_CONNECTION_TRIES_FAILED) (version 24.7.1.1) (from 127.0.0.1:40596) (comment: 01517_select_final_distributed.sql) (in query: SELECT Id, Timestamp FROM remote('localhost,127.0.0.1,127.0.0.2',currentDatabase(),'test5346') FINAL ORDER BY Timestamp;), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::NetException::NetException<String&>(int, FormatStringHelperImpl<std::type_identity<String&>::type>, String&) @ 0x0000000011de0b83
3. /home/arthur/ClickHouse/src/Client/HedgedConnectionsFactory.cpp:0: DB::HedgedConnectionsFactory::getManyConnections(DB::PoolMode, std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>) @ 0x00000000124aa1a2
4. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x00000000124a25f9
5. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x000000001064f5cd
6. /home/arthur/ClickHouse/src/QueryPipeline/RemoteQueryExecutor.cpp:213: std::unique_ptr<DB::IConnections, std::default_delete<DB::IConnections>> std::__function::__policy_invoker<std::unique_ptr<DB::IConnections, std::default_delete<DB::IConnections>> (std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>)>::__call_impl<std::__function::__default_alloc_func<DB::RemoteQueryExecutor::RemoteQueryExecutor(std::shared_ptr<DB::ConnectionPoolWithFailover> const&, String const&, DB::Block const&, std::shared_ptr<DB::Context const>, std::shared_ptr<DB::Throttler> const&, std::map<String, DB::Block, std::less<String>, std::allocator<std::pair<String const, DB::Block>>> const&, std::map<String, std::shared_ptr<DB::IStorage>, std::less<String>, std::allocator<std::pair<String const, std::shared_ptr<DB::IStorage>>>> const&, DB::QueryProcessingStage::Enum, std::optional<DB::RemoteQueryExecutor::Extension>, std::function<Priority (unsigned long)>)::$_0, std::unique_ptr<DB::IConnections, std::default_delete<DB::IConnections>> (std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>)>>(std::__function::__policy_storage const*, std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>&&) @ 0x00000000106499b9
7. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::RemoteQueryExecutor::sendQueryUnlocked(DB::ClientInfo::QueryKind, std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>) @ 0x0000000010642fb6
8. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x0000000010651cc3
9. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x0000000010651552
10. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x000000001065139a
11. /home/arthur/ClickHouse/contrib/boost/boost/context/fiber_fcontext.hpp:0: void boost::context::detail::fiber_entry<boost::context::detail::fiber_record<boost::context::fiber, FiberStack&, Fiber::RoutineImpl<DB::AsyncTaskExecutor::Routine>>>(boost::context::detail::transfer_t) @ 0x00000000106510e1

Received exception from server (version 24.7.1):
Code: 279. DB::Exception: Received from localhost:9000. DB::Exception: All connection tries failed. Log: 

Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)

: While executing Remote. (ALL_CONNECTION_TRIES_FAILED)
(query: SELECT Id, Timestamp 
FROM remote('localhost,127.0.0.1,127.0.0.2',currentDatabase(),'test5346') FINAL 
ORDER BY Timestamp;)
, result:



stdout:


Settings used in the test: --max_insert_threads 2 --group_by_two_level_threshold 309975 --group_by_two_level_threshold_bytes 9900936 --distributed_aggregation_memory_efficient 0 --fsync_metadata 1 --output_format_parallel_formatting 0 --input_format_parallel_parsing 0 --min_chunk_bytes_for_parallel_parsing 12293552 --max_read_buffer_size 903149 --prefer_localhost_replica 0 --max_block_size 37198 --max_joined_block_size_rows 62031 --max_threads 3 --optimize_append_index 0 --optimize_if_chain_to_multiif 0 --optimize_if_transform_strings_to_enum 1 --optimize_read_in_order 0 --optimize_or_like_chain 1 --optimize_substitute_columns 1 --enable_multiple_prewhere_read_steps 0 --read_in_order_two_level_merge_threshold 13 --optimize_aggregation_in_order 0 --aggregation_in_order_max_block_bytes 40147604 --use_uncompressed_cache 1 --min_bytes_to_use_direct_io 8009344202 --min_bytes_to_use_mmap_io 10737418240 --local_filesystem_read_method read --remote_filesystem_read_method read --local_filesystem_read_prefetch 0 --filesystem_cache_segments_batch_size 10 --read_from_filesystem_cache_if_exists_otherwise_bypass_cache 1 --throw_on_error_from_cache_on_write_operations 1 --remote_filesystem_read_prefetch 0 --allow_prefetched_read_pool_for_remote_filesystem 0 --filesystem_prefetch_max_memory_usage 64Mi --filesystem_prefetches_limit 0 --filesystem_prefetch_min_bytes_for_single_read_task 1Mi --filesystem_prefetch_step_marks 50 --filesystem_prefetch_step_bytes 100Mi --compile_aggregate_expressions 1 --compile_sort_description 1 --merge_tree_coarse_index_granularity 6 --optimize_distinct_in_order 1 --max_bytes_before_external_sort 10737418240 --max_bytes_before_external_group_by 10737418240 --max_bytes_before_remerge_sort 1863658550 --min_compress_block_size 1791190 --max_compress_block_size 2512280 --merge_tree_compact_parts_min_granules_to_multibuffer_read 118 --optimize_sorting_by_input_stream_properties 0 --http_response_buffer_size 3853484 --http_wait_end_of_query True --enable_memory_bound_merging_of_aggregation_results 1 --min_count_to_compile_expression 0 --min_count_to_compile_aggregate_expression 3 --min_count_to_compile_sort_description 3 --session_timezone America/Hermosillo --prefer_warmed_unmerged_parts_seconds 2 --use_page_cache_for_disks_without_file_cache True --page_cache_inject_eviction True --merge_tree_read_split_ranges_into_intersecting_and_non_intersecting_injection_probability 0.66 --prefer_external_sort_block_bytes 1 --cross_join_min_rows_to_compress 100000000 --cross_join_min_bytes_to_compress 1 --min_external_table_block_size_bytes 0 --max_parsing_threads 0

MergeTree settings used in test: --ratio_of_defaults_for_sparse_serialization 0.0 --prefer_fetch_merged_part_size_threshold 10737418240 --vertical_merge_algorithm_min_rows_to_activate 681209 --vertical_merge_algorithm_min_columns_to_activate 1 --allow_vertical_merges_from_compact_to_wide_parts 1 --min_merge_bytes_to_use_direct_io 1 --index_granularity_bytes 30950389 --merge_max_block_size 6327 --index_granularity 2959 --min_bytes_for_wide_part 255515734 --compress_marks 0 --compress_primary_key 0 --marks_compress_block_size 12569 --primary_key_compress_block_size 75446 --replace_long_file_name_to_hash 0 --max_file_name_length 128 --min_bytes_for_full_part_storage 0 --compact_parts_max_bytes_to_buffer 227589036 --compact_parts_max_granules_to_buffer 253 --compact_parts_merge_max_bytes_to_prefetch_part 20930484 --cache_populated_by_fetch 1 --concurrent_part_removal_threshold 67 --old_parts_lifetime 266

Database: test_73exiv97
Running about 156 stateless tests (Process-4).
02816_s2_invalid_point:                                                 [ OK ] 0.28 sec.
Running about 156 stateless tests (Process-7).
00979_quantileExcatExclusive_and_Inclusive:                             [ OK ] 0.27 sec.
Running about 156 stateless tests (Process-10).
02589_bson_invalid_document_size:                                       [ OK ] 0.27 sec.
Running about 156 stateless tests (Process-13).
01905_to_json_string:                                                   [ OK ] 0.28 sec.
Running about 156 stateless tests (Process-20).
00647_histogram_negative:                                               [ OK ] 0.27 sec.
Running about 156 stateless tests (Process-21).
02587_csv_big_numbers_inference:                                        [ OK ] 0.28 sec.
Running about 156 stateless tests (Process-2).
00035_function_array_return_type:                                       [ OK ] 0.32 sec.
Running about 156 stateless tests (Process-3).
01050_clickhouse_dict_source_with_subquery:                             [ OK ] 0.33 sec.
Running about 156 stateless tests (Process-6).
02459_group_by_all:                                                     [ OK ] 0.33 sec.
Running about 156 stateless tests (Process-16).
01692_DateTime64_from_DateTime:                                         [ OK ] 0.32 sec.
Running about 156 stateless tests (Process-18).
01213_point_in_Myanmar:                                                 [ OK ] 0.32 sec.
Running about 156 stateless tests (Process-19).
01582_deterministic_function_with_predicate:                            [ OK ] 0.32 sec.
Running about 156 stateless tests (Process-15).
03101_analyzer_identifiers_2:                                           [ OK ] 0.37 sec.
02123_MySQLWire_regression:                                             [ OK ] 0.22 sec.
02354_tuple_lowcardinality:                                             [ OK ] 0.27 sec.
02515_generate_ulid:                                                    [ OK ] 0.27 sec.
00187_like_regexp_prefix:                                               [ OK ] 0.27 sec.
00958_format_of_tuple_array_element:                                    [ OK ] 0.27 sec.
01710_aggregate_projection_with_normalized_states:                      [ FAIL ] 0.27 sec.
Reason: return code:  23
[arthur] 2024.07.15 10:05:19.594076 [ 3167752 ] {8d2d497c-1572-4faf-950b-7e82ed78df19} <Error> executeQuery: Code: 279. DB::Exception: All connection tries failed. Log: 

Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)

: While executing Remote. (ALL_CONNECTION_TRIES_FAILED) (version 24.7.1.1) (from 127.0.0.1:40854) (comment: 01710_aggregate_projection_with_normalized_states.sql) (in query: SELECT ifNotFinite(quantilesTimingMerge(0.95)(q)[1],0) as d1, ifNotFinite(quantilesTimingMerge(0.99)(q)[1],0) as d2, ifNotFinite(quantilesTimingMerge(0.50)(q)[1],0) as d3, sum(s) FROM cluster('test_cluster_two_shards', currentDatabase(), r) WHERE a = 'x' settings prefer_localhost_replica=0;), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::NetException::NetException<String&>(int, FormatStringHelperImpl<std::type_identity<String&>::type>, String&) @ 0x0000000011de0b83
3. /home/arthur/ClickHouse/src/Client/HedgedConnectionsFactory.cpp:0: DB::HedgedConnectionsFactory::getManyConnections(DB::PoolMode, std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>) @ 0x00000000124aa1a2
4. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x00000000124a25f9
5. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x000000001064f5cd
6. /home/arthur/ClickHouse/src/QueryPipeline/RemoteQueryExecutor.cpp:213: std::unique_ptr<DB::IConnections, std::default_delete<DB::IConnections>> std::__function::__policy_invoker<std::unique_ptr<DB::IConnections, std::default_delete<DB::IConnections>> (std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>)>::__call_impl<std::__function::__default_alloc_func<DB::RemoteQueryExecutor::RemoteQueryExecutor(std::shared_ptr<DB::ConnectionPoolWithFailover> const&, String const&, DB::Block const&, std::shared_ptr<DB::Context const>, std::shared_ptr<DB::Throttler> const&, std::map<String, DB::Block, std::less<String>, std::allocator<std::pair<String const, DB::Block>>> const&, std::map<String, std::shared_ptr<DB::IStorage>, std::less<String>, std::allocator<std::pair<String const, std::shared_ptr<DB::IStorage>>>> const&, DB::QueryProcessingStage::Enum, std::optional<DB::RemoteQueryExecutor::Extension>, std::function<Priority (unsigned long)>)::$_0, std::unique_ptr<DB::IConnections, std::default_delete<DB::IConnections>> (std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>)>>(std::__function::__policy_storage const*, std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>&&) @ 0x00000000106499b9
7. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::RemoteQueryExecutor::sendQueryUnlocked(DB::ClientInfo::QueryKind, std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>) @ 0x0000000010642fb6
8. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x0000000010651cc3
9. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x0000000010651552
10. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x000000001065139a
11. /home/arthur/ClickHouse/contrib/boost/boost/context/fiber_fcontext.hpp:0: void boost::context::detail::fiber_entry<boost::context::detail::fiber_record<boost::context::fiber, FiberStack&, Fiber::RoutineImpl<DB::AsyncTaskExecutor::Routine>>>(boost::context::detail::transfer_t) @ 0x00000000106510e1

Received exception from server (version 24.7.1):
Code: 279. DB::Exception: Received from localhost:9000. DB::Exception: All connection tries failed. Log: 

Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)

: While executing Remote. (ALL_CONNECTION_TRIES_FAILED)
(query: SELECT
       ifNotFinite(quantilesTimingMerge(0.95)(q)[1],0) as d1,
       ifNotFinite(quantilesTimingMerge(0.99)(q)[1],0) as d2,
       ifNotFinite(quantilesTimingMerge(0.50)(q)[1],0) as d3,
       sum(s)
FROM cluster('test_cluster_two_shards', currentDatabase(), r)
WHERE a = 'x'
settings prefer_localhost_replica=0;)
, result:

3

stdout:
3


Settings used in the test: --max_insert_threads 2 --group_by_two_level_threshold 411133 --group_by_two_level_threshold_bytes 50000000 --distributed_aggregation_memory_efficient 0 --fsync_metadata 0 --output_format_parallel_formatting 1 --input_format_parallel_parsing 1 --min_chunk_bytes_for_parallel_parsing 1024 --max_read_buffer_size 788591 --prefer_localhost_replica 1 --max_block_size 67330 --max_joined_block_size_rows 46411 --max_threads 1 --optimize_append_index 1 --optimize_if_chain_to_multiif 0 --optimize_if_transform_strings_to_enum 1 --optimize_read_in_order 0 --optimize_or_like_chain 0 --optimize_substitute_columns 0 --enable_multiple_prewhere_read_steps 0 --read_in_order_two_level_merge_threshold 57 --optimize_aggregation_in_order 0 --aggregation_in_order_max_block_bytes 13088495 --use_uncompressed_cache 0 --min_bytes_to_use_direct_io 10737418240 --min_bytes_to_use_mmap_io 10737418240 --local_filesystem_read_method pread --remote_filesystem_read_method read --local_filesystem_read_prefetch 1 --filesystem_cache_segments_batch_size 3 --read_from_filesystem_cache_if_exists_otherwise_bypass_cache 0 --throw_on_error_from_cache_on_write_operations 0 --remote_filesystem_read_prefetch 1 --allow_prefetched_read_pool_for_remote_filesystem 0 --filesystem_prefetch_max_memory_usage 32Mi --filesystem_prefetches_limit 0 --filesystem_prefetch_min_bytes_for_single_read_task 16Mi --filesystem_prefetch_step_marks 50 --filesystem_prefetch_step_bytes 0 --compile_aggregate_expressions 1 --compile_sort_description 0 --merge_tree_coarse_index_granularity 21 --optimize_distinct_in_order 0 --max_bytes_before_external_sort 10737418240 --max_bytes_before_external_group_by 4288918122 --max_bytes_before_remerge_sort 1180911231 --min_compress_block_size 1964738 --max_compress_block_size 740863 --merge_tree_compact_parts_min_granules_to_multibuffer_read 123 --optimize_sorting_by_input_stream_properties 1 --http_response_buffer_size 1487945 --http_wait_end_of_query True --enable_memory_bound_merging_of_aggregation_results 1 --min_count_to_compile_expression 0 --min_count_to_compile_aggregate_expression 0 --min_count_to_compile_sort_description 0 --session_timezone America/Hermosillo --prefer_warmed_unmerged_parts_seconds 1 --use_page_cache_for_disks_without_file_cache False --page_cache_inject_eviction True --merge_tree_read_split_ranges_into_intersecting_and_non_intersecting_injection_probability 0.06 --prefer_external_sort_block_bytes 100000000 --cross_join_min_rows_to_compress 100000000 --cross_join_min_bytes_to_compress 1 --min_external_table_block_size_bytes 1 --max_parsing_threads 1

MergeTree settings used in test: --ratio_of_defaults_for_sparse_serialization 1.0 --prefer_fetch_merged_part_size_threshold 9317821188 --vertical_merge_algorithm_min_rows_to_activate 1 --vertical_merge_algorithm_min_columns_to_activate 100 --allow_vertical_merges_from_compact_to_wide_parts 0 --min_merge_bytes_to_use_direct_io 7370354332 --index_granularity_bytes 15578306 --merge_max_block_size 5478 --index_granularity 27111 --min_bytes_for_wide_part 785544571 --compress_marks 0 --compress_primary_key 1 --marks_compress_block_size 16941 --primary_key_compress_block_size 38652 --replace_long_file_name_to_hash 1 --max_file_name_length 0 --min_bytes_for_full_part_storage 136161484 --compact_parts_max_bytes_to_buffer 480961637 --compact_parts_max_granules_to_buffer 109 --compact_parts_merge_max_bytes_to_prefetch_part 6175737 --cache_populated_by_fetch 1 --concurrent_part_removal_threshold 36 --old_parts_lifetime 460

Database: test_c1l8obm6
00541_to_start_of_fifteen_minutes:                                      [ OK ] 0.27 sec.
01698_fix_toMinute:                                                     [ OK ] 0.37 sec.
02499_read_json_objects_as_strings:                                     [ OK ] 0.27 sec.
02735_asof_join_right_null:                                             [ OK ] 0.32 sec.
00405_pretty_formats:                                                   [ OK ] 0.37 sec.
02478_factorial:                                                        [ OK ] 0.42 sec.
02943_use_full_text_skip_index_with_has_any:                            [ OK ] 0.37 sec.
00753_system_columns_and_system_tables_long:                            [ OK ] 0.52 sec.
03008_groupSortedArray_field:                                           [ OK ] 0.27 sec.
02552_inner_join_with_where_true:                                       [ OK ] 0.27 sec.
02920_fix_json_merge_patch:                                             [ OK ] 0.27 sec.
00534_functions_bad_arguments10:                                        [ SKIPPED ] 0.00 sec.
Reason: not running for current build 
02878_use_structure_from_insertion_table_with_explicit_insert_columns:  [ OK ] 0.52 sec.
02035_isNull_isNotNull_format:                                          [ FAIL ] 0.32 sec.
Reason: return code:  7
[arthur] 2024.07.15 19:05:19.937016 [ 3188203 ] {ad94d2d5-a31c-46c9-8a18-3c43f20dc2ea} <Error> executeQuery: Code: 519. DB::NetException: All attempts to get table structure failed. Log: 

Code: 279. DB::NetException: All connection tries failed. Log: 

Code: 210. DB::NetException: Connection refused (127.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.2:9000). (NETWORK_ERROR) (version 24.7.1.1)

. (ALL_CONNECTION_TRIES_FAILED) (version 24.7.1.1)

: While processing SELECT (1 IS NOT NULL) + (2 IS NOT NULL) FROM remote('127.2', 'system.one'). (NO_REMOTE_SHARD_AVAILABLE) (version 24.7.1.1) (from 127.0.0.1:40962) (comment: 02035_isNull_isNotNull_format.sql) (in query: explain syntax select isNotNull(1)+isNotNull(2) from remote('127.2', system.one);), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::NetException::NetException<String&>(int, FormatStringHelperImpl<std::type_identity<String&>::type>, String&) @ 0x0000000011de0b83
3. /home/arthur/ClickHouse/src/Storages/getStructureOfRemoteTable.cpp:170: DB::getStructureOfRemoteTable(DB::Cluster const&, DB::StorageID const&, std::shared_ptr<DB::Context const>, std::shared_ptr<DB::IAST> const&) @ 0x0000000011ddf0ba
4. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::TableFunctionRemote::getActualTableStructure(std::shared_ptr<DB::Context const>, bool) const @ 0x000000000fd0634b
5. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__utility/swap.h:35: DB::TableFunctionRemote::executeImpl(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const>, String const&, DB::ColumnsDescription, bool) const @ 0x000000000fd05520
6. /home/arthur/ClickHouse/src/TableFunctions/ITableFunction.cpp:37: DB::ITableFunction::execute(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const>, String const&, DB::ColumnsDescription, bool, bool) const @ 0x000000000ff53f37
7. /home/arthur/ClickHouse/src/Interpreters/Context.cpp:0: DB::Context::executeTableFunction(std::shared_ptr<DB::IAST> const&, DB::ASTSelectQuery const*) @ 0x0000000010a308cc
8. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::JoinedTables::getLeftTableStorage() @ 0x000000001109aa2d
9. /home/arthur/ClickHouse/src/Interpreters/InterpreterSelectQuery.cpp:0: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context> const&, std::optional<DB::Pipe>, std::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::vector<String, std::allocator<String>> const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::shared_ptr<DB::PreparedSets>) @ 0x0000000010fd1ba1
10. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:260: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::Pipe>, std::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::vector<String, std::allocator<String>> const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::shared_ptr<DB::PreparedSets>) @ 0x0000000010fd126c
11. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const> const&, DB::SelectQueryOptions const&, std::vector<String, std::allocator<String>> const&) @ 0x0000000010fd0fd1
12. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::InDepthNodeVisitor<DB::(anonymous namespace)::ExplainAnalyzedSyntaxMatcher, true, false, std::shared_ptr<DB::IAST>>::doVisit(std::shared_ptr<DB::IAST>&) @ 0x0000000010ec69e6
13. /home/arthur/ClickHouse/src/Interpreters/InDepthNodeVisitor.h:64: void DB::InDepthNodeVisitor<DB::(anonymous namespace)::ExplainAnalyzedSyntaxMatcher, true, false, std::shared_ptr<DB::IAST>>::visitChildren<false>(std::shared_ptr<DB::IAST>&) @ 0x0000000010ec6c90
14. /home/arthur/ClickHouse/src/Interpreters/InDepthNodeVisitor.h:0: void DB::InDepthNodeVisitor<DB::(anonymous namespace)::ExplainAnalyzedSyntaxMatcher, true, false, std::shared_ptr<DB::IAST>>::visitChildren<false>(std::shared_ptr<DB::IAST>&) @ 0x0000000010ec6c9b
15. /home/arthur/ClickHouse/src/Interpreters/InDepthNodeVisitor.h:0: void DB::InDepthNodeVisitor<DB::(anonymous namespace)::ExplainAnalyzedSyntaxMatcher, true, false, std::shared_ptr<DB::IAST>>::visitChildren<false>(std::shared_ptr<DB::IAST>&) @ 0x0000000010ec6c9b
16. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:815: DB::InterpreterExplainQuery::executeImpl() @ 0x0000000010ec0a0b
17. /home/arthur/ClickHouse/src/Interpreters/InterpreterExplainQuery.cpp:0: DB::InterpreterExplainQuery::execute() @ 0x0000000010ebebc7
18. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
19. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
20. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
21. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
22. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
23. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
24. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
25. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
26. ? @ 0x00007d28d949ca94
27. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 519. DB::Exception: Received from localhost:9000. DB::NetException. DB::NetException: All attempts to get table structure failed. Log: 

Code: 279. DB::NetException: All connection tries failed. Log: 

Code: 210. DB::NetException: Connection refused (127.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.2:9000). (NETWORK_ERROR) (version 24.7.1.1)

. (ALL_CONNECTION_TRIES_FAILED) (version 24.7.1.1)

: While processing SELECT (1 IS NOT NULL) + (2 IS NOT NULL) FROM remote('127.2', 'system.one'). (NO_REMOTE_SHARD_AVAILABLE)
(query: explain syntax select isNotNull(1)+isNotNull(2) from remote('127.2', system.one);)
, result:

-- { echo }
explain syntax select null is null;
SELECT NULL IS NULL
explain syntax select null is not null;
SELECT NULL IS NOT NULL
explain syntax select isNull(null);
SELECT NULL IS NULL
explain syntax select isNotNull(null);
SELECT NULL IS NOT NULL
explain syntax select isNotNull(1)+isNotNull(2) from remote('127.2', system.one);

stdout:
-- { echo }
explain syntax select null is null;
SELECT NULL IS NULL
explain syntax select null is not null;
SELECT NULL IS NOT NULL
explain syntax select isNull(null);
SELECT NULL IS NULL
explain syntax select isNotNull(null);
SELECT NULL IS NOT NULL
explain syntax select isNotNull(1)+isNotNull(2) from remote('127.2', system.one);


Settings used in the test: --max_insert_threads 2 --group_by_two_level_threshold 906859 --group_by_two_level_threshold_bytes 50000000 --distributed_aggregation_memory_efficient 1 --fsync_metadata 1 --output_format_parallel_formatting 0 --input_format_parallel_parsing 1 --min_chunk_bytes_for_parallel_parsing 8357305 --max_read_buffer_size 846492 --prefer_localhost_replica 1 --max_block_size 15544 --max_joined_block_size_rows 66889 --max_threads 3 --optimize_append_index 1 --optimize_if_chain_to_multiif 0 --optimize_if_transform_strings_to_enum 0 --optimize_read_in_order 1 --optimize_or_like_chain 1 --optimize_substitute_columns 0 --enable_multiple_prewhere_read_steps 1 --read_in_order_two_level_merge_threshold 7 --optimize_aggregation_in_order 1 --aggregation_in_order_max_block_bytes 4809901 --use_uncompressed_cache 1 --min_bytes_to_use_direct_io 1 --min_bytes_to_use_mmap_io 10737418240 --local_filesystem_read_method pread --remote_filesystem_read_method read --local_filesystem_read_prefetch 0 --filesystem_cache_segments_batch_size 10 --read_from_filesystem_cache_if_exists_otherwise_bypass_cache 1 --throw_on_error_from_cache_on_write_operations 0 --remote_filesystem_read_prefetch 1 --allow_prefetched_read_pool_for_remote_filesystem 0 --filesystem_prefetch_max_memory_usage 128Mi --filesystem_prefetches_limit 0 --filesystem_prefetch_min_bytes_for_single_read_task 16Mi --filesystem_prefetch_step_marks 50 --filesystem_prefetch_step_bytes 100Mi --compile_aggregate_expressions 0 --compile_sort_description 1 --merge_tree_coarse_index_granularity 15 --optimize_distinct_in_order 1 --max_bytes_before_external_sort 10737418240 --max_bytes_before_external_group_by 10737418240 --max_bytes_before_remerge_sort 2964138317 --min_compress_block_size 1116636 --max_compress_block_size 753369 --merge_tree_compact_parts_min_granules_to_multibuffer_read 32 --optimize_sorting_by_input_stream_properties 0 --http_response_buffer_size 5656363 --http_wait_end_of_query False --enable_memory_bound_merging_of_aggregation_results 1 --min_count_to_compile_expression 0 --min_count_to_compile_aggregate_expression 0 --min_count_to_compile_sort_description 3 --session_timezone Africa/Khartoum --prefer_warmed_unmerged_parts_seconds 0 --use_page_cache_for_disks_without_file_cache True --page_cache_inject_eviction False --merge_tree_read_split_ranges_into_intersecting_and_non_intersecting_injection_probability 0.06 --prefer_external_sort_block_bytes 0 --cross_join_min_rows_to_compress 0 --cross_join_min_bytes_to_compress 0 --min_external_table_block_size_bytes 1 --max_parsing_threads 0

MergeTree settings used in test: --ratio_of_defaults_for_sparse_serialization 0.6043347673038738 --prefer_fetch_merged_part_size_threshold 10737418240 --vertical_merge_algorithm_min_rows_to_activate 1 --vertical_merge_algorithm_min_columns_to_activate 100 --allow_vertical_merges_from_compact_to_wide_parts 1 --min_merge_bytes_to_use_direct_io 10737418240 --index_granularity_bytes 15265498 --merge_max_block_size 24166 --index_granularity 5989 --min_bytes_for_wide_part 183059476 --compress_marks 1 --compress_primary_key 0 --marks_compress_block_size 19851 --primary_key_compress_block_size 26429 --replace_long_file_name_to_hash 1 --max_file_name_length 2 --min_bytes_for_full_part_storage 308831567 --compact_parts_max_bytes_to_buffer 521852374 --compact_parts_max_granules_to_buffer 135 --compact_parts_merge_max_bytes_to_prefetch_part 22802335 --cache_populated_by_fetch 1 --concurrent_part_removal_threshold 68 --old_parts_lifetime 480

Database: test_ze1ivnpj
01070_h3_get_base_cell:                                                 [ OK ] 0.27 sec.
00974_distributed_join_on:                                              [ OK ] 0.42 sec.
01570_aggregator_combinator_simple_state:                               [ OK ] 0.37 sec.
02209_short_circuit_node_without_parents:                               [ OK ] 0.22 sec.
Running about 156 stateless tests (Process-5).
01753_system_zookeeper_query_param_path_long:                           [ OK ] 1.08 sec.
02296_ttl_non_deterministic:                                            [ OK ] 0.42 sec.
Running about 156 stateless tests (Process-12).
01710_minmax_count_projection:                                          [ OK ] 1.08 sec.
01640_marks_corruption_regression:                                      [ OK ] 0.27 sec.
02955_sparkBar_alias_sparkbar:                                          [ OK ] 0.22 sec.
Running about 156 stateless tests (Process-9).
00182_functions_higher_order_and_consts:                                [ OK ] 1.23 sec.
02892_SummingMergeTree_Nested:                                          [ OK ] 0.32 sec.
02021_h3_get_faces:                                                     [ OK ] 0.27 sec.
02271_int_sql_compatibility:                                            [ OK ] 0.22 sec.
02467_set_with_lowcardinality_type:                                     [ OK ] 0.32 sec.
01280_opencl_bitonic_order_by:                                          [ OK ] 0.32 sec.
02998_attach_partition_not_allowed_if_structure_differs_due_to_materialized_column: [ OK ] 0.32 sec.
02496_format_datetime_in_joda_syntax:                                   [ OK ] 0.82 sec.
01137_order_by_func_final:                                              [ OK ] 0.27 sec.
03088_analyzer_ambiguous_column_multi_call:                             [ OK ] 0.27 sec.
03011_definitive_guide_to_cast:                                         [ OK ] 0.97 sec.
00256_reverse:                                                          [ OK ] 0.32 sec.
03168_read_in_order_buffering_1:                                        [ OK ] 0.42 sec.
01066_bit_count:                                                        [ OK ] 0.33 sec.
01813_distributed_scalar_subqueries_alias:                              [ OK ] 0.32 sec.
02163_shard_num:                                                        [ FAIL ] 0.27 sec.
Reason: return code:  23
Received exception from server (version 24.7.1):
Code: 279. DB::Exception: Received from localhost:9000. DB::Exception: All connection tries failed. Log: 

Code: 210. DB::NetException: Connection refused (127.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.2:9000). (NETWORK_ERROR) (version 24.7.1.1)

: While executing Remote. (ALL_CONNECTION_TRIES_FAILED)
(query: -- { echoOn }

SELECT shardNum() AS shard_num, sum(1) as rows FROM remote('127.{1,2}', system, one) GROUP BY _shard_num ORDER BY _shard_num;)
, result:

-- { echoOn }

SELECT shardNum() AS shard_num, sum(1) as rows FROM remote('127.{1,2}', system, one) GROUP BY _shard_num ORDER BY _shard_num;

stdout:
-- { echoOn }

SELECT shardNum() AS shard_num, sum(1) as rows FROM remote('127.{1,2}', system, one) GROUP BY _shard_num ORDER BY _shard_num;


Settings used in the test: --max_insert_threads 1 --group_by_two_level_threshold 1000000 --group_by_two_level_threshold_bytes 1 --distributed_aggregation_memory_efficient 0 --fsync_metadata 0 --output_format_parallel_formatting 0 --input_format_parallel_parsing 1 --min_chunk_bytes_for_parallel_parsing 369580 --max_read_buffer_size 515484 --prefer_localhost_replica 0 --max_block_size 28762 --max_joined_block_size_rows 94127 --max_threads 1 --optimize_append_index 0 --optimize_if_chain_to_multiif 1 --optimize_if_transform_strings_to_enum 1 --optimize_read_in_order 0 --optimize_or_like_chain 0 --optimize_substitute_columns 1 --enable_multiple_prewhere_read_steps 0 --read_in_order_two_level_merge_threshold 16 --optimize_aggregation_in_order 1 --aggregation_in_order_max_block_bytes 8293900 --use_uncompressed_cache 0 --min_bytes_to_use_direct_io 10080780653 --min_bytes_to_use_mmap_io 7015793888 --local_filesystem_read_method io_uring --remote_filesystem_read_method read --local_filesystem_read_prefetch 1 --filesystem_cache_segments_batch_size 50 --read_from_filesystem_cache_if_exists_otherwise_bypass_cache 0 --throw_on_error_from_cache_on_write_operations 1 --remote_filesystem_read_prefetch 1 --allow_prefetched_read_pool_for_remote_filesystem 0 --filesystem_prefetch_max_memory_usage 32Mi --filesystem_prefetches_limit 0 --filesystem_prefetch_min_bytes_for_single_read_task 1Mi --filesystem_prefetch_step_marks 50 --filesystem_prefetch_step_bytes 0 --compile_aggregate_expressions 1 --compile_sort_description 1 --merge_tree_coarse_index_granularity 20 --optimize_distinct_in_order 0 --max_bytes_before_external_sort 10737418240 --max_bytes_before_external_group_by 0 --max_bytes_before_remerge_sort 1893980792 --min_compress_block_size 2913931 --max_compress_block_size 1775741 --merge_tree_compact_parts_min_granules_to_multibuffer_read 51 --optimize_sorting_by_input_stream_properties 1 --http_response_buffer_size 1061275 --http_wait_end_of_query True --enable_memory_bound_merging_of_aggregation_results 1 --min_count_to_compile_expression 0 --min_count_to_compile_aggregate_expression 0 --min_count_to_compile_sort_description 0 --session_timezone America/Hermosillo --prefer_warmed_unmerged_parts_seconds 1 --use_page_cache_for_disks_without_file_cache True --page_cache_inject_eviction True --merge_tree_read_split_ranges_into_intersecting_and_non_intersecting_injection_probability 0.73 --prefer_external_sort_block_bytes 100000000 --cross_join_min_rows_to_compress 1 --cross_join_min_bytes_to_compress 1 --min_external_table_block_size_bytes 0 --max_parsing_threads 0

MergeTree settings used in test: --ratio_of_defaults_for_sparse_serialization 0.0 --prefer_fetch_merged_part_size_threshold 3591033156 --vertical_merge_algorithm_min_rows_to_activate 502024 --vertical_merge_algorithm_min_columns_to_activate 49 --allow_vertical_merges_from_compact_to_wide_parts 0 --min_merge_bytes_to_use_direct_io 3796508787 --index_granularity_bytes 14882280 --merge_max_block_size 23425 --index_granularity 35922 --min_bytes_for_wide_part 0 --compress_marks 1 --compress_primary_key 1 --marks_compress_block_size 14029 --primary_key_compress_block_size 57217 --replace_long_file_name_to_hash 1 --max_file_name_length 69 --min_bytes_for_full_part_storage 0 --compact_parts_max_bytes_to_buffer 506861039 --compact_parts_max_granules_to_buffer 188 --compact_parts_merge_max_bytes_to_prefetch_part 15143521 --cache_populated_by_fetch 0 --concurrent_part_removal_threshold 0 --old_parts_lifetime 10

Database: test_k19bi220
02704_max_backup_bandwidth:                                             [ FAIL ] 1.18 sec.
Reason: having stderror:  
[arthur] 2024.07.15 14:05:20.063961 [ 3188203 ] {fbdahadfpf} <Error> BackupsWorker: Failed to make backup Disk('backups', 'test_h870f1za/data/backup1'): Code: 318. DB::Exception: The 'backups.allowed_disk' configuration parameter is not set, cannot use 'Disk' backup engine. (INVALID_CONFIG_PARAMETER), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000006b0210b
4. /home/arthur/ClickHouse/src/Backups/registerBackupEnginesFileAndDisk.cpp:34: std::shared_ptr<DB::IBackup> std::__function::__policy_invoker<std::shared_ptr<DB::IBackup> (DB::BackupFactory::CreateParams const&)>::__call_impl<std::__function::__default_alloc_func<DB::registerBackupEnginesFileAndDisk(DB::BackupFactory&)::$_0, std::shared_ptr<DB::IBackup> (DB::BackupFactory::CreateParams const&)>>(std::__function::__policy_storage const*, DB::BackupFactory::CreateParams const&) @ 0x00000000103ad8c9
5. /home/arthur/ClickHouse/src/Backups/BackupsWorker.cpp:0: DB::BackupsWorker::doBackup(std::shared_ptr<DB::IBackup>&, std::shared_ptr<DB::ASTBackupQuery> const&, String const&, String const&, DB::BackupInfo const&, DB::BackupSettings, std::shared_ptr<DB::IBackupCoordination>, std::shared_ptr<DB::Context const> const&, std::shared_ptr<DB::Context>) @ 0x0000000010323082
6. /home/arthur/ClickHouse/src/Backups/BackupsWorker.cpp:0: DB::BackupsWorker::startMakingBackup(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const> const&) @ 0x000000001031fac4
7. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::BackupsWorker::start(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context>) @ 0x000000001031f277
8. /home/arthur/ClickHouse/src/Interpreters/InterpreterBackupQuery.cpp:0: DB::InterpreterBackupQuery::execute() @ 0x00000000113668ac
9. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
10. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
11. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
12. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
13. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
14. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
15. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
16. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
17. ? @ 0x00007d28d949ca94
18. ? @ 0x00007d28d9529c3c
 (version 24.7.1.1)
[arthur] 2024.07.15 14:05:20.064205 [ 3188203 ] {fbdahadfpf} <Error> executeQuery: Code: 318. DB::Exception: The 'backups.allowed_disk' configuration parameter is not set, cannot use 'Disk' backup engine. (INVALID_CONFIG_PARAMETER) (version 24.7.1.1) (from 127.0.0.1:41068) (comment: 02704_max_backup_bandwidth.sh) (in query: backup table data to Disk('backups', 'test_h870f1za/data/backup1')), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000006b0210b
4. /home/arthur/ClickHouse/src/Backups/registerBackupEnginesFileAndDisk.cpp:34: std::shared_ptr<DB::IBackup> std::__function::__policy_invoker<std::shared_ptr<DB::IBackup> (DB::BackupFactory::CreateParams const&)>::__call_impl<std::__function::__default_alloc_func<DB::registerBackupEnginesFileAndDisk(DB::BackupFactory&)::$_0, std::shared_ptr<DB::IBackup> (DB::BackupFactory::CreateParams const&)>>(std::__function::__policy_storage const*, DB::BackupFactory::CreateParams const&) @ 0x00000000103ad8c9
5. /home/arthur/ClickHouse/src/Backups/BackupsWorker.cpp:0: DB::BackupsWorker::doBackup(std::shared_ptr<DB::IBackup>&, std::shared_ptr<DB::ASTBackupQuery> const&, String const&, String const&, DB::BackupInfo const&, DB::BackupSettings, std::shared_ptr<DB::IBackupCoordination>, std::shared_ptr<DB::Context const> const&, std::shared_ptr<DB::Context>) @ 0x0000000010323082
6. /home/arthur/ClickHouse/src/Backups/BackupsWorker.cpp:0: DB::BackupsWorker::startMakingBackup(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const> const&) @ 0x000000001031fac4
7. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::BackupsWorker::start(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context>) @ 0x000000001031f277
8. /home/arthur/ClickHouse/src/Interpreters/InterpreterBackupQuery.cpp:0: DB::InterpreterBackupQuery::execute() @ 0x00000000113668ac
9. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
10. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
11. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
12. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
13. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
14. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
15. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
16. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
17. ? @ 0x00007d28d949ca94
18. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 318. DB::Exception: Received from localhost:9000. DB::Exception: The 'backups.allowed_disk' configuration parameter is not set, cannot use 'Disk' backup engine. (INVALID_CONFIG_PARAMETER)
(query: backup table data to Disk('backups', 'test_h870f1za/data/backup1'))

stdout:
0	0


Database: test_h870f1za
00830_join_overwrite:                                                   [ OK ] 0.32 sec.
02416_json_object_inference:                                            [ OK ] 0.27 sec.
02096_date_time_1970_saturation2:                                       [ OK ] 0.37 sec.
01070_h3_hex_area_m2:                                                   [ OK ] 0.27 sec.
02984_topk_empty_merge:                                                 [ FAIL ] 0.28 sec.
Reason: return code:  23
[arthur] 2024.07.15 10:05:20.943600 [ 3188210 ] {abaae30e-2fe0-490d-af53-664bbf7a54ea} <Error> executeQuery: Code: 279. DB::Exception: All connection tries failed. Log: 

Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)

: While executing Remote. (ALL_CONNECTION_TRIES_FAILED) (version 24.7.1.1) (from 127.0.0.1:41568) (comment: 02984_topk_empty_merge.sql) (in query: -- https://github.com/ClickHouse/ClickHouse/issues/59107
 SELECT topK('102.4') FROM remote('127.0.0.{1,2}', view(SELECT NULL FROM system.one WHERE dummy = 1));), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::NetException::NetException<String&>(int, FormatStringHelperImpl<std::type_identity<String&>::type>, String&) @ 0x0000000011de0b83
3. /home/arthur/ClickHouse/src/Client/HedgedConnectionsFactory.cpp:0: DB::HedgedConnectionsFactory::getManyConnections(DB::PoolMode, std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>) @ 0x00000000124aa1a2
4. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x00000000124a25f9
5. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x000000001064f5cd
6. /home/arthur/ClickHouse/src/QueryPipeline/RemoteQueryExecutor.cpp:213: std::unique_ptr<DB::IConnections, std::default_delete<DB::IConnections>> std::__function::__policy_invoker<std::unique_ptr<DB::IConnections, std::default_delete<DB::IConnections>> (std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>)>::__call_impl<std::__function::__default_alloc_func<DB::RemoteQueryExecutor::RemoteQueryExecutor(std::shared_ptr<DB::ConnectionPoolWithFailover> const&, String const&, DB::Block const&, std::shared_ptr<DB::Context const>, std::shared_ptr<DB::Throttler> const&, std::map<String, DB::Block, std::less<String>, std::allocator<std::pair<String const, DB::Block>>> const&, std::map<String, std::shared_ptr<DB::IStorage>, std::less<String>, std::allocator<std::pair<String const, std::shared_ptr<DB::IStorage>>>> const&, DB::QueryProcessingStage::Enum, std::optional<DB::RemoteQueryExecutor::Extension>, std::function<Priority (unsigned long)>)::$_0, std::unique_ptr<DB::IConnections, std::default_delete<DB::IConnections>> (std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>)>>(std::__function::__policy_storage const*, std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>&&) @ 0x00000000106499b9
7. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::RemoteQueryExecutor::sendQueryUnlocked(DB::ClientInfo::QueryKind, std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>) @ 0x0000000010642fb6
8. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x0000000010651cc3
9. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x0000000010651552
10. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x000000001065139a
11. /home/arthur/ClickHouse/contrib/boost/boost/context/fiber_fcontext.hpp:0: void boost::context::detail::fiber_entry<boost::context::detail::fiber_record<boost::context::fiber, FiberStack&, Fiber::RoutineImpl<DB::AsyncTaskExecutor::Routine>>>(boost::context::detail::transfer_t) @ 0x00000000106510e1

Received exception from server (version 24.7.1):
Code: 279. DB::Exception: Received from localhost:9000. DB::Exception: All connection tries failed. Log: 

Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)

: While executing Remote. (ALL_CONNECTION_TRIES_FAILED)
(query: -- https://github.com/ClickHouse/ClickHouse/issues/59107
SELECT topK('102.4') FROM remote('127.0.0.{1,2}', view(SELECT NULL FROM system.one WHERE dummy = 1));)
, result:



stdout:


Settings used in the test: --max_insert_threads 2 --group_by_two_level_threshold 1 --group_by_two_level_threshold_bytes 25397238 --distributed_aggregation_memory_efficient 0 --fsync_metadata 0 --output_format_parallel_formatting 1 --input_format_parallel_parsing 0 --min_chunk_bytes_for_parallel_parsing 15414356 --max_read_buffer_size 971596 --prefer_localhost_replica 0 --max_block_size 58994 --max_joined_block_size_rows 68296 --max_threads 1 --optimize_append_index 0 --optimize_if_chain_to_multiif 0 --optimize_if_transform_strings_to_enum 1 --optimize_read_in_order 0 --optimize_or_like_chain 1 --optimize_substitute_columns 1 --enable_multiple_prewhere_read_steps 1 --read_in_order_two_level_merge_threshold 14 --optimize_aggregation_in_order 0 --aggregation_in_order_max_block_bytes 36431078 --use_uncompressed_cache 0 --min_bytes_to_use_direct_io 1 --min_bytes_to_use_mmap_io 10737418240 --local_filesystem_read_method mmap --remote_filesystem_read_method threadpool --local_filesystem_read_prefetch 0 --filesystem_cache_segments_batch_size 3 --read_from_filesystem_cache_if_exists_otherwise_bypass_cache 1 --throw_on_error_from_cache_on_write_operations 0 --remote_filesystem_read_prefetch 1 --allow_prefetched_read_pool_for_remote_filesystem 0 --filesystem_prefetch_max_memory_usage 128Mi --filesystem_prefetches_limit 0 --filesystem_prefetch_min_bytes_for_single_read_task 16Mi --filesystem_prefetch_step_marks 0 --filesystem_prefetch_step_bytes 0 --compile_aggregate_expressions 0 --compile_sort_description 1 --merge_tree_coarse_index_granularity 11 --optimize_distinct_in_order 1 --max_bytes_before_external_sort 10737418240 --max_bytes_before_external_group_by 10737418240 --max_bytes_before_remerge_sort 1719807157 --min_compress_block_size 864561 --max_compress_block_size 238301 --merge_tree_compact_parts_min_granules_to_multibuffer_read 6 --optimize_sorting_by_input_stream_properties 0 --http_response_buffer_size 7583969 --http_wait_end_of_query False --enable_memory_bound_merging_of_aggregation_results 1 --min_count_to_compile_expression 0 --min_count_to_compile_aggregate_expression 3 --min_count_to_compile_sort_description 0 --session_timezone America/Hermosillo --prefer_warmed_unmerged_parts_seconds 2 --use_page_cache_for_disks_without_file_cache True --page_cache_inject_eviction False --merge_tree_read_split_ranges_into_intersecting_and_non_intersecting_injection_probability 0.07 --prefer_external_sort_block_bytes 1 --cross_join_min_rows_to_compress 1 --cross_join_min_bytes_to_compress 100000000 --min_external_table_block_size_bytes 0 --max_parsing_threads 0

MergeTree settings used in test: --ratio_of_defaults_for_sparse_serialization 0.8180759371929578 --prefer_fetch_merged_part_size_threshold 9774840414 --vertical_merge_algorithm_min_rows_to_activate 1000000 --vertical_merge_algorithm_min_columns_to_activate 1 --allow_vertical_merges_from_compact_to_wide_parts 1 --min_merge_bytes_to_use_direct_io 1 --index_granularity_bytes 4018709 --merge_max_block_size 5960 --index_granularity 62363 --min_bytes_for_wide_part 59563117 --compress_marks 1 --compress_primary_key 0 --marks_compress_block_size 23685 --primary_key_compress_block_size 97172 --replace_long_file_name_to_hash 0 --max_file_name_length 128 --min_bytes_for_full_part_storage 536870912 --compact_parts_max_bytes_to_buffer 224867141 --compact_parts_max_granules_to_buffer 1 --compact_parts_merge_max_bytes_to_prefetch_part 27290386 --cache_populated_by_fetch 0 --concurrent_part_removal_threshold 89 --old_parts_lifetime 480

Database: test_baeomr7f
01654_bar_nan:                                                          [ OK ] 0.28 sec.
02319_quantile_interpolated_weighted:                                   [ OK ] 0.37 sec.
01393_benchmark_secure_port:                                            [ FAIL ] 0.37 sec.
Reason: result differs with reference:  
--- /home/arthur/ClickHouse/tests/queries/0_stateless/01393_benchmark_secure_port.reference	2024-05-23 18:58:58.398949788 -0300
+++ /home/arthur/ClickHouse/tests/queries/0_stateless/01393_benchmark_secure_port.stdout	2024-07-15 14:05:21.080427788 -0300
@@ -1 +0,0 @@
-Queries executed: 100.


Settings used in the test: --max_insert_threads 1 --group_by_two_level_threshold 332237 --group_by_two_level_threshold_bytes 1031910 --distributed_aggregation_memory_efficient 0 --fsync_metadata 1 --output_format_parallel_formatting 0 --input_format_parallel_parsing 1 --min_chunk_bytes_for_parallel_parsing 12395361 --max_read_buffer_size 772158 --prefer_localhost_replica 1 --max_block_size 52226 --max_joined_block_size_rows 93010 --max_threads 3 --optimize_append_index 0 --optimize_if_chain_to_multiif 0 --optimize_if_transform_strings_to_enum 1 --optimize_read_in_order 1 --optimize_or_like_chain 1 --optimize_substitute_columns 0 --enable_multiple_prewhere_read_steps 0 --read_in_order_two_level_merge_threshold 11 --optimize_aggregation_in_order 1 --aggregation_in_order_max_block_bytes 1343369 --use_uncompressed_cache 1 --min_bytes_to_use_direct_io 10737418240 --min_bytes_to_use_mmap_io 1 --local_filesystem_read_method pread --remote_filesystem_read_method threadpool --local_filesystem_read_prefetch 1 --filesystem_cache_segments_batch_size 50 --read_from_filesystem_cache_if_exists_otherwise_bypass_cache 0 --throw_on_error_from_cache_on_write_operations 1 --remote_filesystem_read_prefetch 0 --allow_prefetched_read_pool_for_remote_filesystem 0 --filesystem_prefetch_max_memory_usage 128Mi --filesystem_prefetches_limit 10 --filesystem_prefetch_min_bytes_for_single_read_task 1Mi --filesystem_prefetch_step_marks 50 --filesystem_prefetch_step_bytes 100Mi --compile_aggregate_expressions 1 --compile_sort_description 0 --merge_tree_coarse_index_granularity 26 --optimize_distinct_in_order 1 --max_bytes_before_external_sort 10737418240 --max_bytes_before_external_group_by 10737418240 --max_bytes_before_remerge_sort 1167918955 --min_compress_block_size 1100704 --max_compress_block_size 2530789 --merge_tree_compact_parts_min_granules_to_multibuffer_read 95 --optimize_sorting_by_input_stream_properties 0 --http_response_buffer_size 304328 --http_wait_end_of_query True --enable_memory_bound_merging_of_aggregation_results 0 --min_count_to_compile_expression 3 --min_count_to_compile_aggregate_expression 3 --min_count_to_compile_sort_description 3 --session_timezone America/Mazatlan --prefer_warmed_unmerged_parts_seconds 8 --use_page_cache_for_disks_without_file_cache True --page_cache_inject_eviction False --merge_tree_read_split_ranges_into_intersecting_and_non_intersecting_injection_probability 0.14 --prefer_external_sort_block_bytes 0 --cross_join_min_rows_to_compress 100000000 --cross_join_min_bytes_to_compress 1 --min_external_table_block_size_bytes 100000000 --max_parsing_threads 1

MergeTree settings used in test: --ratio_of_defaults_for_sparse_serialization 1.0 --prefer_fetch_merged_part_size_threshold 10018564634 --vertical_merge_algorithm_min_rows_to_activate 1 --vertical_merge_algorithm_min_columns_to_activate 1 --allow_vertical_merges_from_compact_to_wide_parts 0 --min_merge_bytes_to_use_direct_io 10737418240 --index_granularity_bytes 26514486 --merge_max_block_size 5882 --index_granularity 64632 --min_bytes_for_wide_part 779784012 --compress_marks 0 --compress_primary_key 0 --marks_compress_block_size 30822 --primary_key_compress_block_size 78707 --replace_long_file_name_to_hash 1 --max_file_name_length 79 --min_bytes_for_full_part_storage 0 --compact_parts_max_bytes_to_buffer 47848713 --compact_parts_max_granules_to_buffer 1 --compact_parts_merge_max_bytes_to_prefetch_part 25171607 --cache_populated_by_fetch 0 --concurrent_part_removal_threshold 0 --old_parts_lifetime 183

Database: test_fr93r3kf
00703_join_crash:                                                       [ OK ] 0.27 sec.
00178_function_replicate:                                               [ OK ] 0.27 sec.
03125_analyzer_CTE_two_joins:                                           [ OK ] 0.27 sec.
02475_bad_cast_low_cardinality_to_string_bug:                           [ OK ] 0.27 sec.
01801_distinct_group_by_shard:                                          [ FAIL ] 0.27 sec.
Reason: return code:  23
[arthur] 2024.07.15 19:05:21.256569 [ 3188205 ] {4de7c574-869d-4c7a-9e70-ea5011c79503} <Error> executeQuery: Code: 279. DB::Exception: All connection tries failed. Log: 

Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)

: While executing Remote. (ALL_CONNECTION_TRIES_FAILED) (version 24.7.1.1) (from 127.0.0.1:41760) (comment: 01801_distinct_group_by_shard.sql) (in query: SELECT DISTINCT a FROM remote('127.0.0.{1,2,3}', values('a UInt8, b UInt8', (1, 2), (1, 3))) GROUP BY a, b;), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::NetException::NetException<String&>(int, FormatStringHelperImpl<std::type_identity<String&>::type>, String&) @ 0x0000000011de0b83
3. /home/arthur/ClickHouse/src/Client/HedgedConnectionsFactory.cpp:0: DB::HedgedConnectionsFactory::getManyConnections(DB::PoolMode, std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>) @ 0x00000000124aa1a2
4. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x00000000124a25f9
5. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x000000001064f5cd
6. /home/arthur/ClickHouse/src/QueryPipeline/RemoteQueryExecutor.cpp:213: std::unique_ptr<DB::IConnections, std::default_delete<DB::IConnections>> std::__function::__policy_invoker<std::unique_ptr<DB::IConnections, std::default_delete<DB::IConnections>> (std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>)>::__call_impl<std::__function::__default_alloc_func<DB::RemoteQueryExecutor::RemoteQueryExecutor(std::shared_ptr<DB::ConnectionPoolWithFailover> const&, String const&, DB::Block const&, std::shared_ptr<DB::Context const>, std::shared_ptr<DB::Throttler> const&, std::map<String, DB::Block, std::less<String>, std::allocator<std::pair<String const, DB::Block>>> const&, std::map<String, std::shared_ptr<DB::IStorage>, std::less<String>, std::allocator<std::pair<String const, std::shared_ptr<DB::IStorage>>>> const&, DB::QueryProcessingStage::Enum, std::optional<DB::RemoteQueryExecutor::Extension>, std::function<Priority (unsigned long)>)::$_0, std::unique_ptr<DB::IConnections, std::default_delete<DB::IConnections>> (std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>)>>(std::__function::__policy_storage const*, std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>&&) @ 0x00000000106499b9
7. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::RemoteQueryExecutor::sendQueryUnlocked(DB::ClientInfo::QueryKind, std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>) @ 0x0000000010642fb6
8. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x0000000010651cc3
9. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x0000000010651552
10. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x000000001065139a
11. /home/arthur/ClickHouse/contrib/boost/boost/context/fiber_fcontext.hpp:0: void boost::context::detail::fiber_entry<boost::context::detail::fiber_record<boost::context::fiber, FiberStack&, Fiber::RoutineImpl<DB::AsyncTaskExecutor::Routine>>>(boost::context::detail::transfer_t) @ 0x00000000106510e1

Received exception from server (version 24.7.1):
Code: 279. DB::Exception: Received from localhost:9000. DB::Exception: All connection tries failed. Log: 

Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)

: While executing Remote. (ALL_CONNECTION_TRIES_FAILED)
(query: SELECT DISTINCT a FROM remote('127.0.0.{1,2,3}', values('a UInt8, b UInt8', (1, 2), (1, 3))) GROUP BY a, b;)
, result:



stdout:


Settings used in the test: --max_insert_threads 2 --group_by_two_level_threshold 1 --group_by_two_level_threshold_bytes 47582850 --distributed_aggregation_memory_efficient 1 --fsync_metadata 0 --output_format_parallel_formatting 1 --input_format_parallel_parsing 0 --min_chunk_bytes_for_parallel_parsing 14662754 --max_read_buffer_size 922214 --prefer_localhost_replica 0 --max_block_size 79203 --max_joined_block_size_rows 63492 --max_threads 3 --optimize_append_index 0 --optimize_if_chain_to_multiif 0 --optimize_if_transform_strings_to_enum 0 --optimize_read_in_order 0 --optimize_or_like_chain 1 --optimize_substitute_columns 1 --enable_multiple_prewhere_read_steps 0 --read_in_order_two_level_merge_threshold 65 --optimize_aggregation_in_order 1 --aggregation_in_order_max_block_bytes 4645151 --use_uncompressed_cache 1 --min_bytes_to_use_direct_io 10737418240 --min_bytes_to_use_mmap_io 10737418240 --local_filesystem_read_method mmap --remote_filesystem_read_method threadpool --local_filesystem_read_prefetch 1 --filesystem_cache_segments_batch_size 3 --read_from_filesystem_cache_if_exists_otherwise_bypass_cache 1 --throw_on_error_from_cache_on_write_operations 0 --remote_filesystem_read_prefetch 0 --allow_prefetched_read_pool_for_remote_filesystem 0 --filesystem_prefetch_max_memory_usage 128Mi --filesystem_prefetches_limit 10 --filesystem_prefetch_min_bytes_for_single_read_task 1Mi --filesystem_prefetch_step_marks 0 --filesystem_prefetch_step_bytes 0 --compile_aggregate_expressions 0 --compile_sort_description 0 --merge_tree_coarse_index_granularity 13 --optimize_distinct_in_order 0 --max_bytes_before_external_sort 10737418240 --max_bytes_before_external_group_by 10737418240 --max_bytes_before_remerge_sort 853729680 --min_compress_block_size 1119122 --max_compress_block_size 58030 --merge_tree_compact_parts_min_granules_to_multibuffer_read 25 --optimize_sorting_by_input_stream_properties 0 --http_response_buffer_size 2550238 --http_wait_end_of_query False --enable_memory_bound_merging_of_aggregation_results 1 --min_count_to_compile_expression 0 --min_count_to_compile_aggregate_expression 0 --min_count_to_compile_sort_description 0 --session_timezone Africa/Juba --prefer_warmed_unmerged_parts_seconds 4 --use_page_cache_for_disks_without_file_cache False --page_cache_inject_eviction False --merge_tree_read_split_ranges_into_intersecting_and_non_intersecting_injection_probability 0.87 --prefer_external_sort_block_bytes 100000000 --cross_join_min_rows_to_compress 100000000 --cross_join_min_bytes_to_compress 1 --min_external_table_block_size_bytes 100000000 --max_parsing_threads 10

MergeTree settings used in test: --ratio_of_defaults_for_sparse_serialization 0.11378100020278425 --prefer_fetch_merged_part_size_threshold 695004268 --vertical_merge_algorithm_min_rows_to_activate 820479 --vertical_merge_algorithm_min_columns_to_activate 1 --allow_vertical_merges_from_compact_to_wide_parts 0 --min_merge_bytes_to_use_direct_io 10737418240 --index_granularity_bytes 5465700 --merge_max_block_size 4567 --index_granularity 47701 --min_bytes_for_wide_part 0 --compress_marks 1 --compress_primary_key 1 --marks_compress_block_size 94812 --primary_key_compress_block_size 38564 --replace_long_file_name_to_hash 0 --max_file_name_length 128 --min_bytes_for_full_part_storage 0 --compact_parts_max_bytes_to_buffer 403889657 --compact_parts_max_granules_to_buffer 1 --compact_parts_merge_max_bytes_to_prefetch_part 18880969 --cache_populated_by_fetch 1 --concurrent_part_removal_threshold 92 --old_parts_lifetime 386

Database: test_p88ewj74
02048_clickhouse_local_stage:                                           [ OK ] 0.72 sec.
01825_type_json_14:                                                     [ OK ] 0.32 sec.
02287_type_object_convert:                                              [ OK ] 0.32 sec.
02751_match_constant_needle:                                            [ OK ] 0.22 sec.
00900_orc_nested_arrays_load:                                           [ OK ] 1.82 sec.
03033_hive_text_read_variable_fields:                                   [ OK ] 1.28 sec.
01308_polygon_area:                                                     [ OK ] 0.32 sec.
02947_merge_tree_index_table_1:                                         [ OK ] 0.17 sec.
02790_sql_standard_fetch:                                               [ OK ] 0.28 sec.
01482_move_to_prewhere_and_cast:                                        [ OK ] 0.27 sec.
02918_sqlite_path_check:                                                [ OK ] 0.62 sec.
02367_optimize_trivial_count_with_array_join:                           [ OK ] 0.22 sec.
02417_keeper_map_create_drop:                                           [ FAIL ] 0.27 sec.
Reason: return code:  36
[arthur] 2024.07.15 10:05:21.798059 [ 3188203 ] {2ddd5d8d-f5c7-4165-b6d0-9ced18cf0502} <Error> executeQuery: Code: 36. DB::Exception: KeeperMap is disabled because 'keeper_map_path_prefix' config is not defined. (BAD_ARGUMENTS) (version 24.7.1.1) (from 127.0.0.1:42036) (comment: 02417_keeper_map_create_drop.sql) (in query: CREATE TABLE 02417_test (key UInt64, value UInt64) Engine=KeeperMap('/' || currentDatabase() || '/test2417') PRIMARY KEY(key);), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000006b0210b
4. /home/arthur/ClickHouse/src/Storages/StorageKeeperMap.cpp:329: DB::StorageKeeperMap::StorageKeeperMap(std::shared_ptr<DB::Context const>, DB::StorageID const&, DB::StorageInMemoryMetadata const&, bool, std::basic_string_view<char, std::char_traits<char>>, String const&, unsigned long) @ 0x0000000011bc5a66
5. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:1460: std::shared_ptr<DB::StorageKeeperMap> std::allocate_shared[abi:v15007]<DB::StorageKeeperMap, std::allocator<DB::StorageKeeperMap>, std::shared_ptr<DB::Context>, DB::StorageID const&, DB::StorageInMemoryMetadata&, bool const&, String&, String&, unsigned long&, void>(std::allocator<DB::StorageKeeperMap> const&, std::shared_ptr<DB::Context>&&, DB::StorageID const&, DB::StorageInMemoryMetadata&, bool const&, String&, String&, unsigned long&) @ 0x0000000011bd89ed
6. /home/arthur/ClickHouse/src/Storages/StorageKeeperMap.cpp:1289: DB::(anonymous namespace)::create(DB::StorageFactory::Arguments const&) @ 0x0000000011bd2bc1
7. /home/arthur/ClickHouse/src/Storages/StorageFactory.cpp:225: DB::StorageFactory::get(DB::ASTCreateQuery const&, String const&, std::shared_ptr<DB::Context>, std::shared_ptr<DB::Context>, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, DB::LoadingStrictnessLevel) const @ 0x0000000011b56b63
8. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__utility/swap.h:37: DB::InterpreterCreateQuery::doCreateTable(DB::ASTCreateQuery&, DB::InterpreterCreateQuery::TableProperties const&, std::unique_ptr<DB::DDLGuard, std::default_delete<DB::DDLGuard>>&, DB::LoadingStrictnessLevel) @ 0x0000000010ea4beb
9. /home/arthur/ClickHouse/src/Interpreters/InterpreterCreateQuery.cpp:0: DB::InterpreterCreateQuery::createTable(DB::ASTCreateQuery&) @ 0x0000000010e9f748
10. /home/arthur/ClickHouse/src/Interpreters/InterpreterCreateQuery.cpp:1870: DB::InterpreterCreateQuery::execute() @ 0x0000000010ea9792
11. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
12. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
13. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
14. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
15. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
16. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
17. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
18. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
19. ? @ 0x00007d28d949ca94
20. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 36. DB::Exception: Received from localhost:9000. DB::Exception: KeeperMap is disabled because 'keeper_map_path_prefix' config is not defined. (BAD_ARGUMENTS)
(query: CREATE TABLE 02417_test (key UInt64, value UInt64) Engine=KeeperMap('/' || currentDatabase() || '/test2417') PRIMARY KEY(key);)
, result:



stdout:


Settings used in the test: --max_insert_threads 3 --group_by_two_level_threshold 839802 --group_by_two_level_threshold_bytes 29821508 --distributed_aggregation_memory_efficient 0 --fsync_metadata 1 --output_format_parallel_formatting 1 --input_format_parallel_parsing 1 --min_chunk_bytes_for_parallel_parsing 11480137 --max_read_buffer_size 928081 --prefer_localhost_replica 1 --max_block_size 35821 --max_joined_block_size_rows 78301 --max_threads 3 --optimize_append_index 1 --optimize_if_chain_to_multiif 0 --optimize_if_transform_strings_to_enum 0 --optimize_read_in_order 1 --optimize_or_like_chain 1 --optimize_substitute_columns 0 --enable_multiple_prewhere_read_steps 0 --read_in_order_two_level_merge_threshold 98 --optimize_aggregation_in_order 0 --aggregation_in_order_max_block_bytes 16547765 --use_uncompressed_cache 1 --min_bytes_to_use_direct_io 1 --min_bytes_to_use_mmap_io 10737418240 --local_filesystem_read_method pread --remote_filesystem_read_method read --local_filesystem_read_prefetch 0 --filesystem_cache_segments_batch_size 3 --read_from_filesystem_cache_if_exists_otherwise_bypass_cache 1 --throw_on_error_from_cache_on_write_operations 1 --remote_filesystem_read_prefetch 0 --allow_prefetched_read_pool_for_remote_filesystem 0 --filesystem_prefetch_max_memory_usage 128Mi --filesystem_prefetches_limit 10 --filesystem_prefetch_min_bytes_for_single_read_task 8Mi --filesystem_prefetch_step_marks 50 --filesystem_prefetch_step_bytes 0 --compile_aggregate_expressions 1 --compile_sort_description 1 --merge_tree_coarse_index_granularity 30 --optimize_distinct_in_order 0 --max_bytes_before_external_sort 10737418240 --max_bytes_before_external_group_by 10737418240 --max_bytes_before_remerge_sort 2933820949 --min_compress_block_size 166266 --max_compress_block_size 1586318 --merge_tree_compact_parts_min_granules_to_multibuffer_read 59 --optimize_sorting_by_input_stream_properties 0 --http_response_buffer_size 9164572 --http_wait_end_of_query True --enable_memory_bound_merging_of_aggregation_results 1 --min_count_to_compile_expression 3 --min_count_to_compile_aggregate_expression 3 --min_count_to_compile_sort_description 0 --session_timezone America/Hermosillo --prefer_warmed_unmerged_parts_seconds 4 --use_page_cache_for_disks_without_file_cache True --page_cache_inject_eviction True --merge_tree_read_split_ranges_into_intersecting_and_non_intersecting_injection_probability 0.64 --prefer_external_sort_block_bytes 1 --cross_join_min_rows_to_compress 0 --cross_join_min_bytes_to_compress 1 --min_external_table_block_size_bytes 1 --max_parsing_threads 0

MergeTree settings used in test: --ratio_of_defaults_for_sparse_serialization 1.0 --prefer_fetch_merged_part_size_threshold 10737418240 --vertical_merge_algorithm_min_rows_to_activate 1000000 --vertical_merge_algorithm_min_columns_to_activate 47 --allow_vertical_merges_from_compact_to_wide_parts 1 --min_merge_bytes_to_use_direct_io 10737418240 --index_granularity_bytes 14521463 --merge_max_block_size 17048 --index_granularity 60563 --min_bytes_for_wide_part 1045801005 --compress_marks 0 --compress_primary_key 1 --marks_compress_block_size 61513 --primary_key_compress_block_size 25093 --replace_long_file_name_to_hash 0 --max_file_name_length 47 --min_bytes_for_full_part_storage 536870912 --compact_parts_max_bytes_to_buffer 336597361 --compact_parts_max_granules_to_buffer 1 --compact_parts_merge_max_bytes_to_prefetch_part 3411041 --cache_populated_by_fetch 0 --concurrent_part_removal_threshold 0 --old_parts_lifetime 10

Database: test_9r00v2yv
01622_multiple_ttls:                                                    [ OK ] 0.32 sec.
Running about 156 stateless tests (Process-14).
02375_rocksdb_with_filters:                                             [ OK ] 2.84 sec.
01018_optimize_read_in_order_with_in_subquery:                          [ OK ] 0.27 sec.
01042_h3_k_ring:                                                        [ OK ] 0.37 sec.
00640_endsWith:                                                         [ OK ] 0.37 sec.
01159_combinators_with_parameters:                                      [ OK ] 0.52 sec.
02165_replicated_grouping_sets:                                         [ FAIL ] 0.27 sec.
Reason: return code:  7
[arthur] 2024.07.15 10:05:22.104844 [ 3188204 ] {aa56a63a-10b2-4f97-8dde-89de68ffaef2} <Error> executeQuery: Code: 519. DB::NetException: All attempts to get table structure failed. Log: 

Code: 279. DB::NetException: All connection tries failed. Log: 

Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)

. (ALL_CONNECTION_TRIES_FAILED) (version 24.7.1.1)
Code: 279. DB::NetException: All connection tries failed. Log: 

Code: 210. DB::NetException: Connection refused (127.0.0.3:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.3:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.3:9000). (NETWORK_ERROR) (version 24.7.1.1)

. (ALL_CONNECTION_TRIES_FAILED) (version 24.7.1.1)

. (NO_REMOTE_SHARD_AVAILABLE) (version 24.7.1.1) (from 127.0.0.1:42166) (comment: 02165_replicated_grouping_sets.sql) (in query: SELECT k1, k2, SUM(number) AS sum_value, count() AS count_value FROM remote('127.0.0.{2,3}', numbers(6)) GROUP BY GROUPING SETS ( (number % 2 AS k1), (number % 3 AS k2) ) ORDER BY sum_value ASC, count_value ASC;), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::NetException::NetException<String&>(int, FormatStringHelperImpl<std::type_identity<String&>::type>, String&) @ 0x0000000011de0b83
3. /home/arthur/ClickHouse/src/Storages/getStructureOfRemoteTable.cpp:170: DB::getStructureOfRemoteTable(DB::Cluster const&, DB::StorageID const&, std::shared_ptr<DB::Context const>, std::shared_ptr<DB::IAST> const&) @ 0x0000000011ddf0ba
4. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::TableFunctionRemote::getActualTableStructure(std::shared_ptr<DB::Context const>, bool) const @ 0x000000000fd0634b
5. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__utility/swap.h:35: DB::TableFunctionRemote::executeImpl(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const>, String const&, DB::ColumnsDescription, bool) const @ 0x000000000fd05520
6. /home/arthur/ClickHouse/src/TableFunctions/ITableFunction.cpp:37: DB::ITableFunction::execute(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const>, String const&, DB::ColumnsDescription, bool, bool) const @ 0x000000000ff53f37
7. /home/arthur/ClickHouse/src/Interpreters/Context.cpp:2216: DB::Context::executeTableFunction(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::ITableFunction> const&) @ 0x0000000010a31752
8. /home/arthur/ClickHouse/src/Analyzer/Resolve/QueryAnalyzer.cpp:4795: DB::QueryAnalyzer::resolveTableFunction(std::shared_ptr<DB::IQueryTreeNode>&, DB::IdentifierResolveScope&, DB::QueryExpressionsAliasVisitor&, bool) @ 0x0000000010ef7fec
9. /home/arthur/ClickHouse/src/Analyzer/Resolve/QueryAnalyzer.cpp:0: DB::QueryAnalyzer::resolveQueryJoinTreeNode(std::shared_ptr<DB::IQueryTreeNode>&, DB::IdentifierResolveScope&, DB::QueryExpressionsAliasVisitor&) @ 0x0000000010f1aac1
10. /home/arthur/ClickHouse/src/Analyzer/Resolve/QueryAnalyzer.cpp:5389: DB::QueryAnalyzer::resolveQuery(std::shared_ptr<DB::IQueryTreeNode> const&, DB::IdentifierResolveScope&) @ 0x0000000010eed6ae
11. /home/arthur/ClickHouse/src/Analyzer/Resolve/QueryAnalyzer.cpp:0: DB::QueryAnalyzer::resolve(std::shared_ptr<DB::IQueryTreeNode>&, std::shared_ptr<DB::IQueryTreeNode> const&, std::shared_ptr<DB::Context const>) @ 0x0000000010eeca79
12. /home/arthur/ClickHouse/src/Analyzer/Resolve/QueryAnalysisPass.cpp:0: DB::QueryAnalysisPass::run(std::shared_ptr<DB::IQueryTreeNode>&, std::shared_ptr<DB::Context const>) @ 0x0000000010eec30e
13. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:547: DB::QueryTreePassManager::run(std::shared_ptr<DB::IQueryTreeNode>) @ 0x0000000010ee84aa
14. /home/arthur/ClickHouse/src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:0: DB::(anonymous namespace)::buildQueryTreeAndRunPasses(std::shared_ptr<DB::IAST> const&, DB::SelectQueryOptions const&, std::shared_ptr<DB::Context const> const&, std::shared_ptr<DB::IStorage> const&) @ 0x0000000011020c56
15. /home/arthur/ClickHouse/src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:160: DB::InterpreterSelectQueryAnalyzer::InterpreterSelectQueryAnalyzer(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const> const&, DB::SelectQueryOptions const&, std::vector<String, std::allocator<String>> const&) @ 0x000000001101f149
16. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: std::__unique_if<DB::InterpreterSelectQueryAnalyzer>::__unique_single std::make_unique[abi:v15007]<DB::InterpreterSelectQueryAnalyzer, std::shared_ptr<DB::IAST>&, std::shared_ptr<DB::Context> const&, DB::SelectQueryOptions const&>(std::shared_ptr<DB::IAST>&, std::shared_ptr<DB::Context> const&, DB::SelectQueryOptions const&) @ 0x0000000011021b64
17. /home/arthur/ClickHouse/src/Interpreters/InterpreterFactory.cpp:0: DB::InterpreterFactory::get(std::shared_ptr<DB::IAST>&, std::shared_ptr<DB::Context>, DB::SelectQueryOptions const&) @ 0x0000000010fbde44
18. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f72a9
19. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
20. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
21. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
22. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
23. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
24. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
25. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
26. ? @ 0x00007d28d949ca94
27. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 519. DB::Exception: Received from localhost:9000. DB::NetException. DB::NetException: All attempts to get table structure failed. Log: 

Code: 279. DB::NetException: All connection tries failed. Log: 

Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)

. (ALL_CONNECTION_TRIES_FAILED) (version 24.7.1.1)
Code: 279. DB::NetException: All connection tries failed. Log: 

Code: 210. DB::NetException: Connection refused (127.0.0.3:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.3:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.3:9000). (NETWORK_ERROR) (version 24.7.1.1)

. (ALL_CONNECTION_TRIES_FAILED) (version 24.7.1.1)

. (NO_REMOTE_SHARD_AVAILABLE)
(query: SELECT
    k1,
    k2,
    SUM(number) AS sum_value,
    count() AS count_value
FROM remote('127.0.0.{2,3}', numbers(6))
GROUP BY
    GROUPING SETS
    (
        (number % 2 AS k1),
        (number % 3 AS k2)
    )
ORDER BY
    sum_value ASC,
    count_value ASC;)
, result:

0	0	3	2
0	1	5	2
0	0	6	3
0	2	7	2
1	0	9	3

stdout:
0	0	3	2
0	1	5	2
0	0	6	3
0	2	7	2
1	0	9	3


Settings used in the test: --max_insert_threads 2 --group_by_two_level_threshold 666899 --group_by_two_level_threshold_bytes 20965630 --distributed_aggregation_memory_efficient 0 --fsync_metadata 1 --output_format_parallel_formatting 1 --input_format_parallel_parsing 0 --min_chunk_bytes_for_parallel_parsing 11146813 --max_read_buffer_size 507376 --prefer_localhost_replica 0 --max_block_size 70910 --max_joined_block_size_rows 72203 --max_threads 2 --optimize_append_index 0 --optimize_if_chain_to_multiif 1 --optimize_if_transform_strings_to_enum 0 --optimize_read_in_order 1 --optimize_or_like_chain 0 --optimize_substitute_columns 0 --enable_multiple_prewhere_read_steps 1 --read_in_order_two_level_merge_threshold 9 --optimize_aggregation_in_order 1 --aggregation_in_order_max_block_bytes 41295824 --use_uncompressed_cache 0 --min_bytes_to_use_direct_io 10737418240 --min_bytes_to_use_mmap_io 1 --local_filesystem_read_method pread --remote_filesystem_read_method read --local_filesystem_read_prefetch 0 --filesystem_cache_segments_batch_size 3 --read_from_filesystem_cache_if_exists_otherwise_bypass_cache 0 --throw_on_error_from_cache_on_write_operations 1 --remote_filesystem_read_prefetch 0 --allow_prefetched_read_pool_for_remote_filesystem 0 --filesystem_prefetch_max_memory_usage 128Mi --filesystem_prefetches_limit 0 --filesystem_prefetch_min_bytes_for_single_read_task 8Mi --filesystem_prefetch_step_marks 50 --filesystem_prefetch_step_bytes 100Mi --compile_aggregate_expressions 0 --compile_sort_description 1 --merge_tree_coarse_index_granularity 9 --optimize_distinct_in_order 0 --max_bytes_before_external_sort 10737418240 --max_bytes_before_external_group_by 0 --max_bytes_before_remerge_sort 869688580 --min_compress_block_size 2176761 --max_compress_block_size 531736 --merge_tree_compact_parts_min_granules_to_multibuffer_read 88 --optimize_sorting_by_input_stream_properties 1 --http_response_buffer_size 2838916 --http_wait_end_of_query False --enable_memory_bound_merging_of_aggregation_results 0 --min_count_to_compile_expression 3 --min_count_to_compile_aggregate_expression 0 --min_count_to_compile_sort_description 0 --session_timezone Mexico/BajaSur --prefer_warmed_unmerged_parts_seconds 6 --use_page_cache_for_disks_without_file_cache True --page_cache_inject_eviction False --merge_tree_read_split_ranges_into_intersecting_and_non_intersecting_injection_probability 0.57 --prefer_external_sort_block_bytes 100000000 --cross_join_min_rows_to_compress 100000000 --cross_join_min_bytes_to_compress 1 --min_external_table_block_size_bytes 100000000 --max_parsing_threads 0

MergeTree settings used in test: --ratio_of_defaults_for_sparse_serialization 1.0 --prefer_fetch_merged_part_size_threshold 10737418240 --vertical_merge_algorithm_min_rows_to_activate 1000000 --vertical_merge_algorithm_min_columns_to_activate 100 --allow_vertical_merges_from_compact_to_wide_parts 1 --min_merge_bytes_to_use_direct_io 7816023412 --index_granularity_bytes 21753829 --merge_max_block_size 6703 --index_granularity 60015 --min_bytes_for_wide_part 1073741824 --compress_marks 1 --compress_primary_key 1 --marks_compress_block_size 84107 --primary_key_compress_block_size 40380 --replace_long_file_name_to_hash 1 --max_file_name_length 128 --min_bytes_for_full_part_storage 536870912 --compact_parts_max_bytes_to_buffer 155355600 --compact_parts_max_granules_to_buffer 170 --compact_parts_merge_max_bytes_to_prefetch_part 7031570 --cache_populated_by_fetch 0 --concurrent_part_removal_threshold 94 --old_parts_lifetime 474

Database: test_ft6y0ky2
01461_alter_table_function:                                             [ OK ] 0.27 sec.
01010_low_cardinality_and_native_http:                                  [ OK ] 2.28 sec.
00804_test_delta_codec_compression:                                     [ OK ] 1.57 sec.
02597_column_update_tricy_expression_and_replication:                   [ OK ] 1.22 sec.
01076_window_view_alter_query_to:                                       [ OK ] 2.48 sec.
02155_binary_op_between_float_and_decimal:                              [ OK ] 0.52 sec.
01290_empty_array_index_analysis:                                       [ OK ] 0.47 sec.
03201_local_named_collections:                                          [ OK ] 0.77 sec.
02160_h3_cell_area_rads2:                                               [ OK ] 0.27 sec.
00208_agg_state_merge:                                                  [ OK ] 0.22 sec.
03093_bug37909_query_does_not_finish:                                   [ OK ] 0.57 sec.
01579_date_datetime_index_comparison:                                   [ OK ] 0.32 sec.
02722_log_profile_events:                                               [ OK ] 0.27 sec.
02885_arg_min_max_combinator:                                           [ OK ] 0.37 sec.
02242_make_date:                                                        [ OK ] 0.57 sec.
01240_join_get_or_null:                                                 [ OK ] 0.27 sec.
02497_storage_join_right_assert:                                        [ OK ] 0.22 sec.
00189_time_zones_long:                                                  [ OK ] 1.58 sec.
01700_deltasum:                                                         [ OK ] 0.27 sec.
02992_settings_overflow:                                                [ OK ] 0.22 sec.
00962_enumNotExect:                                                     [ OK ] 0.27 sec.
01710_projection_in_index:                                              [ OK ] 0.27 sec.
01888_bloom_filter_hasAny:                                              [ OK ] 0.37 sec.
01457_order_by_limit:                                                   [ OK ] 0.27 sec.
00927_asof_join_correct_bt:                                             [ OK ] 0.27 sec.
00534_functions_bad_arguments13:                                        [ SKIPPED ] 0.00 sec.
Reason: not running for current build 
01254_array_of_unnamed_tuples:                                          [ OK ] 0.32 sec.
01659_h3_buffer_overflow:                                               [ OK ] 0.47 sec.
01325_freeze_mutation_stuck:                                            [ OK ] 0.27 sec.
03196_local_memory_limit:                                               [ OK ] 0.62 sec.
01656_join_defaul_enum:                                                 [ OK ] 0.33 sec.
02834_client_yaml_configs:                                              [ OK ] 0.47 sec.
01324_if_transform_strings_to_enum:                                     [ OK ] 0.22 sec.
00548_slice_of_nested:                                                  [ OK ] 0.27 sec.
02521_aggregation_by_partitions:                                        [ FAIL ] 0.87 sec.
Reason: return code:  23
[arthur] 2024.07.15 19:05:23.346156 [ 3177919 ] {4476205d-cda2-4834-866f-561da349e791} <Error> executeQuery: Code: 279. DB::Exception: All connection tries failed. Log: 

Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)

: While executing Remote. (ALL_CONNECTION_TRIES_FAILED) (version 24.7.1.1) (from 127.0.0.1:42478) (comment: 02521_aggregation_by_partitions.sql) (in query: select throwIf(count() != 4) from remote('127.0.0.{1,2}', currentDatabase(), t3) group by a format Null;), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::NetException::NetException<String&>(int, FormatStringHelperImpl<std::type_identity<String&>::type>, String&) @ 0x0000000011de0b83
3. /home/arthur/ClickHouse/src/Client/HedgedConnectionsFactory.cpp:0: DB::HedgedConnectionsFactory::getManyConnections(DB::PoolMode, std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>) @ 0x00000000124aa1a2
4. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x00000000124a25f9
5. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x000000001064f5cd
6. /home/arthur/ClickHouse/src/QueryPipeline/RemoteQueryExecutor.cpp:213: std::unique_ptr<DB::IConnections, std::default_delete<DB::IConnections>> std::__function::__policy_invoker<std::unique_ptr<DB::IConnections, std::default_delete<DB::IConnections>> (std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>)>::__call_impl<std::__function::__default_alloc_func<DB::RemoteQueryExecutor::RemoteQueryExecutor(std::shared_ptr<DB::ConnectionPoolWithFailover> const&, String const&, DB::Block const&, std::shared_ptr<DB::Context const>, std::shared_ptr<DB::Throttler> const&, std::map<String, DB::Block, std::less<String>, std::allocator<std::pair<String const, DB::Block>>> const&, std::map<String, std::shared_ptr<DB::IStorage>, std::less<String>, std::allocator<std::pair<String const, std::shared_ptr<DB::IStorage>>>> const&, DB::QueryProcessingStage::Enum, std::optional<DB::RemoteQueryExecutor::Extension>, std::function<Priority (unsigned long)>)::$_0, std::unique_ptr<DB::IConnections, std::default_delete<DB::IConnections>> (std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>)>>(std::__function::__policy_storage const*, std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>&&) @ 0x00000000106499b9
7. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::RemoteQueryExecutor::sendQueryUnlocked(DB::ClientInfo::QueryKind, std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>) @ 0x0000000010642fb6
8. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x0000000010651cc3
9. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x0000000010651552
10. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x000000001065139a
11. /home/arthur/ClickHouse/contrib/boost/boost/context/fiber_fcontext.hpp:0: void boost::context::detail::fiber_entry<boost::context::detail::fiber_record<boost::context::fiber, FiberStack&, Fiber::RoutineImpl<DB::AsyncTaskExecutor::Routine>>>(boost::context::detail::transfer_t) @ 0x00000000106510e1

Received exception from server (version 24.7.1):
Code: 279. DB::Exception: Received from localhost:9000. DB::Exception: All connection tries failed. Log: 

Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)

: While executing Remote. (ALL_CONNECTION_TRIES_FAILED)
(query: select throwIf(count() != 4) from remote('127.0.0.{1,2}', currentDatabase(), t3) group by a format Null;)
, result:

-- { echoOn }
explain pipeline select a from t1 group by a;
(Expression)
ExpressionTransform × 16
  (Aggregating)
  Resize 4 → 16
    AggregatingTransform × 4
      (Expression)
      ExpressionTransform × 4
        (ReadFromMergeTree)
        Resize 3 → 1
          MergeTreeSelect(pool: ReadPool, algorithm: Thread) × 3 0 → 1
            Resize 3 → 1
              MergeTreeSelect(pool: ReadPool, algorithm: Thread) × 3 0 → 1
                Resize 3 → 1
                  MergeTreeSelect(pool: ReadPool, algorithm: Thread) × 3 0 → 1
                    Resize 3 → 1
                      MergeTreeSelect(pool: ReadPool, algorithm: Thread) × 3 0 → 1
1000000
-- { echoOn }
explain pipeline select a from t2 group by a;
(Expression)
ExpressionTransform × 16
  (Aggregating)
  Resize 8 → 16
    AggregatingTransform × 8
      (Expression)
      ExpressionTransform × 8
        (ReadFromMergeTree)
        Resize 2 → 1
          MergeTreeSelect(pool: ReadPool, algorithm: Thread) × 2 0 → 1
            Resize 2 → 1
              MergeTreeSelect(pool: ReadPool, algorithm: Thread) × 2 0 → 1
                Resize 2 → 1
                  MergeTreeSelect(pool: ReadPool, algorithm: Thread) × 2 0 → 1
                    Resize 2 → 1
                      MergeTreeSelect(pool: ReadPool, algorithm: Thread) × 2 0 → 1
                        Resize 2 → 1
                          MergeTreeSelect(pool: ReadPool, algorithm: Thread) × 2 0 → 1
                            Resize 2 → 1
                              MergeTreeSelect(pool: ReadPool, algorithm: Thread) × 2 0 → 1
                                Resize 2 → 1
                                  MergeTreeSelect(pool: ReadPool, algorithm: Thread) × 2 0 → 1
                                    Resize 2 → 1
                                      MergeTreeSelect(pool: ReadPool, algorithm: Thread) × 2 0 → 1
1000000
-- { echoOn }
explain pipeline select a from t3 group by a;
(Expression)
ExpressionTransform × 16
  (Aggregating)
  Resize 16 → 16
    AggregatingTransform × 16
      (Expression)
      ExpressionTransform × 16
        (ReadFromMergeTree)
        Concat 2 → 1
          MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
            Concat 2 → 1
              MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                Concat 2 → 1
                  MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                    Concat 2 → 1
                      MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                        Concat 2 → 1
                          MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                            Concat 2 → 1
                              MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                                Concat 2 → 1
                                  MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                                    Concat 2 → 1
                                      MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                                        Concat 2 → 1
                                          MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                                            Concat 2 → 1
                                              MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                                                Concat 2 → 1
                                                  MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                                                    Concat 2 → 1
                                                      MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                                                        Concat 2 → 1
                                                          MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                                                            Concat 2 → 1
                                                              MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                                                                Concat 2 → 1
                                                                  MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                                                                    Concat 2 → 1
                                                                      MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
1000000

stdout:
-- { echoOn }
explain pipeline select a from t1 group by a;
(Expression)
ExpressionTransform × 16
  (Aggregating)
  Resize 4 → 16
    AggregatingTransform × 4
      (Expression)
      ExpressionTransform × 4
        (ReadFromMergeTree)
        Resize 3 → 1
          MergeTreeSelect(pool: ReadPool, algorithm: Thread) × 3 0 → 1
            Resize 3 → 1
              MergeTreeSelect(pool: ReadPool, algorithm: Thread) × 3 0 → 1
                Resize 3 → 1
                  MergeTreeSelect(pool: ReadPool, algorithm: Thread) × 3 0 → 1
                    Resize 3 → 1
                      MergeTreeSelect(pool: ReadPool, algorithm: Thread) × 3 0 → 1
1000000
-- { echoOn }
explain pipeline select a from t2 group by a;
(Expression)
ExpressionTransform × 16
  (Aggregating)
  Resize 8 → 16
    AggregatingTransform × 8
      (Expression)
      ExpressionTransform × 8
        (ReadFromMergeTree)
        Resize 2 → 1
          MergeTreeSelect(pool: ReadPool, algorithm: Thread) × 2 0 → 1
            Resize 2 → 1
              MergeTreeSelect(pool: ReadPool, algorithm: Thread) × 2 0 → 1
                Resize 2 → 1
                  MergeTreeSelect(pool: ReadPool, algorithm: Thread) × 2 0 → 1
                    Resize 2 → 1
                      MergeTreeSelect(pool: ReadPool, algorithm: Thread) × 2 0 → 1
                        Resize 2 → 1
                          MergeTreeSelect(pool: ReadPool, algorithm: Thread) × 2 0 → 1
                            Resize 2 → 1
                              MergeTreeSelect(pool: ReadPool, algorithm: Thread) × 2 0 → 1
                                Resize 2 → 1
                                  MergeTreeSelect(pool: ReadPool, algorithm: Thread) × 2 0 → 1
                                    Resize 2 → 1
                                      MergeTreeSelect(pool: ReadPool, algorithm: Thread) × 2 0 → 1
1000000
-- { echoOn }
explain pipeline select a from t3 group by a;
(Expression)
ExpressionTransform × 16
  (Aggregating)
  Resize 16 → 16
    AggregatingTransform × 16
      (Expression)
      ExpressionTransform × 16
        (ReadFromMergeTree)
        Concat 2 → 1
          MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
            Concat 2 → 1
              MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                Concat 2 → 1
                  MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                    Concat 2 → 1
                      MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                        Concat 2 → 1
                          MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                            Concat 2 → 1
                              MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                                Concat 2 → 1
                                  MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                                    Concat 2 → 1
                                      MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                                        Concat 2 → 1
                                          MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                                            Concat 2 → 1
                                              MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                                                Concat 2 → 1
                                                  MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                                                    Concat 2 → 1
                                                      MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                                                        Concat 2 → 1
                                                          MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                                                            Concat 2 → 1
                                                              MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                                                                Concat 2 → 1
                                                                  MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
                                                                    Concat 2 → 1
                                                                      MergeTreeSelect(pool: ReadPoolInOrder, algorithm: InOrder) × 2 0 → 1
1000000


Settings used in the test: --max_insert_threads 3 --group_by_two_level_threshold 631503 --group_by_two_level_threshold_bytes 1 --distributed_aggregation_memory_efficient 0 --fsync_metadata 1 --output_format_parallel_formatting 0 --input_format_parallel_parsing 0 --min_chunk_bytes_for_parallel_parsing 8797415 --max_read_buffer_size 938212 --prefer_localhost_replica 1 --max_block_size 34306 --max_joined_block_size_rows 78941 --max_threads 3 --optimize_append_index 0 --optimize_if_chain_to_multiif 0 --optimize_if_transform_strings_to_enum 0 --optimize_read_in_order 1 --optimize_or_like_chain 0 --optimize_substitute_columns 0 --enable_multiple_prewhere_read_steps 0 --read_in_order_two_level_merge_threshold 11 --optimize_aggregation_in_order 0 --aggregation_in_order_max_block_bytes 31849450 --use_uncompressed_cache 0 --min_bytes_to_use_direct_io 10191494283 --min_bytes_to_use_mmap_io 1 --local_filesystem_read_method mmap --remote_filesystem_read_method read --local_filesystem_read_prefetch 0 --filesystem_cache_segments_batch_size 0 --read_from_filesystem_cache_if_exists_otherwise_bypass_cache 1 --throw_on_error_from_cache_on_write_operations 0 --remote_filesystem_read_prefetch 0 --allow_prefetched_read_pool_for_remote_filesystem 0 --filesystem_prefetch_max_memory_usage 32Mi --filesystem_prefetches_limit 10 --filesystem_prefetch_min_bytes_for_single_read_task 8Mi --filesystem_prefetch_step_marks 0 --filesystem_prefetch_step_bytes 100Mi --compile_aggregate_expressions 1 --compile_sort_description 0 --merge_tree_coarse_index_granularity 25 --optimize_distinct_in_order 0 --max_bytes_before_external_sort 9099407911 --max_bytes_before_external_group_by 10737418240 --max_bytes_before_remerge_sort 1546597999 --min_compress_block_size 1809774 --max_compress_block_size 2009061 --merge_tree_compact_parts_min_granules_to_multibuffer_read 111 --optimize_sorting_by_input_stream_properties 0 --http_response_buffer_size 8013260 --http_wait_end_of_query False --enable_memory_bound_merging_of_aggregation_results 0 --min_count_to_compile_expression 0 --min_count_to_compile_aggregate_expression 0 --min_count_to_compile_sort_description 3 --session_timezone Africa/Juba --prefer_warmed_unmerged_parts_seconds 3 --use_page_cache_for_disks_without_file_cache False --page_cache_inject_eviction False --merge_tree_read_split_ranges_into_intersecting_and_non_intersecting_injection_probability 0.15 --prefer_external_sort_block_bytes 100000000 --cross_join_min_rows_to_compress 100000000 --cross_join_min_bytes_to_compress 0 --min_external_table_block_size_bytes 100000000 --max_parsing_threads 0

MergeTree settings used in test: --ratio_of_defaults_for_sparse_serialization 0.9194786472858875 --prefer_fetch_merged_part_size_threshold 5977203873 --vertical_merge_algorithm_min_rows_to_activate 1 --vertical_merge_algorithm_min_columns_to_activate 1 --allow_vertical_merges_from_compact_to_wide_parts 0 --min_merge_bytes_to_use_direct_io 6580256600 --index_granularity_bytes 4390726 --merge_max_block_size 14067 --index_granularity 22127 --min_bytes_for_wide_part 1073741824 --compress_marks 0 --compress_primary_key 0 --marks_compress_block_size 16644 --primary_key_compress_block_size 21452 --replace_long_file_name_to_hash 1 --max_file_name_length 128 --min_bytes_for_full_part_storage 536870912 --compact_parts_max_bytes_to_buffer 465165954 --compact_parts_max_granules_to_buffer 190 --compact_parts_merge_max_bytes_to_prefetch_part 16916758 --cache_populated_by_fetch 0 --concurrent_part_removal_threshold 0 --old_parts_lifetime 480

Database: test_84gfkkrt
02662_sparse_columns_mutations_2:                                       [ OK ] 0.43 sec.
00226_zookeeper_deduplication_and_unexpected_parts_long:                [ OK ] 0.42 sec.
02293_h3_distance:                                                      [ OK ] 0.32 sec.
02768_into_outfile_extensions_format:                                   [ FAIL ] 0.27 sec.
Reason: return code:  127
/home/arthur/ClickHouse/tests/queries/0_stateless/02768_into_outfile_extensions_format.sh: line 12: clickhouse-format: command not found
, result:



stdout:


Settings used in the test: --max_insert_threads 3 --group_by_two_level_threshold 1000000 --group_by_two_level_threshold_bytes 1 --distributed_aggregation_memory_efficient 0 --fsync_metadata 0 --output_format_parallel_formatting 1 --input_format_parallel_parsing 0 --min_chunk_bytes_for_parallel_parsing 12867156 --max_read_buffer_size 708510 --prefer_localhost_replica 0 --max_block_size 78509 --max_joined_block_size_rows 41428 --max_threads 3 --optimize_append_index 1 --optimize_if_chain_to_multiif 0 --optimize_if_transform_strings_to_enum 0 --optimize_read_in_order 0 --optimize_or_like_chain 0 --optimize_substitute_columns 1 --enable_multiple_prewhere_read_steps 0 --read_in_order_two_level_merge_threshold 60 --optimize_aggregation_in_order 1 --aggregation_in_order_max_block_bytes 11121446 --use_uncompressed_cache 1 --min_bytes_to_use_direct_io 10737418240 --min_bytes_to_use_mmap_io 10737418240 --local_filesystem_read_method pread_threadpool --remote_filesystem_read_method read --local_filesystem_read_prefetch 0 --filesystem_cache_segments_batch_size 0 --read_from_filesystem_cache_if_exists_otherwise_bypass_cache 1 --throw_on_error_from_cache_on_write_operations 0 --remote_filesystem_read_prefetch 1 --allow_prefetched_read_pool_for_remote_filesystem 0 --filesystem_prefetch_max_memory_usage 128Mi --filesystem_prefetches_limit 0 --filesystem_prefetch_min_bytes_for_single_read_task 16Mi --filesystem_prefetch_step_marks 0 --filesystem_prefetch_step_bytes 100Mi --compile_aggregate_expressions 0 --compile_sort_description 0 --merge_tree_coarse_index_granularity 13 --optimize_distinct_in_order 0 --max_bytes_before_external_sort 10737418240 --max_bytes_before_external_group_by 10737418240 --max_bytes_before_remerge_sort 2191610577 --min_compress_block_size 1502753 --max_compress_block_size 2812676 --merge_tree_compact_parts_min_granules_to_multibuffer_read 111 --optimize_sorting_by_input_stream_properties 0 --http_response_buffer_size 6431012 --http_wait_end_of_query True --enable_memory_bound_merging_of_aggregation_results 1 --min_count_to_compile_expression 3 --min_count_to_compile_aggregate_expression 0 --min_count_to_compile_sort_description 0 --session_timezone America/Hermosillo --prefer_warmed_unmerged_parts_seconds 0 --use_page_cache_for_disks_without_file_cache True --page_cache_inject_eviction False --merge_tree_read_split_ranges_into_intersecting_and_non_intersecting_injection_probability 0.22 --prefer_external_sort_block_bytes 0 --cross_join_min_rows_to_compress 100000000 --cross_join_min_bytes_to_compress 100000000 --min_external_table_block_size_bytes 0 --max_parsing_threads 10

MergeTree settings used in test: --ratio_of_defaults_for_sparse_serialization 1.0 --prefer_fetch_merged_part_size_threshold 10737418240 --vertical_merge_algorithm_min_rows_to_activate 1 --vertical_merge_algorithm_min_columns_to_activate 1 --allow_vertical_merges_from_compact_to_wide_parts 1 --min_merge_bytes_to_use_direct_io 10737418240 --index_granularity_bytes 7551998 --merge_max_block_size 16186 --index_granularity 63143 --min_bytes_for_wide_part 285654710 --compress_marks 1 --compress_primary_key 1 --marks_compress_block_size 21576 --primary_key_compress_block_size 76030 --replace_long_file_name_to_hash 0 --max_file_name_length 105 --min_bytes_for_full_part_storage 0 --compact_parts_max_bytes_to_buffer 171341377 --compact_parts_max_granules_to_buffer 217 --compact_parts_merge_max_bytes_to_prefetch_part 26135271 --cache_populated_by_fetch 0 --concurrent_part_removal_threshold 100 --old_parts_lifetime 480

Database: test_n61t9fiy
02591_protobuf_nested_arrays:                                           [ OK ] 0.37 sec.
00898_quantile_timing_parameter_check:                                  [ OK ] 0.27 sec.
Running about 156 stateless tests (Process-17).
01786_explain_merge_tree:                                               [ OK ] 4.49 sec.
02512_array_join_name_resolution:                                       [ OK ] 0.22 sec.
01144_join_rewrite_with_ambiguous_column_and_view:                      [ OK ] 0.27 sec.
01271_optimize_arithmetic_operations_in_aggr_func_with_alias:           [ OK ] 0.32 sec.
00140_prewhere_column_order:                                            [ OK ] 0.27 sec.
03096_text_log_format_string_args_not_empty:                            [ OK ] 0.42 sec.
02420_final_setting_analyzer:                                           [ FAIL ] 0.42 sec.
Reason: return code:  23
[arthur] 2024.07.15 10:05:23.847848 [ 3188185 ] {6bbceee6-e53c-489f-b7a6-84f9f8c7dfc2} <Error> executeQuery: Code: 279. DB::Exception: All connection tries failed. Log: 

Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)

: While executing Remote. (ALL_CONNECTION_TRIES_FAILED) (version 24.7.1.1) (from 127.0.0.1:52746) (comment: 02420_final_setting_analyzer.sql) (in query: select sum(number) from remote('127.0.0.{1,2}', numbers(10)) settings final=1;), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::NetException::NetException<String&>(int, FormatStringHelperImpl<std::type_identity<String&>::type>, String&) @ 0x0000000011de0b83
3. /home/arthur/ClickHouse/src/Client/HedgedConnectionsFactory.cpp:0: DB::HedgedConnectionsFactory::getManyConnections(DB::PoolMode, std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>) @ 0x00000000124aa1a2
4. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x00000000124a25f9
5. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x000000001064f5cd
6. /home/arthur/ClickHouse/src/QueryPipeline/RemoteQueryExecutor.cpp:213: std::unique_ptr<DB::IConnections, std::default_delete<DB::IConnections>> std::__function::__policy_invoker<std::unique_ptr<DB::IConnections, std::default_delete<DB::IConnections>> (std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>)>::__call_impl<std::__function::__default_alloc_func<DB::RemoteQueryExecutor::RemoteQueryExecutor(std::shared_ptr<DB::ConnectionPoolWithFailover> const&, String const&, DB::Block const&, std::shared_ptr<DB::Context const>, std::shared_ptr<DB::Throttler> const&, std::map<String, DB::Block, std::less<String>, std::allocator<std::pair<String const, DB::Block>>> const&, std::map<String, std::shared_ptr<DB::IStorage>, std::less<String>, std::allocator<std::pair<String const, std::shared_ptr<DB::IStorage>>>> const&, DB::QueryProcessingStage::Enum, std::optional<DB::RemoteQueryExecutor::Extension>, std::function<Priority (unsigned long)>)::$_0, std::unique_ptr<DB::IConnections, std::default_delete<DB::IConnections>> (std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>)>>(std::__function::__policy_storage const*, std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>&&) @ 0x00000000106499b9
7. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::RemoteQueryExecutor::sendQueryUnlocked(DB::ClientInfo::QueryKind, std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>) @ 0x0000000010642fb6
8. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x0000000010651cc3
9. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x0000000010651552
10. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x000000001065139a
11. /home/arthur/ClickHouse/contrib/boost/boost/context/fiber_fcontext.hpp:0: void boost::context::detail::fiber_entry<boost::context::detail::fiber_record<boost::context::fiber, FiberStack&, Fiber::RoutineImpl<DB::AsyncTaskExecutor::Routine>>>(boost::context::detail::transfer_t) @ 0x00000000106510e1

Received exception from server (version 24.7.1):
Code: 279. DB::Exception: Received from localhost:9000. DB::Exception: All connection tries failed. Log: 

Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)

: While executing Remote. (ALL_CONNECTION_TRIES_FAILED)
(query: select sum(number) from remote('127.0.0.{1,2}', numbers(10)) settings final=1;)
, result:

-- { echoOn }
set allow_experimental_analyzer=1;
SYSTEM STOP MERGES tbl;
-- simple test case
create table if not exists replacing_mt (x String) engine=ReplacingMergeTree() ORDER BY x;
insert into replacing_mt values ('abc');
insert into replacing_mt values ('abc');
-- expected output is 2 because final is turned off
select count() from replacing_mt;
2
set final = 1;
-- expected output is 1 because final is turned on
select count() from replacing_mt;
1
-- JOIN test cases
create table if not exists lhs (x String) engine=ReplacingMergeTree() ORDER BY x;
create table if not exists rhs (x String) engine=ReplacingMergeTree() ORDER BY x;
insert into lhs values ('abc');
insert into lhs values ('abc');
insert into rhs values ('abc');
insert into rhs values ('abc');
set final = 0;
-- expected output is 4 because select_final == 0
select count() from lhs inner join rhs on lhs.x = rhs.x;
4
set final = 1;
-- expected output is 1 because final == 1
select count() from lhs inner join rhs on lhs.x = rhs.x;
1
-- regular non final table
set final = 1;
create table if not exists regular_mt_table (x String) engine=MergeTree() ORDER BY x;
insert into regular_mt_table values ('abc');
insert into regular_mt_table values ('abc');
-- expected output is 2, it should silently ignore final modifier
select count() from regular_mt_table;
2
-- view test
create materialized VIEW mv_regular_mt_table TO regular_mt_table AS SELECT * FROM regular_mt_table;
create view nv_regular_mt_table AS SELECT * FROM mv_regular_mt_table;
set final=1;
select count() from nv_regular_mt_table;
2
-- join on mix of tables that support / do not support select final with explain
create table if not exists left_table (id UInt64, val_left String) engine=ReplacingMergeTree() ORDER BY id;
create table if not exists middle_table (id UInt64, val_middle String) engine=MergeTree() ORDER BY id;
create table if not exists right_table (id UInt64, val_right String) engine=ReplacingMergeTree() ORDER BY id;
insert into left_table values (1,'a');
insert into left_table values (1,'b');
insert into left_table values (1,'c');
insert into middle_table values (1,'a');
insert into middle_table values (1,'b');
insert into right_table values (1,'a');
insert into right_table values (1,'b');
insert into right_table values (1,'c');
-- expected output
-- 1 c a c
-- 1 c b c
select left_table.id,val_left, val_middle, val_right from left_table
                                                              inner join middle_table on left_table.id = middle_table.id
                                                              inner join right_table on middle_table.id = right_table.id
ORDER BY left_table.id, val_left, val_middle, val_right;
1	c	a	c
1	c	b	c
explain syntax select left_table.id,val_left, val_middle, val_right from left_table
                                                                             inner join middle_table on left_table.id = middle_table.id
                                                                             inner join right_table on middle_table.id = right_table.id
               ORDER BY left_table.id, val_left, val_middle, val_right;
SELECT
    `_--left_table.id` AS `left_table.id`,
    val_left,
    val_middle,
    val_right
FROM
(
    SELECT
        val_left,
        id AS `_--left_table.id`,
        val_middle,
        middle_table.id AS `_--middle_table.id`
    FROM left_table
    FINAL
    ALL INNER JOIN
    (
        SELECT
            id,
            val_middle
        FROM middle_table
    ) AS middle_table ON `_--left_table.id` = `_--middle_table.id`
) AS `--.s`
ALL INNER JOIN
(
    SELECT
        val_right,
        id AS `_--right_table.id`
    FROM right_table
    FINAL
) AS `--.t` ON `_--middle_table.id` = `_--right_table.id`
ORDER BY
    `_--left_table.id` ASC,
    val_left ASC,
    val_middle ASC,
    val_right ASC
-- extra: same with subquery
select left_table.id,val_left, val_middle, val_right from left_table
                                                              inner join middle_table on left_table.id = middle_table.id
                                                              inner join (SELECT * FROM right_table WHERE id = 1) r on middle_table.id = r.id
ORDER BY left_table.id, val_left, val_middle, val_right;
1	c	a	c
1	c	b	c
-- Quite exotic with Merge engine
DROP TABLE IF EXISTS table_to_merge_a;
DROP TABLE IF EXISTS table_to_merge_b;
DROP TABLE IF EXISTS table_to_merge_c;
DROP TABLE IF EXISTS merge_table;
create table if not exists table_to_merge_a (id UInt64, val String) engine=ReplacingMergeTree() ORDER BY id;
create table if not exists table_to_merge_b (id UInt64, val String) engine=MergeTree() ORDER BY id;
create table if not exists table_to_merge_c (id UInt64, val String) engine=ReplacingMergeTree() ORDER BY id;
CREATE TABLE merge_table Engine=Merge(currentDatabase(), '^(table_to_merge_[a-z])$') AS table_to_merge_a;
insert into table_to_merge_a values (1,'a');
insert into table_to_merge_a values (1,'b');
insert into table_to_merge_a values (1,'c');
insert into table_to_merge_b values (2,'a');
insert into table_to_merge_b values (2,'b');
insert into table_to_merge_c values (3,'a');
insert into table_to_merge_c values (3,'b');
insert into table_to_merge_c values (3,'c');
-- expected output:
-- 1 c, 2 a, 2 b, 3 c
SELECT * FROM merge_table ORDER BY id, val;
1	c
2	a
2	b
3	c
select sum(number) from numbers(10) settings final=1;
45
select sum(number) from remote('127.0.0.{1,2}', numbers(10)) settings final=1;

stdout:
-- { echoOn }
set allow_experimental_analyzer=1;
SYSTEM STOP MERGES tbl;
-- simple test case
create table if not exists replacing_mt (x String) engine=ReplacingMergeTree() ORDER BY x;
insert into replacing_mt values ('abc');
insert into replacing_mt values ('abc');
-- expected output is 2 because final is turned off
select count() from replacing_mt;
2
set final = 1;
-- expected output is 1 because final is turned on
select count() from replacing_mt;
1
-- JOIN test cases
create table if not exists lhs (x String) engine=ReplacingMergeTree() ORDER BY x;
create table if not exists rhs (x String) engine=ReplacingMergeTree() ORDER BY x;
insert into lhs values ('abc');
insert into lhs values ('abc');
insert into rhs values ('abc');
insert into rhs values ('abc');
set final = 0;
-- expected output is 4 because select_final == 0
select count() from lhs inner join rhs on lhs.x = rhs.x;
4
set final = 1;
-- expected output is 1 because final == 1
select count() from lhs inner join rhs on lhs.x = rhs.x;
1
-- regular non final table
set final = 1;
create table if not exists regular_mt_table (x String) engine=MergeTree() ORDER BY x;
insert into regular_mt_table values ('abc');
insert into regular_mt_table values ('abc');
-- expected output is 2, it should silently ignore final modifier
select count() from regular_mt_table;
2
-- view test
create materialized VIEW mv_regular_mt_table TO regular_mt_table AS SELECT * FROM regular_mt_table;
create view nv_regular_mt_table AS SELECT * FROM mv_regular_mt_table;
set final=1;
select count() from nv_regular_mt_table;
2
-- join on mix of tables that support / do not support select final with explain
create table if not exists left_table (id UInt64, val_left String) engine=ReplacingMergeTree() ORDER BY id;
create table if not exists middle_table (id UInt64, val_middle String) engine=MergeTree() ORDER BY id;
create table if not exists right_table (id UInt64, val_right String) engine=ReplacingMergeTree() ORDER BY id;
insert into left_table values (1,'a');
insert into left_table values (1,'b');
insert into left_table values (1,'c');
insert into middle_table values (1,'a');
insert into middle_table values (1,'b');
insert into right_table values (1,'a');
insert into right_table values (1,'b');
insert into right_table values (1,'c');
-- expected output
-- 1 c a c
-- 1 c b c
select left_table.id,val_left, val_middle, val_right from left_table
                                                              inner join middle_table on left_table.id = middle_table.id
                                                              inner join right_table on middle_table.id = right_table.id
ORDER BY left_table.id, val_left, val_middle, val_right;
1	c	a	c
1	c	b	c
explain syntax select left_table.id,val_left, val_middle, val_right from left_table
                                                                             inner join middle_table on left_table.id = middle_table.id
                                                                             inner join right_table on middle_table.id = right_table.id
               ORDER BY left_table.id, val_left, val_middle, val_right;
SELECT
    `_--left_table.id` AS `left_table.id`,
    val_left,
    val_middle,
    val_right
FROM
(
    SELECT
        val_left,
        id AS `_--left_table.id`,
        val_middle,
        middle_table.id AS `_--middle_table.id`
    FROM left_table
    FINAL
    ALL INNER JOIN
    (
        SELECT
            id,
            val_middle
        FROM middle_table
    ) AS middle_table ON `_--left_table.id` = `_--middle_table.id`
) AS `--.s`
ALL INNER JOIN
(
    SELECT
        val_right,
        id AS `_--right_table.id`
    FROM right_table
    FINAL
) AS `--.t` ON `_--middle_table.id` = `_--right_table.id`
ORDER BY
    `_--left_table.id` ASC,
    val_left ASC,
    val_middle ASC,
    val_right ASC
-- extra: same with subquery
select left_table.id,val_left, val_middle, val_right from left_table
                                                              inner join middle_table on left_table.id = middle_table.id
                                                              inner join (SELECT * FROM right_table WHERE id = 1) r on middle_table.id = r.id
ORDER BY left_table.id, val_left, val_middle, val_right;
1	c	a	c
1	c	b	c
-- Quite exotic with Merge engine
DROP TABLE IF EXISTS table_to_merge_a;
DROP TABLE IF EXISTS table_to_merge_b;
DROP TABLE IF EXISTS table_to_merge_c;
DROP TABLE IF EXISTS merge_table;
create table if not exists table_to_merge_a (id UInt64, val String) engine=ReplacingMergeTree() ORDER BY id;
create table if not exists table_to_merge_b (id UInt64, val String) engine=MergeTree() ORDER BY id;
create table if not exists table_to_merge_c (id UInt64, val String) engine=ReplacingMergeTree() ORDER BY id;
CREATE TABLE merge_table Engine=Merge(currentDatabase(), '^(table_to_merge_[a-z])$') AS table_to_merge_a;
insert into table_to_merge_a values (1,'a');
insert into table_to_merge_a values (1,'b');
insert into table_to_merge_a values (1,'c');
insert into table_to_merge_b values (2,'a');
insert into table_to_merge_b values (2,'b');
insert into table_to_merge_c values (3,'a');
insert into table_to_merge_c values (3,'b');
insert into table_to_merge_c values (3,'c');
-- expected output:
-- 1 c, 2 a, 2 b, 3 c
SELECT * FROM merge_table ORDER BY id, val;
1	c
2	a
2	b
3	c
select sum(number) from numbers(10) settings final=1;
45
select sum(number) from remote('127.0.0.{1,2}', numbers(10)) settings final=1;


Settings used in the test: --max_insert_threads 3 --group_by_two_level_threshold 1 --group_by_two_level_threshold_bytes 12968654 --distributed_aggregation_memory_efficient 0 --fsync_metadata 1 --output_format_parallel_formatting 1 --input_format_parallel_parsing 0 --min_chunk_bytes_for_parallel_parsing 5576576 --max_read_buffer_size 840460 --prefer_localhost_replica 0 --max_block_size 82777 --max_joined_block_size_rows 54055 --max_threads 1 --optimize_append_index 0 --optimize_if_chain_to_multiif 0 --optimize_if_transform_strings_to_enum 0 --optimize_read_in_order 0 --optimize_or_like_chain 1 --optimize_substitute_columns 1 --enable_multiple_prewhere_read_steps 1 --read_in_order_two_level_merge_threshold 12 --optimize_aggregation_in_order 0 --aggregation_in_order_max_block_bytes 16115032 --use_uncompressed_cache 1 --min_bytes_to_use_direct_io 1 --min_bytes_to_use_mmap_io 391369037 --local_filesystem_read_method read --remote_filesystem_read_method threadpool --local_filesystem_read_prefetch 1 --filesystem_cache_segments_batch_size 0 --read_from_filesystem_cache_if_exists_otherwise_bypass_cache 0 --throw_on_error_from_cache_on_write_operations 0 --remote_filesystem_read_prefetch 1 --allow_prefetched_read_pool_for_remote_filesystem 0 --filesystem_prefetch_max_memory_usage 128Mi --filesystem_prefetches_limit 0 --filesystem_prefetch_min_bytes_for_single_read_task 16Mi --filesystem_prefetch_step_marks 0 --filesystem_prefetch_step_bytes 100Mi --compile_aggregate_expressions 0 --compile_sort_description 1 --merge_tree_coarse_index_granularity 25 --optimize_distinct_in_order 1 --max_bytes_before_external_sort 0 --max_bytes_before_external_group_by 0 --max_bytes_before_remerge_sort 775744155 --min_compress_block_size 3017621 --max_compress_block_size 2033477 --merge_tree_compact_parts_min_granules_to_multibuffer_read 75 --optimize_sorting_by_input_stream_properties 0 --http_response_buffer_size 6554786 --http_wait_end_of_query True --enable_memory_bound_merging_of_aggregation_results 0 --min_count_to_compile_expression 3 --min_count_to_compile_aggregate_expression 3 --min_count_to_compile_sort_description 3 --session_timezone America/Mazatlan --prefer_warmed_unmerged_parts_seconds 2 --use_page_cache_for_disks_without_file_cache True --page_cache_inject_eviction False --merge_tree_read_split_ranges_into_intersecting_and_non_intersecting_injection_probability 0.43 --prefer_external_sort_block_bytes 100000000 --cross_join_min_rows_to_compress 0 --cross_join_min_bytes_to_compress 100000000 --min_external_table_block_size_bytes 0 --max_parsing_threads 0

MergeTree settings used in test: --ratio_of_defaults_for_sparse_serialization 0.0 --prefer_fetch_merged_part_size_threshold 3499565987 --vertical_merge_algorithm_min_rows_to_activate 1000000 --vertical_merge_algorithm_min_columns_to_activate 100 --allow_vertical_merges_from_compact_to_wide_parts 0 --min_merge_bytes_to_use_direct_io 5203746734 --index_granularity_bytes 26455434 --merge_max_block_size 9149 --index_granularity 13048 --min_bytes_for_wide_part 1073741824 --compress_marks 1 --compress_primary_key 1 --marks_compress_block_size 30507 --primary_key_compress_block_size 87382 --replace_long_file_name_to_hash 1 --max_file_name_length 114 --min_bytes_for_full_part_storage 100120034 --compact_parts_max_bytes_to_buffer 500462253 --compact_parts_max_granules_to_buffer 86 --compact_parts_merge_max_bytes_to_prefetch_part 10716588 --cache_populated_by_fetch 1 --concurrent_part_removal_threshold 0 --old_parts_lifetime 363

Database: test_eb88pq5y
02833_concurrrent_sessions:                                             [ SKIPPED ] 0.00 sec.
Reason: not running for current build 
03108_describe_union_all:                                               [ OK ] 0.22 sec.
02292_h3_unidirectional_funcs:                                          [ OK ] 0.32 sec.
01801_dateDiff_DateTime64:                                              [ OK ] 0.42 sec.
02677_analyzer_bitmap_has_any:                                          [ OK ] 0.27 sec.
02889_parts_columns_filenames:                                          [ OK ] 0.27 sec.
01012_show_tables_limit:                                                [ OK ] 0.22 sec.
02283_array_norm:                                                       [ OK ] 0.42 sec.
01601_custom_tld:                                                       [ FAIL ] 0.22 sec.
Reason: return code:  50
[arthur] 2024.07.15 14:05:24.230483 [ 3188187 ] {0001c21f-3a65-4611-9eb3-16e6d9798053} <Error> executeQuery: Code: 562. DB::Exception: TLD list public_suffix_list does not exist: In scope SELECT cutToFirstSignificantSubdomainCustom('there-is-no-such-domain', 'public_suffix_list'). (TLD_LIST_NOT_FOUND) (version 24.7.1.1) (from 127.0.0.1:53028) (comment: 01601_custom_tld.gen.sql) (in query: select cutToFirstSignificantSubdomainCustom('there-is-no-such-domain', 'public_suffix_list');), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<String const&>(int, FormatStringHelperImpl<std::type_identity<String const&>::type>, String const&) @ 0x0000000006b0f1cb
4. /home/arthur/ClickHouse/src/Common/TLDListsHolder.cpp:122: DB::TLDListsHolder::getTldList(String const&) @ 0x000000000c12d158
5. /home/arthur/ClickHouse/src/Functions/URL/FirstSignificantSubdomainCustomImpl.h:24: DB::FunctionCutToFirstSignificantSubdomainCustomImpl<DB::CutToFirstSignificantSubdomainCustom<true, false>, DB::NameCutToFirstSignificantSubdomainCustom>::executeImpl(std::vector<DB::ColumnWithTypeAndName, std::allocator<DB::ColumnWithTypeAndName>> const&, std::shared_ptr<DB::IDataType const> const&, unsigned long) const @ 0x000000000b37d157
6. /home/arthur/ClickHouse/src/Functions/IFunction.h:437: DB::IFunction::executeImplDryRun(std::vector<DB::ColumnWithTypeAndName, std::allocator<DB::ColumnWithTypeAndName>> const&, std::shared_ptr<DB::IDataType const> const&, unsigned long) const @ 0x0000000006afe32a
7. /home/arthur/ClickHouse/src/Functions/IFunctionAdaptors.h:28: DB::FunctionToExecutableFunctionAdaptor::executeDryRunImpl(std::vector<DB::ColumnWithTypeAndName, std::allocator<DB::ColumnWithTypeAndName>> const&, std::shared_ptr<DB::IDataType const> const&, unsigned long) const @ 0x0000000006b13b7a
8. /home/arthur/ClickHouse/src/Functions/IFunction.cpp:0: DB::IExecutableFunction::executeWithoutLowCardinalityColumns(std::vector<DB::ColumnWithTypeAndName, std::allocator<DB::ColumnWithTypeAndName>> const&, std::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const @ 0x0000000007654aef
9. /home/arthur/ClickHouse/src/Functions/IFunction.cpp:0: DB::IExecutableFunction::defaultImplementationForConstantArguments(std::vector<DB::ColumnWithTypeAndName, std::allocator<DB::ColumnWithTypeAndName>> const&, std::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const @ 0x00000000076545d0
10. /home/arthur/ClickHouse/src/Functions/IFunction.cpp:0: DB::IExecutableFunction::executeWithoutLowCardinalityColumns(std::vector<DB::ColumnWithTypeAndName, std::allocator<DB::ColumnWithTypeAndName>> const&, std::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const @ 0x0000000007654a92
11. /home/arthur/ClickHouse/contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:117: DB::IExecutableFunction::executeWithoutSparseColumns(std::vector<DB::ColumnWithTypeAndName, std::allocator<DB::ColumnWithTypeAndName>> const&, std::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const @ 0x000000000765557a
12. /home/arthur/ClickHouse/src/Functions/IFunction.cpp:0: DB::IExecutableFunction::execute(std::vector<DB::ColumnWithTypeAndName, std::allocator<DB::ColumnWithTypeAndName>> const&, std::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const @ 0x00000000076564a5
13. /home/arthur/ClickHouse/contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:117: DB::QueryAnalyzer::resolveFunction(std::shared_ptr<DB::IQueryTreeNode>&, DB::IdentifierResolveScope&) @ 0x0000000010f0b627
14. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:553: DB::QueryAnalyzer::resolveExpressionNode(std::shared_ptr<DB::IQueryTreeNode>&, DB::IdentifierResolveScope&, bool, bool, bool) @ 0x0000000010ef413c
15. /home/arthur/ClickHouse/src/Analyzer/Resolve/QueryAnalyzer.cpp:3891: DB::QueryAnalyzer::resolveExpressionNodeList(std::shared_ptr<DB::IQueryTreeNode>&, DB::IdentifierResolveScope&, bool, bool) @ 0x0000000010ef3280
16. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:815: DB::QueryAnalyzer::resolveProjectionExpressionNodeList(std::shared_ptr<DB::IQueryTreeNode>&, DB::IdentifierResolveScope&) @ 0x0000000010f18bc9
17. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:961: DB::QueryAnalyzer::resolveQuery(std::shared_ptr<DB::IQueryTreeNode> const&, DB::IdentifierResolveScope&) @ 0x0000000010eed71e
18. /home/arthur/ClickHouse/src/Analyzer/Resolve/QueryAnalyzer.cpp:0: DB::QueryAnalyzer::resolve(std::shared_ptr<DB::IQueryTreeNode>&, std::shared_ptr<DB::IQueryTreeNode> const&, std::shared_ptr<DB::Context const>) @ 0x0000000010eeca79
19. /home/arthur/ClickHouse/src/Analyzer/Resolve/QueryAnalysisPass.cpp:0: DB::QueryAnalysisPass::run(std::shared_ptr<DB::IQueryTreeNode>&, std::shared_ptr<DB::Context const>) @ 0x0000000010eec30e
20. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:547: DB::QueryTreePassManager::run(std::shared_ptr<DB::IQueryTreeNode>) @ 0x0000000010ee84aa
21. /home/arthur/ClickHouse/src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:0: DB::(anonymous namespace)::buildQueryTreeAndRunPasses(std::shared_ptr<DB::IAST> const&, DB::SelectQueryOptions const&, std::shared_ptr<DB::Context const> const&, std::shared_ptr<DB::IStorage> const&) @ 0x0000000011020c56
22. /home/arthur/ClickHouse/src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:160: DB::InterpreterSelectQueryAnalyzer::InterpreterSelectQueryAnalyzer(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const> const&, DB::SelectQueryOptions const&, std::vector<String, std::allocator<String>> const&) @ 0x000000001101f149
23. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: std::__unique_if<DB::InterpreterSelectQueryAnalyzer>::__unique_single std::make_unique[abi:v15007]<DB::InterpreterSelectQueryAnalyzer, std::shared_ptr<DB::IAST>&, std::shared_ptr<DB::Context> const&, DB::SelectQueryOptions const&>(std::shared_ptr<DB::IAST>&, std::shared_ptr<DB::Context> const&, DB::SelectQueryOptions const&) @ 0x0000000011021b64
24. /home/arthur/ClickHouse/src/Interpreters/InterpreterFactory.cpp:0: DB::InterpreterFactory::get(std::shared_ptr<DB::IAST>&, std::shared_ptr<DB::Context>, DB::SelectQueryOptions const&) @ 0x0000000010fbde44
25. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f72a9
26. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
27. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
28. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
29. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
30. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
31. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2

Received exception from server (version 24.7.1):
Code: 562. DB::Exception: Received from localhost:9000. DB::Exception: TLD list public_suffix_list does not exist: In scope SELECT cutToFirstSignificantSubdomainCustom('there-is-no-such-domain', 'public_suffix_list'). (TLD_LIST_NOT_FOUND)
(query: select cutToFirstSignificantSubdomainCustom('there-is-no-such-domain', 'public_suffix_list');)
, result:

-- { echo }

select '-- no-tld';
-- no-tld
-- even if there is no TLD, 2-nd level by default anyway
-- FIXME: make this behavior optional (so that TLD for host never changed, either empty or something real)
select cutToFirstSignificantSubdomain('there-is-no-such-domain');

select cutToFirstSignificantSubdomain('foo.there-is-no-such-domain');
foo.there-is-no-such-domain
select cutToFirstSignificantSubdomain('bar.foo.there-is-no-such-domain');
foo.there-is-no-such-domain
select cutToFirstSignificantSubdomainCustom('there-is-no-such-domain', 'public_suffix_list');

stdout:
-- { echo }

select '-- no-tld';
-- no-tld
-- even if there is no TLD, 2-nd level by default anyway
-- FIXME: make this behavior optional (so that TLD for host never changed, either empty or something real)
select cutToFirstSignificantSubdomain('there-is-no-such-domain');

select cutToFirstSignificantSubdomain('foo.there-is-no-such-domain');
foo.there-is-no-such-domain
select cutToFirstSignificantSubdomain('bar.foo.there-is-no-such-domain');
foo.there-is-no-such-domain
select cutToFirstSignificantSubdomainCustom('there-is-no-such-domain', 'public_suffix_list');


Settings used in the test: --max_insert_threads 3 --group_by_two_level_threshold 1000000 --group_by_two_level_threshold_bytes 8112975 --distributed_aggregation_memory_efficient 1 --fsync_metadata 1 --output_format_parallel_formatting 1 --input_format_parallel_parsing 0 --min_chunk_bytes_for_parallel_parsing 11161647 --max_read_buffer_size 645922 --prefer_localhost_replica 0 --max_block_size 74103 --max_joined_block_size_rows 82236 --max_threads 1 --optimize_append_index 0 --optimize_if_chain_to_multiif 1 --optimize_if_transform_strings_to_enum 0 --optimize_read_in_order 0 --optimize_or_like_chain 0 --optimize_substitute_columns 1 --enable_multiple_prewhere_read_steps 1 --read_in_order_two_level_merge_threshold 7 --optimize_aggregation_in_order 1 --aggregation_in_order_max_block_bytes 43950972 --use_uncompressed_cache 0 --min_bytes_to_use_direct_io 10737418240 --min_bytes_to_use_mmap_io 10737418240 --local_filesystem_read_method pread_threadpool --remote_filesystem_read_method read --local_filesystem_read_prefetch 1 --filesystem_cache_segments_batch_size 0 --read_from_filesystem_cache_if_exists_otherwise_bypass_cache 1 --throw_on_error_from_cache_on_write_operations 0 --remote_filesystem_read_prefetch 0 --allow_prefetched_read_pool_for_remote_filesystem 0 --filesystem_prefetch_max_memory_usage 64Mi --filesystem_prefetches_limit 0 --filesystem_prefetch_min_bytes_for_single_read_task 8Mi --filesystem_prefetch_step_marks 50 --filesystem_prefetch_step_bytes 100Mi --compile_aggregate_expressions 0 --compile_sort_description 0 --merge_tree_coarse_index_granularity 18 --optimize_distinct_in_order 1 --max_bytes_before_external_sort 10737418240 --max_bytes_before_external_group_by 10737418240 --max_bytes_before_remerge_sort 2653831249 --min_compress_block_size 139222 --max_compress_block_size 2645801 --merge_tree_compact_parts_min_granules_to_multibuffer_read 60 --optimize_sorting_by_input_stream_properties 1 --http_response_buffer_size 7083780 --http_wait_end_of_query True --enable_memory_bound_merging_of_aggregation_results 1 --min_count_to_compile_expression 3 --min_count_to_compile_aggregate_expression 3 --min_count_to_compile_sort_description 3 --session_timezone America/Sao_Paulo --prefer_warmed_unmerged_parts_seconds 2 --use_page_cache_for_disks_without_file_cache False --page_cache_inject_eviction True --merge_tree_read_split_ranges_into_intersecting_and_non_intersecting_injection_probability 0.04 --prefer_external_sort_block_bytes 0 --cross_join_min_rows_to_compress 1 --cross_join_min_bytes_to_compress 1 --min_external_table_block_size_bytes 1 --max_parsing_threads 10

MergeTree settings used in test: --ratio_of_defaults_for_sparse_serialization 1.0 --prefer_fetch_merged_part_size_threshold 5552833224 --vertical_merge_algorithm_min_rows_to_activate 628329 --vertical_merge_algorithm_min_columns_to_activate 1 --allow_vertical_merges_from_compact_to_wide_parts 0 --min_merge_bytes_to_use_direct_io 10737418240 --index_granularity_bytes 3842948 --merge_max_block_size 800 --index_granularity 5525 --min_bytes_for_wide_part 134180971 --compress_marks 1 --compress_primary_key 0 --marks_compress_block_size 22348 --primary_key_compress_block_size 93267 --replace_long_file_name_to_hash 1 --max_file_name_length 123 --min_bytes_for_full_part_storage 0 --compact_parts_max_bytes_to_buffer 120689666 --compact_parts_max_granules_to_buffer 1 --compact_parts_merge_max_bytes_to_prefetch_part 24669419 --cache_populated_by_fetch 0 --concurrent_part_removal_threshold 0 --old_parts_lifetime 10

Database: test_8iorf58m
00150_with_totals_and_join:                                             [ OK ] 0.22 sec.
01881_union_header_mismatch_bug:                                        [ OK ] 0.22 sec.
01197_summing_enum:                                                     [ OK ] 0.27 sec.
00714_create_temporary_table_with_in_clause:                            [ OK ] 0.22 sec.
00987_distributed_stack_overflow:                                       [ OK ] 0.22 sec.
01035_enum_conversion_native_format:                                    [ OK ] 2.13 sec.
02478_projection_with_group_by_alter:                                   [ OK ] 0.42 sec.
02149_external_schema_inference:                                        [ FAIL ] 4.79 sec.
Reason: return code:  1
touch: cannot touch '/var/lib/clickhouse/user_files/test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data': No such file or directory
mkdir: cannot create directory ‘/var/lib/clickhouse’: Permission denied
cp: target '/var/lib/clickhouse/format_schemas/test_7lirz7ec/': No such file or directory
[arthur] 2024.07.15 19:05:20.378207 [ 3167752 ] {e27feb33-49ec-4366-ac46-dfde45fd03ed} <Error> executeQuery: Code: 434. DB::Exception: Cannot parse 'test_7lirz7ec/00825_protobuf_format_array_3dim.proto' file, found an error at line -1, column 0, File not found.: The table structure cannot be extracted from a Protobuf format file. You can specify the structure manually. (CANNOT_PARSE_PROTOBUF_SCHEMA) (version 24.7.1.1) (from 127.0.0.1:41240) (comment: 02149_external_schema_inference.sh) (in query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'Protobuf') settings format_schema='test_7lirz7ec/00825_protobuf_format_array_3dim:ABC'), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<String&, String, String, String&>(int, FormatStringHelperImpl<std::type_identity<String&>::type, std::type_identity<String>::type, std::type_identity<String>::type, std::type_identity<String&>::type>, String&, String&&, String&&, String&) @ 0x00000000125bc10b
4. /home/arthur/ClickHouse/src/Formats/ProtobufSchemas.cpp:0: DB::ProtobufSchemas::ImporterWithSourceTree::import(String const&, String const&) @ 0x00000000125bbe25
5. /home/arthur/ClickHouse/src/Formats/ProtobufSchemas.cpp:0: DB::ProtobufSchemas::getMessageTypeForFormatSchema(DB::FormatSchemaInfo const&, DB::ProtobufSchemas::WithEnvelope, String const&) @ 0x00000000125bba41
6. /home/arthur/ClickHouse/src/Processors/Formats/Impl/ProtobufRowInputFormat.cpp:137: DB::ProtobufSchemaReader::readSchema() @ 0x00000000127dcfc1
7. /home/arthur/ClickHouse/src/Formats/ReadSchemaUtils.cpp:0: DB::readSchemaFromFormatImpl(std::optional<String>, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125bd755
8. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::readSchemaFromFormat(String const&, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125c18a2
9. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:344: DB::StorageFile::getTableStructureAndFormatFromFileImpl(std::optional<String>, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5b537
10. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::StorageFile::getTableStructureFromFile(String const&, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5bed7
11. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:260: DB::TableFunctionFile::getActualTableStructure(std::shared_ptr<DB::Context const>, bool) const @ 0x000000000fd1d106
12. /home/arthur/ClickHouse/contrib/boost/boost/multi_index_container.hpp:640: DB::InterpreterDescribeQuery::fillColumnsFromTableFunction(DB::ASTTableExpression const&) @ 0x0000000011346131
13. /home/arthur/ClickHouse/src/Interpreters/InterpreterDescribeQuery.cpp:0: DB::InterpreterDescribeQuery::execute() @ 0x00000000113454f7
14. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
15. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
16. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
17. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
18. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
19. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
20. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
21. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
22. ? @ 0x00007d28d949ca94
23. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 434. DB::Exception: Received from localhost:9000. DB::Exception: Cannot parse 'test_7lirz7ec/00825_protobuf_format_array_3dim.proto' file, found an error at line -1, column 0, File not found.: The table structure cannot be extracted from a Protobuf format file. You can specify the structure manually. (CANNOT_PARSE_PROTOBUF_SCHEMA)
(query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'Protobuf') settings format_schema='test_7lirz7ec/00825_protobuf_format_array_3dim:ABC')
[arthur] 2024.07.15 19:05:20.622255 [ 3188205 ] {ad37fa8e-7699-4cc4-9d9b-f4729ddfb49a} <Error> executeQuery: Code: 434. DB::Exception: Cannot parse 'test_7lirz7ec/00825_protobuf_format_array_of_arrays.proto' file, found an error at line -1, column 0, File not found.: The table structure cannot be extracted from a Protobuf format file. You can specify the structure manually. (CANNOT_PARSE_PROTOBUF_SCHEMA) (version 24.7.1.1) (from 127.0.0.1:41392) (comment: 02149_external_schema_inference.sh) (in query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'Protobuf') settings format_schema='test_7lirz7ec/00825_protobuf_format_array_of_arrays:AA'), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<String&, String, String, String&>(int, FormatStringHelperImpl<std::type_identity<String&>::type, std::type_identity<String>::type, std::type_identity<String>::type, std::type_identity<String&>::type>, String&, String&&, String&&, String&) @ 0x00000000125bc10b
4. /home/arthur/ClickHouse/src/Formats/ProtobufSchemas.cpp:0: DB::ProtobufSchemas::ImporterWithSourceTree::import(String const&, String const&) @ 0x00000000125bbe25
5. /home/arthur/ClickHouse/src/Formats/ProtobufSchemas.cpp:0: DB::ProtobufSchemas::getMessageTypeForFormatSchema(DB::FormatSchemaInfo const&, DB::ProtobufSchemas::WithEnvelope, String const&) @ 0x00000000125bba41
6. /home/arthur/ClickHouse/src/Processors/Formats/Impl/ProtobufRowInputFormat.cpp:137: DB::ProtobufSchemaReader::readSchema() @ 0x00000000127dcfc1
7. /home/arthur/ClickHouse/src/Formats/ReadSchemaUtils.cpp:0: DB::readSchemaFromFormatImpl(std::optional<String>, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125bd755
8. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::readSchemaFromFormat(String const&, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125c18a2
9. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:344: DB::StorageFile::getTableStructureAndFormatFromFileImpl(std::optional<String>, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5b537
10. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::StorageFile::getTableStructureFromFile(String const&, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5bed7
11. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:260: DB::TableFunctionFile::getActualTableStructure(std::shared_ptr<DB::Context const>, bool) const @ 0x000000000fd1d106
12. /home/arthur/ClickHouse/contrib/boost/boost/multi_index_container.hpp:640: DB::InterpreterDescribeQuery::fillColumnsFromTableFunction(DB::ASTTableExpression const&) @ 0x0000000011346131
13. /home/arthur/ClickHouse/src/Interpreters/InterpreterDescribeQuery.cpp:0: DB::InterpreterDescribeQuery::execute() @ 0x00000000113454f7
14. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
15. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
16. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
17. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
18. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
19. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
20. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
21. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
22. ? @ 0x00007d28d949ca94
23. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 434. DB::Exception: Received from localhost:9000. DB::Exception: Cannot parse 'test_7lirz7ec/00825_protobuf_format_array_of_arrays.proto' file, found an error at line -1, column 0, File not found.: The table structure cannot be extracted from a Protobuf format file. You can specify the structure manually. (CANNOT_PARSE_PROTOBUF_SCHEMA)
(query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'Protobuf') settings format_schema='test_7lirz7ec/00825_protobuf_format_array_of_arrays:AA')
[arthur] 2024.07.15 19:05:20.864235 [ 3188187 ] {ce26c758-cf36-4d9b-9179-5309e290c470} <Error> executeQuery: Code: 434. DB::Exception: Cannot parse 'test_7lirz7ec/00825_protobuf_format_enum_mapping.proto' file, found an error at line -1, column 0, File not found.: The table structure cannot be extracted from a Protobuf format file. You can specify the structure manually. (CANNOT_PARSE_PROTOBUF_SCHEMA) (version 24.7.1.1) (from 127.0.0.1:41552) (comment: 02149_external_schema_inference.sh) (in query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'Protobuf') settings format_schema='test_7lirz7ec/00825_protobuf_format_enum_mapping.proto:EnumMessage'), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<String&, String, String, String&>(int, FormatStringHelperImpl<std::type_identity<String&>::type, std::type_identity<String>::type, std::type_identity<String>::type, std::type_identity<String&>::type>, String&, String&&, String&&, String&) @ 0x00000000125bc10b
4. /home/arthur/ClickHouse/src/Formats/ProtobufSchemas.cpp:0: DB::ProtobufSchemas::ImporterWithSourceTree::import(String const&, String const&) @ 0x00000000125bbe25
5. /home/arthur/ClickHouse/src/Formats/ProtobufSchemas.cpp:0: DB::ProtobufSchemas::getMessageTypeForFormatSchema(DB::FormatSchemaInfo const&, DB::ProtobufSchemas::WithEnvelope, String const&) @ 0x00000000125bba41
6. /home/arthur/ClickHouse/src/Processors/Formats/Impl/ProtobufRowInputFormat.cpp:137: DB::ProtobufSchemaReader::readSchema() @ 0x00000000127dcfc1
7. /home/arthur/ClickHouse/src/Formats/ReadSchemaUtils.cpp:0: DB::readSchemaFromFormatImpl(std::optional<String>, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125bd755
8. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::readSchemaFromFormat(String const&, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125c18a2
9. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:344: DB::StorageFile::getTableStructureAndFormatFromFileImpl(std::optional<String>, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5b537
10. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::StorageFile::getTableStructureFromFile(String const&, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5bed7
11. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:260: DB::TableFunctionFile::getActualTableStructure(std::shared_ptr<DB::Context const>, bool) const @ 0x000000000fd1d106
12. /home/arthur/ClickHouse/contrib/boost/boost/multi_index_container.hpp:640: DB::InterpreterDescribeQuery::fillColumnsFromTableFunction(DB::ASTTableExpression const&) @ 0x0000000011346131
13. /home/arthur/ClickHouse/src/Interpreters/InterpreterDescribeQuery.cpp:0: DB::InterpreterDescribeQuery::execute() @ 0x00000000113454f7
14. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
15. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
16. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
17. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
18. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
19. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
20. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
21. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
22. ? @ 0x00007d28d949ca94
23. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 434. DB::Exception: Received from localhost:9000. DB::Exception: Cannot parse 'test_7lirz7ec/00825_protobuf_format_enum_mapping.proto' file, found an error at line -1, column 0, File not found.: The table structure cannot be extracted from a Protobuf format file. You can specify the structure manually. (CANNOT_PARSE_PROTOBUF_SCHEMA)
(query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'Protobuf') settings format_schema='test_7lirz7ec/00825_protobuf_format_enum_mapping.proto:EnumMessage')
[arthur] 2024.07.15 19:05:21.073306 [ 3188212 ] {57ed8e67-b85f-4041-a704-fe9e4d277faa} <Error> executeQuery: Code: 434. DB::Exception: Cannot parse 'test_7lirz7ec/00825_protobuf_format_map.proto' file, found an error at line -1, column 0, File not found.: The table structure cannot be extracted from a Protobuf format file. You can specify the structure manually. (CANNOT_PARSE_PROTOBUF_SCHEMA) (version 24.7.1.1) (from 127.0.0.1:41688) (comment: 02149_external_schema_inference.sh) (in query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'Protobuf') settings format_schema='test_7lirz7ec/00825_protobuf_format_map:Message'), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<String&, String, String, String&>(int, FormatStringHelperImpl<std::type_identity<String&>::type, std::type_identity<String>::type, std::type_identity<String>::type, std::type_identity<String&>::type>, String&, String&&, String&&, String&) @ 0x00000000125bc10b
4. /home/arthur/ClickHouse/src/Formats/ProtobufSchemas.cpp:0: DB::ProtobufSchemas::ImporterWithSourceTree::import(String const&, String const&) @ 0x00000000125bbe25
5. /home/arthur/ClickHouse/src/Formats/ProtobufSchemas.cpp:0: DB::ProtobufSchemas::getMessageTypeForFormatSchema(DB::FormatSchemaInfo const&, DB::ProtobufSchemas::WithEnvelope, String const&) @ 0x00000000125bba41
6. /home/arthur/ClickHouse/src/Processors/Formats/Impl/ProtobufRowInputFormat.cpp:137: DB::ProtobufSchemaReader::readSchema() @ 0x00000000127dcfc1
7. /home/arthur/ClickHouse/src/Formats/ReadSchemaUtils.cpp:0: DB::readSchemaFromFormatImpl(std::optional<String>, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125bd755
8. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::readSchemaFromFormat(String const&, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125c18a2
9. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:344: DB::StorageFile::getTableStructureAndFormatFromFileImpl(std::optional<String>, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5b537
10. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::StorageFile::getTableStructureFromFile(String const&, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5bed7
11. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:260: DB::TableFunctionFile::getActualTableStructure(std::shared_ptr<DB::Context const>, bool) const @ 0x000000000fd1d106
12. /home/arthur/ClickHouse/contrib/boost/boost/multi_index_container.hpp:640: DB::InterpreterDescribeQuery::fillColumnsFromTableFunction(DB::ASTTableExpression const&) @ 0x0000000011346131
13. /home/arthur/ClickHouse/src/Interpreters/InterpreterDescribeQuery.cpp:0: DB::InterpreterDescribeQuery::execute() @ 0x00000000113454f7
14. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
15. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
16. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
17. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
18. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
19. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
20. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
21. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
22. ? @ 0x00007d28d949ca94
23. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 434. DB::Exception: Received from localhost:9000. DB::Exception: Cannot parse 'test_7lirz7ec/00825_protobuf_format_map.proto' file, found an error at line -1, column 0, File not found.: The table structure cannot be extracted from a Protobuf format file. You can specify the structure manually. (CANNOT_PARSE_PROTOBUF_SCHEMA)
(query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'Protobuf') settings format_schema='test_7lirz7ec/00825_protobuf_format_map:Message')
[arthur] 2024.07.15 19:05:21.276485 [ 3188209 ] {7c73e5b3-12e8-4630-8e3b-160126a83c4d} <Error> executeQuery: Code: 434. DB::Exception: Cannot parse 'test_7lirz7ec/00825_protobuf_format_nested_in_nested.proto' file, found an error at line -1, column 0, File not found.: The table structure cannot be extracted from a Protobuf format file. You can specify the structure manually. (CANNOT_PARSE_PROTOBUF_SCHEMA) (version 24.7.1.1) (from 127.0.0.1:41784) (comment: 02149_external_schema_inference.sh) (in query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'Protobuf') settings format_schema='test_7lirz7ec/00825_protobuf_format_nested_in_nested:MessageType'), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<String&, String, String, String&>(int, FormatStringHelperImpl<std::type_identity<String&>::type, std::type_identity<String>::type, std::type_identity<String>::type, std::type_identity<String&>::type>, String&, String&&, String&&, String&) @ 0x00000000125bc10b
4. /home/arthur/ClickHouse/src/Formats/ProtobufSchemas.cpp:0: DB::ProtobufSchemas::ImporterWithSourceTree::import(String const&, String const&) @ 0x00000000125bbe25
5. /home/arthur/ClickHouse/src/Formats/ProtobufSchemas.cpp:0: DB::ProtobufSchemas::getMessageTypeForFormatSchema(DB::FormatSchemaInfo const&, DB::ProtobufSchemas::WithEnvelope, String const&) @ 0x00000000125bba41
6. /home/arthur/ClickHouse/src/Processors/Formats/Impl/ProtobufRowInputFormat.cpp:137: DB::ProtobufSchemaReader::readSchema() @ 0x00000000127dcfc1
7. /home/arthur/ClickHouse/src/Formats/ReadSchemaUtils.cpp:0: DB::readSchemaFromFormatImpl(std::optional<String>, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125bd755
8. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::readSchemaFromFormat(String const&, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125c18a2
9. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:344: DB::StorageFile::getTableStructureAndFormatFromFileImpl(std::optional<String>, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5b537
10. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::StorageFile::getTableStructureFromFile(String const&, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5bed7
11. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:260: DB::TableFunctionFile::getActualTableStructure(std::shared_ptr<DB::Context const>, bool) const @ 0x000000000fd1d106
12. /home/arthur/ClickHouse/contrib/boost/boost/multi_index_container.hpp:640: DB::InterpreterDescribeQuery::fillColumnsFromTableFunction(DB::ASTTableExpression const&) @ 0x0000000011346131
13. /home/arthur/ClickHouse/src/Interpreters/InterpreterDescribeQuery.cpp:0: DB::InterpreterDescribeQuery::execute() @ 0x00000000113454f7
14. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
15. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
16. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
17. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
18. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
19. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
20. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
21. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
22. ? @ 0x00007d28d949ca94
23. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 434. DB::Exception: Received from localhost:9000. DB::Exception: Cannot parse 'test_7lirz7ec/00825_protobuf_format_nested_in_nested.proto' file, found an error at line -1, column 0, File not found.: The table structure cannot be extracted from a Protobuf format file. You can specify the structure manually. (CANNOT_PARSE_PROTOBUF_SCHEMA)
(query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'Protobuf') settings format_schema='test_7lirz7ec/00825_protobuf_format_nested_in_nested:MessageType')
[arthur] 2024.07.15 19:05:21.475555 [ 3188212 ] {e05040af-4058-476e-8533-7b82917d4931} <Error> executeQuery: Code: 434. DB::Exception: Cannot parse 'test_7lirz7ec/00825_protobuf_format_persons.proto' file, found an error at line -1, column 0, File not found.: The table structure cannot be extracted from a Protobuf format file. You can specify the structure manually. (CANNOT_PARSE_PROTOBUF_SCHEMA) (version 24.7.1.1) (from 127.0.0.1:41858) (comment: 02149_external_schema_inference.sh) (in query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'Protobuf') settings format_schema='test_7lirz7ec/00825_protobuf_format_persons:Person'), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<String&, String, String, String&>(int, FormatStringHelperImpl<std::type_identity<String&>::type, std::type_identity<String>::type, std::type_identity<String>::type, std::type_identity<String&>::type>, String&, String&&, String&&, String&) @ 0x00000000125bc10b
4. /home/arthur/ClickHouse/src/Formats/ProtobufSchemas.cpp:0: DB::ProtobufSchemas::ImporterWithSourceTree::import(String const&, String const&) @ 0x00000000125bbe25
5. /home/arthur/ClickHouse/src/Formats/ProtobufSchemas.cpp:0: DB::ProtobufSchemas::getMessageTypeForFormatSchema(DB::FormatSchemaInfo const&, DB::ProtobufSchemas::WithEnvelope, String const&) @ 0x00000000125bba41
6. /home/arthur/ClickHouse/src/Processors/Formats/Impl/ProtobufRowInputFormat.cpp:137: DB::ProtobufSchemaReader::readSchema() @ 0x00000000127dcfc1
7. /home/arthur/ClickHouse/src/Formats/ReadSchemaUtils.cpp:0: DB::readSchemaFromFormatImpl(std::optional<String>, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125bd755
8. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::readSchemaFromFormat(String const&, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125c18a2
9. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:344: DB::StorageFile::getTableStructureAndFormatFromFileImpl(std::optional<String>, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5b537
10. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::StorageFile::getTableStructureFromFile(String const&, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5bed7
11. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:260: DB::TableFunctionFile::getActualTableStructure(std::shared_ptr<DB::Context const>, bool) const @ 0x000000000fd1d106
12. /home/arthur/ClickHouse/contrib/boost/boost/multi_index_container.hpp:640: DB::InterpreterDescribeQuery::fillColumnsFromTableFunction(DB::ASTTableExpression const&) @ 0x0000000011346131
13. /home/arthur/ClickHouse/src/Interpreters/InterpreterDescribeQuery.cpp:0: DB::InterpreterDescribeQuery::execute() @ 0x00000000113454f7
14. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
15. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
16. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
17. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
18. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
19. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
20. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
21. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
22. ? @ 0x00007d28d949ca94
23. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 434. DB::Exception: Received from localhost:9000. DB::Exception: Cannot parse 'test_7lirz7ec/00825_protobuf_format_persons.proto' file, found an error at line -1, column 0, File not found.: The table structure cannot be extracted from a Protobuf format file. You can specify the structure manually. (CANNOT_PARSE_PROTOBUF_SCHEMA)
(query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'Protobuf') settings format_schema='test_7lirz7ec/00825_protobuf_format_persons:Person')
[arthur] 2024.07.15 19:05:21.708922 [ 3188196 ] {c44615f3-db24-4fdf-bff6-eab0cc451f49} <Error> executeQuery: Code: 434. DB::Exception: Cannot parse 'test_7lirz7ec/00825_protobuf_format_persons.proto' file, found an error at line -1, column 0, File not found.: The table structure cannot be extracted from a Protobuf format file. You can specify the structure manually. (CANNOT_PARSE_PROTOBUF_SCHEMA) (version 24.7.1.1) (from 127.0.0.1:41974) (comment: 02149_external_schema_inference.sh) (in query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'Protobuf') settings format_schema='test_7lirz7ec/00825_protobuf_format_persons:AltPerson'), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<String&, String, String, String&>(int, FormatStringHelperImpl<std::type_identity<String&>::type, std::type_identity<String>::type, std::type_identity<String>::type, std::type_identity<String&>::type>, String&, String&&, String&&, String&) @ 0x00000000125bc10b
4. /home/arthur/ClickHouse/src/Formats/ProtobufSchemas.cpp:0: DB::ProtobufSchemas::ImporterWithSourceTree::import(String const&, String const&) @ 0x00000000125bbe25
5. /home/arthur/ClickHouse/src/Formats/ProtobufSchemas.cpp:0: DB::ProtobufSchemas::getMessageTypeForFormatSchema(DB::FormatSchemaInfo const&, DB::ProtobufSchemas::WithEnvelope, String const&) @ 0x00000000125bba41
6. /home/arthur/ClickHouse/src/Processors/Formats/Impl/ProtobufRowInputFormat.cpp:137: DB::ProtobufSchemaReader::readSchema() @ 0x00000000127dcfc1
7. /home/arthur/ClickHouse/src/Formats/ReadSchemaUtils.cpp:0: DB::readSchemaFromFormatImpl(std::optional<String>, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125bd755
8. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::readSchemaFromFormat(String const&, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125c18a2
9. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:344: DB::StorageFile::getTableStructureAndFormatFromFileImpl(std::optional<String>, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5b537
10. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::StorageFile::getTableStructureFromFile(String const&, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5bed7
11. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:260: DB::TableFunctionFile::getActualTableStructure(std::shared_ptr<DB::Context const>, bool) const @ 0x000000000fd1d106
12. /home/arthur/ClickHouse/contrib/boost/boost/multi_index_container.hpp:640: DB::InterpreterDescribeQuery::fillColumnsFromTableFunction(DB::ASTTableExpression const&) @ 0x0000000011346131
13. /home/arthur/ClickHouse/src/Interpreters/InterpreterDescribeQuery.cpp:0: DB::InterpreterDescribeQuery::execute() @ 0x00000000113454f7
14. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
15. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
16. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
17. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
18. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
19. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
20. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
21. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
22. ? @ 0x00007d28d949ca94
23. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 434. DB::Exception: Received from localhost:9000. DB::Exception: Cannot parse 'test_7lirz7ec/00825_protobuf_format_persons.proto' file, found an error at line -1, column 0, File not found.: The table structure cannot be extracted from a Protobuf format file. You can specify the structure manually. (CANNOT_PARSE_PROTOBUF_SCHEMA)
(query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'Protobuf') settings format_schema='test_7lirz7ec/00825_protobuf_format_persons:AltPerson')
[arthur] 2024.07.15 19:05:21.883522 [ 3188183 ] {ffcf06b9-7f55-4e7a-b0fd-2de39e2f4d89} <Error> executeQuery: Code: 434. DB::Exception: Cannot parse 'test_7lirz7ec/00825_protobuf_format_persons.proto' file, found an error at line -1, column 0, File not found.: The table structure cannot be extracted from a Protobuf format file. You can specify the structure manually. (CANNOT_PARSE_PROTOBUF_SCHEMA) (version 24.7.1.1) (from 127.0.0.1:42098) (comment: 02149_external_schema_inference.sh) (in query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'Protobuf') settings format_schema='test_7lirz7ec/00825_protobuf_format_persons:StrPerson'), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<String&, String, String, String&>(int, FormatStringHelperImpl<std::type_identity<String&>::type, std::type_identity<String>::type, std::type_identity<String>::type, std::type_identity<String&>::type>, String&, String&&, String&&, String&) @ 0x00000000125bc10b
4. /home/arthur/ClickHouse/src/Formats/ProtobufSchemas.cpp:0: DB::ProtobufSchemas::ImporterWithSourceTree::import(String const&, String const&) @ 0x00000000125bbe25
5. /home/arthur/ClickHouse/src/Formats/ProtobufSchemas.cpp:0: DB::ProtobufSchemas::getMessageTypeForFormatSchema(DB::FormatSchemaInfo const&, DB::ProtobufSchemas::WithEnvelope, String const&) @ 0x00000000125bba41
6. /home/arthur/ClickHouse/src/Processors/Formats/Impl/ProtobufRowInputFormat.cpp:137: DB::ProtobufSchemaReader::readSchema() @ 0x00000000127dcfc1
7. /home/arthur/ClickHouse/src/Formats/ReadSchemaUtils.cpp:0: DB::readSchemaFromFormatImpl(std::optional<String>, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125bd755
8. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::readSchemaFromFormat(String const&, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125c18a2
9. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:344: DB::StorageFile::getTableStructureAndFormatFromFileImpl(std::optional<String>, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5b537
10. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::StorageFile::getTableStructureFromFile(String const&, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5bed7
11. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:260: DB::TableFunctionFile::getActualTableStructure(std::shared_ptr<DB::Context const>, bool) const @ 0x000000000fd1d106
12. /home/arthur/ClickHouse/contrib/boost/boost/multi_index_container.hpp:640: DB::InterpreterDescribeQuery::fillColumnsFromTableFunction(DB::ASTTableExpression const&) @ 0x0000000011346131
13. /home/arthur/ClickHouse/src/Interpreters/InterpreterDescribeQuery.cpp:0: DB::InterpreterDescribeQuery::execute() @ 0x00000000113454f7
14. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
15. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
16. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
17. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
18. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
19. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
20. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
21. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
22. ? @ 0x00007d28d949ca94
23. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 434. DB::Exception: Received from localhost:9000. DB::Exception: Cannot parse 'test_7lirz7ec/00825_protobuf_format_persons.proto' file, found an error at line -1, column 0, File not found.: The table structure cannot be extracted from a Protobuf format file. You can specify the structure manually. (CANNOT_PARSE_PROTOBUF_SCHEMA)
(query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'Protobuf') settings format_schema='test_7lirz7ec/00825_protobuf_format_persons:StrPerson')
[arthur] 2024.07.15 19:05:22.084102 [ 3188205 ] {4d8a6ec9-56ca-45f8-822c-f380da568ff8} <Error> executeQuery: Code: 434. DB::Exception: Cannot parse 'test_7lirz7ec/00825_protobuf_format_persons_syntax2.proto' file, found an error at line -1, column 0, File not found.: The table structure cannot be extracted from a Protobuf format file. You can specify the structure manually. (CANNOT_PARSE_PROTOBUF_SCHEMA) (version 24.7.1.1) (from 127.0.0.1:42178) (comment: 02149_external_schema_inference.sh) (in query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'Protobuf') settings format_schema='test_7lirz7ec/00825_protobuf_format_persons_syntax2:Syntax2Person'), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<String&, String, String, String&>(int, FormatStringHelperImpl<std::type_identity<String&>::type, std::type_identity<String>::type, std::type_identity<String>::type, std::type_identity<String&>::type>, String&, String&&, String&&, String&) @ 0x00000000125bc10b
4. /home/arthur/ClickHouse/src/Formats/ProtobufSchemas.cpp:0: DB::ProtobufSchemas::ImporterWithSourceTree::import(String const&, String const&) @ 0x00000000125bbe25
5. /home/arthur/ClickHouse/src/Formats/ProtobufSchemas.cpp:0: DB::ProtobufSchemas::getMessageTypeForFormatSchema(DB::FormatSchemaInfo const&, DB::ProtobufSchemas::WithEnvelope, String const&) @ 0x00000000125bba41
6. /home/arthur/ClickHouse/src/Processors/Formats/Impl/ProtobufRowInputFormat.cpp:137: DB::ProtobufSchemaReader::readSchema() @ 0x00000000127dcfc1
7. /home/arthur/ClickHouse/src/Formats/ReadSchemaUtils.cpp:0: DB::readSchemaFromFormatImpl(std::optional<String>, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125bd755
8. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::readSchemaFromFormat(String const&, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125c18a2
9. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:344: DB::StorageFile::getTableStructureAndFormatFromFileImpl(std::optional<String>, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5b537
10. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::StorageFile::getTableStructureFromFile(String const&, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5bed7
11. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:260: DB::TableFunctionFile::getActualTableStructure(std::shared_ptr<DB::Context const>, bool) const @ 0x000000000fd1d106
12. /home/arthur/ClickHouse/contrib/boost/boost/multi_index_container.hpp:640: DB::InterpreterDescribeQuery::fillColumnsFromTableFunction(DB::ASTTableExpression const&) @ 0x0000000011346131
13. /home/arthur/ClickHouse/src/Interpreters/InterpreterDescribeQuery.cpp:0: DB::InterpreterDescribeQuery::execute() @ 0x00000000113454f7
14. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
15. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
16. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
17. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
18. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
19. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
20. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
21. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
22. ? @ 0x00007d28d949ca94
23. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 434. DB::Exception: Received from localhost:9000. DB::Exception: Cannot parse 'test_7lirz7ec/00825_protobuf_format_persons_syntax2.proto' file, found an error at line -1, column 0, File not found.: The table structure cannot be extracted from a Protobuf format file. You can specify the structure manually. (CANNOT_PARSE_PROTOBUF_SCHEMA)
(query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'Protobuf') settings format_schema='test_7lirz7ec/00825_protobuf_format_persons_syntax2:Syntax2Person')
[arthur] 2024.07.15 19:05:22.289488 [ 3167752 ] {a1246ed9-8d51-4aa3-9206-c2d10e2f5987} <Error> executeQuery: Code: 434. DB::Exception: Cannot parse 'test_7lirz7ec/00825_protobuf_format_skipped_column_in_nested.proto' file, found an error at line -1, column 0, File not found.: The table structure cannot be extracted from a Protobuf format file. You can specify the structure manually. (CANNOT_PARSE_PROTOBUF_SCHEMA) (version 24.7.1.1) (from 127.0.0.1:42240) (comment: 02149_external_schema_inference.sh) (in query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'Protobuf') settings format_schema='test_7lirz7ec/00825_protobuf_format_skipped_column_in_nested:UpdateMessage'), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<String&, String, String, String&>(int, FormatStringHelperImpl<std::type_identity<String&>::type, std::type_identity<String>::type, std::type_identity<String>::type, std::type_identity<String&>::type>, String&, String&&, String&&, String&) @ 0x00000000125bc10b
4. /home/arthur/ClickHouse/src/Formats/ProtobufSchemas.cpp:0: DB::ProtobufSchemas::ImporterWithSourceTree::import(String const&, String const&) @ 0x00000000125bbe25
5. /home/arthur/ClickHouse/src/Formats/ProtobufSchemas.cpp:0: DB::ProtobufSchemas::getMessageTypeForFormatSchema(DB::FormatSchemaInfo const&, DB::ProtobufSchemas::WithEnvelope, String const&) @ 0x00000000125bba41
6. /home/arthur/ClickHouse/src/Processors/Formats/Impl/ProtobufRowInputFormat.cpp:137: DB::ProtobufSchemaReader::readSchema() @ 0x00000000127dcfc1
7. /home/arthur/ClickHouse/src/Formats/ReadSchemaUtils.cpp:0: DB::readSchemaFromFormatImpl(std::optional<String>, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125bd755
8. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::readSchemaFromFormat(String const&, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125c18a2
9. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:344: DB::StorageFile::getTableStructureAndFormatFromFileImpl(std::optional<String>, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5b537
10. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::StorageFile::getTableStructureFromFile(String const&, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5bed7
11. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:260: DB::TableFunctionFile::getActualTableStructure(std::shared_ptr<DB::Context const>, bool) const @ 0x000000000fd1d106
12. /home/arthur/ClickHouse/contrib/boost/boost/multi_index_container.hpp:640: DB::InterpreterDescribeQuery::fillColumnsFromTableFunction(DB::ASTTableExpression const&) @ 0x0000000011346131
13. /home/arthur/ClickHouse/src/Interpreters/InterpreterDescribeQuery.cpp:0: DB::InterpreterDescribeQuery::execute() @ 0x00000000113454f7
14. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
15. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
16. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
17. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
18. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
19. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
20. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
21. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
22. ? @ 0x00007d28d949ca94
23. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 434. DB::Exception: Received from localhost:9000. DB::Exception: Cannot parse 'test_7lirz7ec/00825_protobuf_format_skipped_column_in_nested.proto' file, found an error at line -1, column 0, File not found.: The table structure cannot be extracted from a Protobuf format file. You can specify the structure manually. (CANNOT_PARSE_PROTOBUF_SCHEMA)
(query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'Protobuf') settings format_schema='test_7lirz7ec/00825_protobuf_format_skipped_column_in_nested:UpdateMessage')
[arthur] 2024.07.15 19:05:22.517620 [ 3188196 ] {0c0245ea-cd04-423c-9677-780c29c0ab61} <Error> executeQuery: Code: 107. DB::Exception: Cannot open CapnProto schema, file /home/arthur/ClickHouse/programs/server/format_schemas/test_7lirz7ec/02030_capnp_enum.capnp doesn't exists: The table structure cannot be extracted from a CapnProto format file. You can specify the structure manually. (FILE_DOESNT_EXIST) (version 24.7.1.1) (from 127.0.0.1:42336) (comment: 02149_external_schema_inference.sh) (in query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'CapnProto') settings format_schema='test_7lirz7ec/02030_capnp_enum:Message'), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<String>(int, FormatStringHelperImpl<std::type_identity<String>::type>, String&&) @ 0x0000000006afed6b
4. /home/arthur/ClickHouse/src/Formats/CapnProtoSchema.cpp:0: DB::CapnProtoSchemaParser::getMessageSchema(DB::FormatSchemaInfo const&) @ 0x00000000126a5966
5. /home/arthur/ClickHouse/src/Processors/Formats/Impl/CapnProtoRowInputFormat.cpp:131: DB::CapnProtoSchemaReader::readSchema() @ 0x00000000126a45d5
6. /home/arthur/ClickHouse/src/Formats/ReadSchemaUtils.cpp:0: DB::readSchemaFromFormatImpl(std::optional<String>, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125bd755
7. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::readSchemaFromFormat(String const&, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125c18a2
8. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:344: DB::StorageFile::getTableStructureAndFormatFromFileImpl(std::optional<String>, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5b537
9. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::StorageFile::getTableStructureFromFile(String const&, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5bed7
10. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:260: DB::TableFunctionFile::getActualTableStructure(std::shared_ptr<DB::Context const>, bool) const @ 0x000000000fd1d106
11. /home/arthur/ClickHouse/contrib/boost/boost/multi_index_container.hpp:640: DB::InterpreterDescribeQuery::fillColumnsFromTableFunction(DB::ASTTableExpression const&) @ 0x0000000011346131
12. /home/arthur/ClickHouse/src/Interpreters/InterpreterDescribeQuery.cpp:0: DB::InterpreterDescribeQuery::execute() @ 0x00000000113454f7
13. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
14. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
15. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
16. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
17. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
18. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
19. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
20. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
21. ? @ 0x00007d28d949ca94
22. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 107. DB::Exception: Received from localhost:9000. DB::Exception: Cannot open CapnProto schema, file /home/arthur/ClickHouse/programs/server/format_schemas/test_7lirz7ec/02030_capnp_enum.capnp doesn't exists: The table structure cannot be extracted from a CapnProto format file. You can specify the structure manually. (FILE_DOESNT_EXIST)
(query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'CapnProto') settings format_schema='test_7lirz7ec/02030_capnp_enum:Message')
[arthur] 2024.07.15 19:05:22.698960 [ 3188201 ] {eda017d8-d22a-4cde-990d-124cc29e506e} <Error> executeQuery: Code: 107. DB::Exception: Cannot open CapnProto schema, file /home/arthur/ClickHouse/programs/server/format_schemas/test_7lirz7ec/02030_capnp_lists.capnp doesn't exists: The table structure cannot be extracted from a CapnProto format file. You can specify the structure manually. (FILE_DOESNT_EXIST) (version 24.7.1.1) (from 127.0.0.1:42490) (comment: 02149_external_schema_inference.sh) (in query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'CapnProto') settings format_schema='test_7lirz7ec/02030_capnp_lists:Message'), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<String>(int, FormatStringHelperImpl<std::type_identity<String>::type>, String&&) @ 0x0000000006afed6b
4. /home/arthur/ClickHouse/src/Formats/CapnProtoSchema.cpp:0: DB::CapnProtoSchemaParser::getMessageSchema(DB::FormatSchemaInfo const&) @ 0x00000000126a5966
5. /home/arthur/ClickHouse/src/Processors/Formats/Impl/CapnProtoRowInputFormat.cpp:131: DB::CapnProtoSchemaReader::readSchema() @ 0x00000000126a45d5
6. /home/arthur/ClickHouse/src/Formats/ReadSchemaUtils.cpp:0: DB::readSchemaFromFormatImpl(std::optional<String>, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125bd755
7. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::readSchemaFromFormat(String const&, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125c18a2
8. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:344: DB::StorageFile::getTableStructureAndFormatFromFileImpl(std::optional<String>, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5b537
9. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::StorageFile::getTableStructureFromFile(String const&, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5bed7
10. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:260: DB::TableFunctionFile::getActualTableStructure(std::shared_ptr<DB::Context const>, bool) const @ 0x000000000fd1d106
11. /home/arthur/ClickHouse/contrib/boost/boost/multi_index_container.hpp:640: DB::InterpreterDescribeQuery::fillColumnsFromTableFunction(DB::ASTTableExpression const&) @ 0x0000000011346131
12. /home/arthur/ClickHouse/src/Interpreters/InterpreterDescribeQuery.cpp:0: DB::InterpreterDescribeQuery::execute() @ 0x00000000113454f7
13. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
14. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
15. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
16. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
17. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
18. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
19. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
20. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
21. ? @ 0x00007d28d949ca94
22. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 107. DB::Exception: Received from localhost:9000. DB::Exception: Cannot open CapnProto schema, file /home/arthur/ClickHouse/programs/server/format_schemas/test_7lirz7ec/02030_capnp_lists.capnp doesn't exists: The table structure cannot be extracted from a CapnProto format file. You can specify the structure manually. (FILE_DOESNT_EXIST)
(query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'CapnProto') settings format_schema='test_7lirz7ec/02030_capnp_lists:Message')
[arthur] 2024.07.15 19:05:22.934023 [ 3188209 ] {73867503-b9b5-402c-900e-779ea872c2d8} <Error> executeQuery: Code: 107. DB::Exception: Cannot open CapnProto schema, file /home/arthur/ClickHouse/programs/server/format_schemas/test_7lirz7ec/02030_capnp_low_cardinality.capnp doesn't exists: The table structure cannot be extracted from a CapnProto format file. You can specify the structure manually. (FILE_DOESNT_EXIST) (version 24.7.1.1) (from 127.0.0.1:42584) (comment: 02149_external_schema_inference.sh) (in query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'CapnProto') settings format_schema='test_7lirz7ec/02030_capnp_low_cardinality:Message'), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<String>(int, FormatStringHelperImpl<std::type_identity<String>::type>, String&&) @ 0x0000000006afed6b
4. /home/arthur/ClickHouse/src/Formats/CapnProtoSchema.cpp:0: DB::CapnProtoSchemaParser::getMessageSchema(DB::FormatSchemaInfo const&) @ 0x00000000126a5966
5. /home/arthur/ClickHouse/src/Processors/Formats/Impl/CapnProtoRowInputFormat.cpp:131: DB::CapnProtoSchemaReader::readSchema() @ 0x00000000126a45d5
6. /home/arthur/ClickHouse/src/Formats/ReadSchemaUtils.cpp:0: DB::readSchemaFromFormatImpl(std::optional<String>, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125bd755
7. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::readSchemaFromFormat(String const&, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125c18a2
8. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:344: DB::StorageFile::getTableStructureAndFormatFromFileImpl(std::optional<String>, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5b537
9. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::StorageFile::getTableStructureFromFile(String const&, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5bed7
10. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:260: DB::TableFunctionFile::getActualTableStructure(std::shared_ptr<DB::Context const>, bool) const @ 0x000000000fd1d106
11. /home/arthur/ClickHouse/contrib/boost/boost/multi_index_container.hpp:640: DB::InterpreterDescribeQuery::fillColumnsFromTableFunction(DB::ASTTableExpression const&) @ 0x0000000011346131
12. /home/arthur/ClickHouse/src/Interpreters/InterpreterDescribeQuery.cpp:0: DB::InterpreterDescribeQuery::execute() @ 0x00000000113454f7
13. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
14. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
15. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
16. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
17. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
18. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
19. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
20. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
21. ? @ 0x00007d28d949ca94
22. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 107. DB::Exception: Received from localhost:9000. DB::Exception: Cannot open CapnProto schema, file /home/arthur/ClickHouse/programs/server/format_schemas/test_7lirz7ec/02030_capnp_low_cardinality.capnp doesn't exists: The table structure cannot be extracted from a CapnProto format file. You can specify the structure manually. (FILE_DOESNT_EXIST)
(query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'CapnProto') settings format_schema='test_7lirz7ec/02030_capnp_low_cardinality:Message')
[arthur] 2024.07.15 19:05:23.123862 [ 3167752 ] {eba856cd-91d9-4c92-9cbf-6c2d4ea40608} <Error> executeQuery: Code: 107. DB::Exception: Cannot open CapnProto schema, file /home/arthur/ClickHouse/programs/server/format_schemas/test_7lirz7ec/02030_capnp_nested_lists_and_tuples.capnp doesn't exists: The table structure cannot be extracted from a CapnProto format file. You can specify the structure manually. (FILE_DOESNT_EXIST) (version 24.7.1.1) (from 127.0.0.1:42658) (comment: 02149_external_schema_inference.sh) (in query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'CapnProto') settings format_schema='test_7lirz7ec/02030_capnp_nested_lists_and_tuples:Message'), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<String>(int, FormatStringHelperImpl<std::type_identity<String>::type>, String&&) @ 0x0000000006afed6b
4. /home/arthur/ClickHouse/src/Formats/CapnProtoSchema.cpp:0: DB::CapnProtoSchemaParser::getMessageSchema(DB::FormatSchemaInfo const&) @ 0x00000000126a5966
5. /home/arthur/ClickHouse/src/Processors/Formats/Impl/CapnProtoRowInputFormat.cpp:131: DB::CapnProtoSchemaReader::readSchema() @ 0x00000000126a45d5
6. /home/arthur/ClickHouse/src/Formats/ReadSchemaUtils.cpp:0: DB::readSchemaFromFormatImpl(std::optional<String>, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125bd755
7. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::readSchemaFromFormat(String const&, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125c18a2
8. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:344: DB::StorageFile::getTableStructureAndFormatFromFileImpl(std::optional<String>, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5b537
9. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::StorageFile::getTableStructureFromFile(String const&, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5bed7
10. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:260: DB::TableFunctionFile::getActualTableStructure(std::shared_ptr<DB::Context const>, bool) const @ 0x000000000fd1d106
11. /home/arthur/ClickHouse/contrib/boost/boost/multi_index_container.hpp:640: DB::InterpreterDescribeQuery::fillColumnsFromTableFunction(DB::ASTTableExpression const&) @ 0x0000000011346131
12. /home/arthur/ClickHouse/src/Interpreters/InterpreterDescribeQuery.cpp:0: DB::InterpreterDescribeQuery::execute() @ 0x00000000113454f7
13. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
14. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
15. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
16. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
17. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
18. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
19. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
20. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
21. ? @ 0x00007d28d949ca94
22. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 107. DB::Exception: Received from localhost:9000. DB::Exception: Cannot open CapnProto schema, file /home/arthur/ClickHouse/programs/server/format_schemas/test_7lirz7ec/02030_capnp_nested_lists_and_tuples.capnp doesn't exists: The table structure cannot be extracted from a CapnProto format file. You can specify the structure manually. (FILE_DOESNT_EXIST)
(query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'CapnProto') settings format_schema='test_7lirz7ec/02030_capnp_nested_lists_and_tuples:Message')
[arthur] 2024.07.15 19:05:23.301595 [ 3188187 ] {6d81fdcc-3250-4dc5-a9bf-984937a37c73} <Error> executeQuery: Code: 107. DB::Exception: Cannot open CapnProto schema, file /home/arthur/ClickHouse/programs/server/format_schemas/test_7lirz7ec/02030_capnp_nested_table.capnp doesn't exists: The table structure cannot be extracted from a CapnProto format file. You can specify the structure manually. (FILE_DOESNT_EXIST) (version 24.7.1.1) (from 127.0.0.1:52622) (comment: 02149_external_schema_inference.sh) (in query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'CapnProto') settings format_schema='test_7lirz7ec/02030_capnp_nested_table:Message'), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<String>(int, FormatStringHelperImpl<std::type_identity<String>::type>, String&&) @ 0x0000000006afed6b
4. /home/arthur/ClickHouse/src/Formats/CapnProtoSchema.cpp:0: DB::CapnProtoSchemaParser::getMessageSchema(DB::FormatSchemaInfo const&) @ 0x00000000126a5966
5. /home/arthur/ClickHouse/src/Processors/Formats/Impl/CapnProtoRowInputFormat.cpp:131: DB::CapnProtoSchemaReader::readSchema() @ 0x00000000126a45d5
6. /home/arthur/ClickHouse/src/Formats/ReadSchemaUtils.cpp:0: DB::readSchemaFromFormatImpl(std::optional<String>, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125bd755
7. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::readSchemaFromFormat(String const&, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125c18a2
8. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:344: DB::StorageFile::getTableStructureAndFormatFromFileImpl(std::optional<String>, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5b537
9. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::StorageFile::getTableStructureFromFile(String const&, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5bed7
10. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:260: DB::TableFunctionFile::getActualTableStructure(std::shared_ptr<DB::Context const>, bool) const @ 0x000000000fd1d106
11. /home/arthur/ClickHouse/contrib/boost/boost/multi_index_container.hpp:640: DB::InterpreterDescribeQuery::fillColumnsFromTableFunction(DB::ASTTableExpression const&) @ 0x0000000011346131
12. /home/arthur/ClickHouse/src/Interpreters/InterpreterDescribeQuery.cpp:0: DB::InterpreterDescribeQuery::execute() @ 0x00000000113454f7
13. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
14. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
15. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
16. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
17. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
18. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
19. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
20. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
21. ? @ 0x00007d28d949ca94
22. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 107. DB::Exception: Received from localhost:9000. DB::Exception: Cannot open CapnProto schema, file /home/arthur/ClickHouse/programs/server/format_schemas/test_7lirz7ec/02030_capnp_nested_table.capnp doesn't exists: The table structure cannot be extracted from a CapnProto format file. You can specify the structure manually. (FILE_DOESNT_EXIST)
(query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'CapnProto') settings format_schema='test_7lirz7ec/02030_capnp_nested_table:Message')
[arthur] 2024.07.15 19:05:23.549236 [ 3188209 ] {132ce90f-d330-4075-a3a0-370bf247ee96} <Error> executeQuery: Code: 107. DB::Exception: Cannot open CapnProto schema, file /home/arthur/ClickHouse/programs/server/format_schemas/test_7lirz7ec/02030_capnp_nested_tuples.capnp doesn't exists: The table structure cannot be extracted from a CapnProto format file. You can specify the structure manually. (FILE_DOESNT_EXIST) (version 24.7.1.1) (from 127.0.0.1:52680) (comment: 02149_external_schema_inference.sh) (in query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'CapnProto') settings format_schema='test_7lirz7ec/02030_capnp_nested_tuples:Message'), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<String>(int, FormatStringHelperImpl<std::type_identity<String>::type>, String&&) @ 0x0000000006afed6b
4. /home/arthur/ClickHouse/src/Formats/CapnProtoSchema.cpp:0: DB::CapnProtoSchemaParser::getMessageSchema(DB::FormatSchemaInfo const&) @ 0x00000000126a5966
5. /home/arthur/ClickHouse/src/Processors/Formats/Impl/CapnProtoRowInputFormat.cpp:131: DB::CapnProtoSchemaReader::readSchema() @ 0x00000000126a45d5
6. /home/arthur/ClickHouse/src/Formats/ReadSchemaUtils.cpp:0: DB::readSchemaFromFormatImpl(std::optional<String>, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125bd755
7. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::readSchemaFromFormat(String const&, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125c18a2
8. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:344: DB::StorageFile::getTableStructureAndFormatFromFileImpl(std::optional<String>, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5b537
9. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::StorageFile::getTableStructureFromFile(String const&, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5bed7
10. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:260: DB::TableFunctionFile::getActualTableStructure(std::shared_ptr<DB::Context const>, bool) const @ 0x000000000fd1d106
11. /home/arthur/ClickHouse/contrib/boost/boost/multi_index_container.hpp:640: DB::InterpreterDescribeQuery::fillColumnsFromTableFunction(DB::ASTTableExpression const&) @ 0x0000000011346131
12. /home/arthur/ClickHouse/src/Interpreters/InterpreterDescribeQuery.cpp:0: DB::InterpreterDescribeQuery::execute() @ 0x00000000113454f7
13. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
14. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
15. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
16. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
17. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
18. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
19. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
20. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
21. ? @ 0x00007d28d949ca94
22. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 107. DB::Exception: Received from localhost:9000. DB::Exception: Cannot open CapnProto schema, file /home/arthur/ClickHouse/programs/server/format_schemas/test_7lirz7ec/02030_capnp_nested_tuples.capnp doesn't exists: The table structure cannot be extracted from a CapnProto format file. You can specify the structure manually. (FILE_DOESNT_EXIST)
(query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'CapnProto') settings format_schema='test_7lirz7ec/02030_capnp_nested_tuples:Message')
[arthur] 2024.07.15 19:05:23.728558 [ 3188210 ] {d41a6ed1-5d33-4de7-bf6f-b74e7d75e1e9} <Error> executeQuery: Code: 107. DB::Exception: Cannot open CapnProto schema, file /home/arthur/ClickHouse/programs/server/format_schemas/test_7lirz7ec/02030_capnp_nullable.capnp doesn't exists: The table structure cannot be extracted from a CapnProto format file. You can specify the structure manually. (FILE_DOESNT_EXIST) (version 24.7.1.1) (from 127.0.0.1:52792) (comment: 02149_external_schema_inference.sh) (in query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'CapnProto') settings format_schema='test_7lirz7ec/02030_capnp_nullable:Message'), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<String>(int, FormatStringHelperImpl<std::type_identity<String>::type>, String&&) @ 0x0000000006afed6b
4. /home/arthur/ClickHouse/src/Formats/CapnProtoSchema.cpp:0: DB::CapnProtoSchemaParser::getMessageSchema(DB::FormatSchemaInfo const&) @ 0x00000000126a5966
5. /home/arthur/ClickHouse/src/Processors/Formats/Impl/CapnProtoRowInputFormat.cpp:131: DB::CapnProtoSchemaReader::readSchema() @ 0x00000000126a45d5
6. /home/arthur/ClickHouse/src/Formats/ReadSchemaUtils.cpp:0: DB::readSchemaFromFormatImpl(std::optional<String>, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125bd755
7. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::readSchemaFromFormat(String const&, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125c18a2
8. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:344: DB::StorageFile::getTableStructureAndFormatFromFileImpl(std::optional<String>, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5b537
9. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::StorageFile::getTableStructureFromFile(String const&, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5bed7
10. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:260: DB::TableFunctionFile::getActualTableStructure(std::shared_ptr<DB::Context const>, bool) const @ 0x000000000fd1d106
11. /home/arthur/ClickHouse/contrib/boost/boost/multi_index_container.hpp:640: DB::InterpreterDescribeQuery::fillColumnsFromTableFunction(DB::ASTTableExpression const&) @ 0x0000000011346131
12. /home/arthur/ClickHouse/src/Interpreters/InterpreterDescribeQuery.cpp:0: DB::InterpreterDescribeQuery::execute() @ 0x00000000113454f7
13. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
14. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
15. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
16. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
17. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
18. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
19. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
20. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
21. ? @ 0x00007d28d949ca94
22. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 107. DB::Exception: Received from localhost:9000. DB::Exception: Cannot open CapnProto schema, file /home/arthur/ClickHouse/programs/server/format_schemas/test_7lirz7ec/02030_capnp_nullable.capnp doesn't exists: The table structure cannot be extracted from a CapnProto format file. You can specify the structure manually. (FILE_DOESNT_EXIST)
(query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'CapnProto') settings format_schema='test_7lirz7ec/02030_capnp_nullable:Message')
[arthur] 2024.07.15 19:05:23.899799 [ 3188209 ] {db13b3b7-3091-4ed6-ac2d-58a898baa8f8} <Error> executeQuery: Code: 107. DB::Exception: Cannot open CapnProto schema, file /home/arthur/ClickHouse/programs/server/format_schemas/test_7lirz7ec/02030_capnp_simple_types.capnp doesn't exists: The table structure cannot be extracted from a CapnProto format file. You can specify the structure manually. (FILE_DOESNT_EXIST) (version 24.7.1.1) (from 127.0.0.1:52872) (comment: 02149_external_schema_inference.sh) (in query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'CapnProto') settings format_schema='test_7lirz7ec/02030_capnp_simple_types:Message'), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<String>(int, FormatStringHelperImpl<std::type_identity<String>::type>, String&&) @ 0x0000000006afed6b
4. /home/arthur/ClickHouse/src/Formats/CapnProtoSchema.cpp:0: DB::CapnProtoSchemaParser::getMessageSchema(DB::FormatSchemaInfo const&) @ 0x00000000126a5966
5. /home/arthur/ClickHouse/src/Processors/Formats/Impl/CapnProtoRowInputFormat.cpp:131: DB::CapnProtoSchemaReader::readSchema() @ 0x00000000126a45d5
6. /home/arthur/ClickHouse/src/Formats/ReadSchemaUtils.cpp:0: DB::readSchemaFromFormatImpl(std::optional<String>, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125bd755
7. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::readSchemaFromFormat(String const&, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125c18a2
8. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:344: DB::StorageFile::getTableStructureAndFormatFromFileImpl(std::optional<String>, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5b537
9. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::StorageFile::getTableStructureFromFile(String const&, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5bed7
10. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:260: DB::TableFunctionFile::getActualTableStructure(std::shared_ptr<DB::Context const>, bool) const @ 0x000000000fd1d106
11. /home/arthur/ClickHouse/contrib/boost/boost/multi_index_container.hpp:640: DB::InterpreterDescribeQuery::fillColumnsFromTableFunction(DB::ASTTableExpression const&) @ 0x0000000011346131
12. /home/arthur/ClickHouse/src/Interpreters/InterpreterDescribeQuery.cpp:0: DB::InterpreterDescribeQuery::execute() @ 0x00000000113454f7
13. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
14. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
15. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
16. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
17. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
18. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
19. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
20. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
21. ? @ 0x00007d28d949ca94
22. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 107. DB::Exception: Received from localhost:9000. DB::Exception: Cannot open CapnProto schema, file /home/arthur/ClickHouse/programs/server/format_schemas/test_7lirz7ec/02030_capnp_simple_types.capnp doesn't exists: The table structure cannot be extracted from a CapnProto format file. You can specify the structure manually. (FILE_DOESNT_EXIST)
(query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'CapnProto') settings format_schema='test_7lirz7ec/02030_capnp_simple_types:Message')
[arthur] 2024.07.15 19:05:24.069663 [ 3188203 ] {36d80016-cbb0-4518-ac71-6f7466e44f5b} <Error> executeQuery: Code: 107. DB::Exception: Cannot open CapnProto schema, file /home/arthur/ClickHouse/programs/server/format_schemas/test_7lirz7ec/02030_capnp_tuples.capnp doesn't exists: The table structure cannot be extracted from a CapnProto format file. You can specify the structure manually. (FILE_DOESNT_EXIST) (version 24.7.1.1) (from 127.0.0.1:52954) (comment: 02149_external_schema_inference.sh) (in query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'CapnProto') settings format_schema='test_7lirz7ec/02030_capnp_tuples:Message'), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<String>(int, FormatStringHelperImpl<std::type_identity<String>::type>, String&&) @ 0x0000000006afed6b
4. /home/arthur/ClickHouse/src/Formats/CapnProtoSchema.cpp:0: DB::CapnProtoSchemaParser::getMessageSchema(DB::FormatSchemaInfo const&) @ 0x00000000126a5966
5. /home/arthur/ClickHouse/src/Processors/Formats/Impl/CapnProtoRowInputFormat.cpp:131: DB::CapnProtoSchemaReader::readSchema() @ 0x00000000126a45d5
6. /home/arthur/ClickHouse/src/Formats/ReadSchemaUtils.cpp:0: DB::readSchemaFromFormatImpl(std::optional<String>, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125bd755
7. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::readSchemaFromFormat(String const&, std::optional<DB::FormatSettings> const&, DB::IReadBufferIterator&, std::shared_ptr<DB::Context const> const&) @ 0x00000000125c18a2
8. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:344: DB::StorageFile::getTableStructureAndFormatFromFileImpl(std::optional<String>, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5b537
9. /home/arthur/ClickHouse/src/Storages/ColumnsDescription.h:113: DB::StorageFile::getTableStructureFromFile(String const&, std::vector<String, std::allocator<String>> const&, String const&, std::optional<DB::FormatSettings> const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::StorageFile::ArchiveInfo> const&) @ 0x0000000011b5bed7
10. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/optional:260: DB::TableFunctionFile::getActualTableStructure(std::shared_ptr<DB::Context const>, bool) const @ 0x000000000fd1d106
11. /home/arthur/ClickHouse/contrib/boost/boost/multi_index_container.hpp:640: DB::InterpreterDescribeQuery::fillColumnsFromTableFunction(DB::ASTTableExpression const&) @ 0x0000000011346131
12. /home/arthur/ClickHouse/src/Interpreters/InterpreterDescribeQuery.cpp:0: DB::InterpreterDescribeQuery::execute() @ 0x00000000113454f7
13. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
14. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
15. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
16. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
17. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
18. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
19. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
20. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
21. ? @ 0x00007d28d949ca94
22. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 107. DB::Exception: Received from localhost:9000. DB::Exception: Cannot open CapnProto schema, file /home/arthur/ClickHouse/programs/server/format_schemas/test_7lirz7ec/02030_capnp_tuples.capnp doesn't exists: The table structure cannot be extracted from a CapnProto format file. You can specify the structure manually. (FILE_DOESNT_EXIST)
(query: desc file('test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data', 'CapnProto') settings format_schema='test_7lirz7ec/02030_capnp_tuples:Message')
rm: cannot remove '/var/lib/clickhouse/user_files/test_02149_external_schema_inference_test_7lirz7ec_test_7lirz7ec.data': No such file or directory
, result:

Protobuf











Capnproto










RawBLOB

raw_blob	String					

LineAsString

line	String					

JSONAsString

json	String					

stdout:
Protobuf











Capnproto










RawBLOB

raw_blob	String					

LineAsString

line	String					

JSONAsString

json	String					


Settings used in the test: --max_insert_threads 1 --group_by_two_level_threshold 287811 --group_by_two_level_threshold_bytes 50000000 --distributed_aggregation_memory_efficient 0 --fsync_metadata 1 --output_format_parallel_formatting 0 --input_format_parallel_parsing 1 --min_chunk_bytes_for_parallel_parsing 8785445 --max_read_buffer_size 801905 --prefer_localhost_replica 1 --max_block_size 83122 --max_joined_block_size_rows 49990 --max_threads 3 --optimize_append_index 0 --optimize_if_chain_to_multiif 0 --optimize_if_transform_strings_to_enum 0 --optimize_read_in_order 0 --optimize_or_like_chain 1 --optimize_substitute_columns 0 --enable_multiple_prewhere_read_steps 0 --read_in_order_two_level_merge_threshold 61 --optimize_aggregation_in_order 0 --aggregation_in_order_max_block_bytes 40330250 --use_uncompressed_cache 0 --min_bytes_to_use_direct_io 1 --min_bytes_to_use_mmap_io 10737418240 --local_filesystem_read_method io_uring --remote_filesystem_read_method threadpool --local_filesystem_read_prefetch 1 --filesystem_cache_segments_batch_size 10 --read_from_filesystem_cache_if_exists_otherwise_bypass_cache 1 --throw_on_error_from_cache_on_write_operations 1 --remote_filesystem_read_prefetch 0 --allow_prefetched_read_pool_for_remote_filesystem 0 --filesystem_prefetch_max_memory_usage 64Mi --filesystem_prefetches_limit 10 --filesystem_prefetch_min_bytes_for_single_read_task 16Mi --filesystem_prefetch_step_marks 0 --filesystem_prefetch_step_bytes 0 --compile_aggregate_expressions 0 --compile_sort_description 0 --merge_tree_coarse_index_granularity 8 --optimize_distinct_in_order 0 --max_bytes_before_external_sort 0 --max_bytes_before_external_group_by 10737418240 --max_bytes_before_remerge_sort 1065052395 --min_compress_block_size 2037181 --max_compress_block_size 2413317 --merge_tree_compact_parts_min_granules_to_multibuffer_read 34 --optimize_sorting_by_input_stream_properties 0 --http_response_buffer_size 4707116 --http_wait_end_of_query True --enable_memory_bound_merging_of_aggregation_results 1 --min_count_to_compile_expression 3 --min_count_to_compile_aggregate_expression 0 --min_count_to_compile_sort_description 3 --session_timezone Africa/Khartoum --prefer_warmed_unmerged_parts_seconds 5 --use_page_cache_for_disks_without_file_cache False --page_cache_inject_eviction True --merge_tree_read_split_ranges_into_intersecting_and_non_intersecting_injection_probability 0.61 --prefer_external_sort_block_bytes 100000000 --cross_join_min_rows_to_compress 1 --cross_join_min_bytes_to_compress 0 --min_external_table_block_size_bytes 0 --max_parsing_threads 1

MergeTree settings used in test: --ratio_of_defaults_for_sparse_serialization 0.0 --prefer_fetch_merged_part_size_threshold 10737418240 --vertical_merge_algorithm_min_rows_to_activate 1000000 --vertical_merge_algorithm_min_columns_to_activate 100 --allow_vertical_merges_from_compact_to_wide_parts 1 --min_merge_bytes_to_use_direct_io 10737418240 --index_granularity_bytes 11373981 --merge_max_block_size 3517 --index_granularity 65289 --min_bytes_for_wide_part 568643823 --compress_marks 0 --compress_primary_key 1 --marks_compress_block_size 66099 --primary_key_compress_block_size 87213 --replace_long_file_name_to_hash 0 --max_file_name_length 5 --min_bytes_for_full_part_storage 334754497 --compact_parts_max_bytes_to_buffer 138168138 --compact_parts_max_granules_to_buffer 256 --compact_parts_merge_max_bytes_to_prefetch_part 29418497 --cache_populated_by_fetch 0 --concurrent_part_removal_threshold 100 --old_parts_lifetime 59

Database: test_7lirz7ec
01621_decode_XML:                                                       [ OK ] 0.27 sec.
03002_sample_factor_where:                                              [ OK ] 0.32 sec.
02907_backup_mv_with_no_inner_table:                                    [ FAIL ] 1.27 sec.
Reason: return code:  60
[arthur] 2024.07.15 14:05:24.419555 [ 3188196 ] {845cb361-c254-4a29-88ec-cb860f730a69} <Error> BackupsWorker: Failed to make backup Disk('backups', '02907_backup_mv_with_no_inner_table_test_985xhuwj'): Code: 318. DB::Exception: The 'backups.allowed_disk' configuration parameter is not set, cannot use 'Disk' backup engine. (INVALID_CONFIG_PARAMETER), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000006b0210b
4. /home/arthur/ClickHouse/src/Backups/registerBackupEnginesFileAndDisk.cpp:34: std::shared_ptr<DB::IBackup> std::__function::__policy_invoker<std::shared_ptr<DB::IBackup> (DB::BackupFactory::CreateParams const&)>::__call_impl<std::__function::__default_alloc_func<DB::registerBackupEnginesFileAndDisk(DB::BackupFactory&)::$_0, std::shared_ptr<DB::IBackup> (DB::BackupFactory::CreateParams const&)>>(std::__function::__policy_storage const*, DB::BackupFactory::CreateParams const&) @ 0x00000000103ad8c9
5. /home/arthur/ClickHouse/src/Backups/BackupsWorker.cpp:0: DB::BackupsWorker::doBackup(std::shared_ptr<DB::IBackup>&, std::shared_ptr<DB::ASTBackupQuery> const&, String const&, String const&, DB::BackupInfo const&, DB::BackupSettings, std::shared_ptr<DB::IBackupCoordination>, std::shared_ptr<DB::Context const> const&, std::shared_ptr<DB::Context>) @ 0x0000000010323082
6. /home/arthur/ClickHouse/src/Backups/BackupsWorker.cpp:0: DB::BackupsWorker::startMakingBackup(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const> const&) @ 0x000000001031fac4
7. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::BackupsWorker::start(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context>) @ 0x000000001031f277
8. /home/arthur/ClickHouse/src/Interpreters/InterpreterBackupQuery.cpp:0: DB::InterpreterBackupQuery::execute() @ 0x00000000113668ac
9. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
10. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
11. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
12. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
13. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
14. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
15. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
16. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
17. ? @ 0x00007d28d949ca94
18. ? @ 0x00007d28d9529c3c
 (version 24.7.1.1)
[arthur] 2024.07.15 14:05:24.419756 [ 3188196 ] {845cb361-c254-4a29-88ec-cb860f730a69} <Error> executeQuery: Code: 318. DB::Exception: The 'backups.allowed_disk' configuration parameter is not set, cannot use 'Disk' backup engine. (INVALID_CONFIG_PARAMETER) (version 24.7.1.1) (from 127.0.0.1:53096) (comment: 02907_backup_mv_with_no_inner_table.sh) (in query: backup table test_985xhuwj.`mv` to Disk('backups', '02907_backup_mv_with_no_inner_table_test_985xhuwj');), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000006b0210b
4. /home/arthur/ClickHouse/src/Backups/registerBackupEnginesFileAndDisk.cpp:34: std::shared_ptr<DB::IBackup> std::__function::__policy_invoker<std::shared_ptr<DB::IBackup> (DB::BackupFactory::CreateParams const&)>::__call_impl<std::__function::__default_alloc_func<DB::registerBackupEnginesFileAndDisk(DB::BackupFactory&)::$_0, std::shared_ptr<DB::IBackup> (DB::BackupFactory::CreateParams const&)>>(std::__function::__policy_storage const*, DB::BackupFactory::CreateParams const&) @ 0x00000000103ad8c9
5. /home/arthur/ClickHouse/src/Backups/BackupsWorker.cpp:0: DB::BackupsWorker::doBackup(std::shared_ptr<DB::IBackup>&, std::shared_ptr<DB::ASTBackupQuery> const&, String const&, String const&, DB::BackupInfo const&, DB::BackupSettings, std::shared_ptr<DB::IBackupCoordination>, std::shared_ptr<DB::Context const> const&, std::shared_ptr<DB::Context>) @ 0x0000000010323082
6. /home/arthur/ClickHouse/src/Backups/BackupsWorker.cpp:0: DB::BackupsWorker::startMakingBackup(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const> const&) @ 0x000000001031fac4
7. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::BackupsWorker::start(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context>) @ 0x000000001031f277
8. /home/arthur/ClickHouse/src/Interpreters/InterpreterBackupQuery.cpp:0: DB::InterpreterBackupQuery::execute() @ 0x00000000113668ac
9. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
10. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
11. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
12. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
13. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
14. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
15. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
16. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
17. ? @ 0x00007d28d949ca94
18. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 318. DB::Exception: Received from localhost:9000. DB::Exception: The 'backups.allowed_disk' configuration parameter is not set, cannot use 'Disk' backup engine. (INVALID_CONFIG_PARAMETER)
(query: backup table test_985xhuwj.`mv` to Disk('backups', '02907_backup_mv_with_no_inner_table_test_985xhuwj');)
[arthur] 2024.07.15 14:05:24.590356 [ 3188187 ] {dce452c2-41d0-4e80-841f-ca1bb043723a} <Error> BackupsWorker: Failed to restore from backup Disk('backups', '02907_backup_mv_with_no_inner_table_test_985xhuwj'): Code: 318. DB::Exception: The 'backups.allowed_disk' configuration parameter is not set, cannot use 'Disk' backup engine. (INVALID_CONFIG_PARAMETER), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000006b0210b
4. /home/arthur/ClickHouse/src/Backups/registerBackupEnginesFileAndDisk.cpp:34: std::shared_ptr<DB::IBackup> std::__function::__policy_invoker<std::shared_ptr<DB::IBackup> (DB::BackupFactory::CreateParams const&)>::__call_impl<std::__function::__default_alloc_func<DB::registerBackupEnginesFileAndDisk(DB::BackupFactory&)::$_0, std::shared_ptr<DB::IBackup> (DB::BackupFactory::CreateParams const&)>>(std::__function::__policy_storage const*, DB::BackupFactory::CreateParams const&) @ 0x00000000103ad8c9
5. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:622: DB::BackupsWorker::doRestore(std::shared_ptr<DB::ASTBackupQuery> const&, String const&, String const&, DB::BackupInfo const&, DB::RestoreSettings, std::shared_ptr<DB::IRestoreCoordination>, std::shared_ptr<DB::Context>) @ 0x0000000010326fdf
6. /home/arthur/ClickHouse/src/Backups/BackupsWorker.cpp:0: DB::BackupsWorker::startRestoring(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context>) @ 0x0000000010320d5a
7. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::BackupsWorker::start(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context>) @ 0x000000001031f20d
8. /home/arthur/ClickHouse/src/Interpreters/InterpreterBackupQuery.cpp:0: DB::InterpreterBackupQuery::execute() @ 0x00000000113668ac
9. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
10. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
11. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
12. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
13. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
14. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
15. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
16. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
17. ? @ 0x00007d28d949ca94
18. ? @ 0x00007d28d9529c3c
 (version 24.7.1.1)
[arthur] 2024.07.15 14:05:24.590571 [ 3188187 ] {dce452c2-41d0-4e80-841f-ca1bb043723a} <Error> executeQuery: Code: 318. DB::Exception: The 'backups.allowed_disk' configuration parameter is not set, cannot use 'Disk' backup engine. (INVALID_CONFIG_PARAMETER) (version 24.7.1.1) (from 127.0.0.1:53162) (comment: 02907_backup_mv_with_no_inner_table.sh) (in query: restore table test_985xhuwj.`mv` from Disk('backups', '02907_backup_mv_with_no_inner_table_test_985xhuwj');), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000006b0210b
4. /home/arthur/ClickHouse/src/Backups/registerBackupEnginesFileAndDisk.cpp:34: std::shared_ptr<DB::IBackup> std::__function::__policy_invoker<std::shared_ptr<DB::IBackup> (DB::BackupFactory::CreateParams const&)>::__call_impl<std::__function::__default_alloc_func<DB::registerBackupEnginesFileAndDisk(DB::BackupFactory&)::$_0, std::shared_ptr<DB::IBackup> (DB::BackupFactory::CreateParams const&)>>(std::__function::__policy_storage const*, DB::BackupFactory::CreateParams const&) @ 0x00000000103ad8c9
5. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:622: DB::BackupsWorker::doRestore(std::shared_ptr<DB::ASTBackupQuery> const&, String const&, String const&, DB::BackupInfo const&, DB::RestoreSettings, std::shared_ptr<DB::IRestoreCoordination>, std::shared_ptr<DB::Context>) @ 0x0000000010326fdf
6. /home/arthur/ClickHouse/src/Backups/BackupsWorker.cpp:0: DB::BackupsWorker::startRestoring(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context>) @ 0x0000000010320d5a
7. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::BackupsWorker::start(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context>) @ 0x000000001031f20d
8. /home/arthur/ClickHouse/src/Interpreters/InterpreterBackupQuery.cpp:0: DB::InterpreterBackupQuery::execute() @ 0x00000000113668ac
9. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f7a36
10. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
11. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
12. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
13. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
14. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
15. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
16. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
17. ? @ 0x00007d28d949ca94
18. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 318. DB::Exception: Received from localhost:9000. DB::Exception: The 'backups.allowed_disk' configuration parameter is not set, cannot use 'Disk' backup engine. (INVALID_CONFIG_PARAMETER)
(query: restore table test_985xhuwj.`mv` from Disk('backups', '02907_backup_mv_with_no_inner_table_test_985xhuwj');)
[arthur] 2024.07.15 14:05:24.757434 [ 3188177 ] {fc9976c1-525d-490c-a73c-227fc91f056b} <Error> executeQuery: Code: 60. DB::Exception: Unknown table expression identifier 'mv' in scope SELECT count() FROM mv. (UNKNOWN_TABLE) (version 24.7.1.1) (from 127.0.0.1:53240) (comment: 02907_backup_mv_with_no_inner_table.sh) (in query: select count() from mv;), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006aff12c
3. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: DB::Exception::Exception<String const&, String>(int, FormatStringHelperImpl<std::type_identity<String const&>::type, std::type_identity<String>::type>, String const&, String&&) @ 0x00000000073bcecb
4. /home/arthur/ClickHouse/src/Analyzer/Resolve/QueryAnalyzer.cpp:0: DB::QueryAnalyzer::initializeQueryJoinTreeNode(std::shared_ptr<DB::IQueryTreeNode>&, DB::IdentifierResolveScope&) @ 0x0000000010f19df1
5. /home/arthur/ClickHouse/src/Analyzer/Resolve/QueryAnalyzer.cpp:5384: DB::QueryAnalyzer::resolveQuery(std::shared_ptr<DB::IQueryTreeNode> const&, DB::IdentifierResolveScope&) @ 0x0000000010eed679
6. /home/arthur/ClickHouse/src/Analyzer/Resolve/QueryAnalyzer.cpp:0: DB::QueryAnalyzer::resolve(std::shared_ptr<DB::IQueryTreeNode>&, std::shared_ptr<DB::IQueryTreeNode> const&, std::shared_ptr<DB::Context const>) @ 0x0000000010eeca79
7. /home/arthur/ClickHouse/src/Analyzer/Resolve/QueryAnalysisPass.cpp:0: DB::QueryAnalysisPass::run(std::shared_ptr<DB::IQueryTreeNode>&, std::shared_ptr<DB::Context const>) @ 0x0000000010eec30e
8. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:547: DB::QueryTreePassManager::run(std::shared_ptr<DB::IQueryTreeNode>) @ 0x0000000010ee84aa
9. /home/arthur/ClickHouse/src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:0: DB::(anonymous namespace)::buildQueryTreeAndRunPasses(std::shared_ptr<DB::IAST> const&, DB::SelectQueryOptions const&, std::shared_ptr<DB::Context const> const&, std::shared_ptr<DB::IStorage> const&) @ 0x0000000011020c56
10. /home/arthur/ClickHouse/src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:160: DB::InterpreterSelectQueryAnalyzer::InterpreterSelectQueryAnalyzer(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const> const&, DB::SelectQueryOptions const&, std::vector<String, std::allocator<String>> const&) @ 0x000000001101f149
11. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: std::__unique_if<DB::InterpreterSelectQueryAnalyzer>::__unique_single std::make_unique[abi:v15007]<DB::InterpreterSelectQueryAnalyzer, std::shared_ptr<DB::IAST>&, std::shared_ptr<DB::Context> const&, DB::SelectQueryOptions const&>(std::shared_ptr<DB::IAST>&, std::shared_ptr<DB::Context> const&, DB::SelectQueryOptions const&) @ 0x0000000011021b64
12. /home/arthur/ClickHouse/src/Interpreters/InterpreterFactory.cpp:0: DB::InterpreterFactory::get(std::shared_ptr<DB::IAST>&, std::shared_ptr<DB::Context>, DB::SelectQueryOptions const&) @ 0x0000000010fbde44
13. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f72a9
14. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
15. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
16. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
17. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
18. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
19. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
20. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
21. ? @ 0x00007d28d949ca94
22. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 60. DB::Exception: Received from localhost:9000. DB::Exception: Unknown table expression identifier 'mv' in scope SELECT count() FROM mv. (UNKNOWN_TABLE)
(query: select count() from mv;)
, result:



stdout:


Settings used in the test: --max_insert_threads 3 --group_by_two_level_threshold 1 --group_by_two_level_threshold_bytes 43424752 --distributed_aggregation_memory_efficient 0 --fsync_metadata 1 --output_format_parallel_formatting 1 --input_format_parallel_parsing 0 --min_chunk_bytes_for_parallel_parsing 11095556 --max_read_buffer_size 601811 --prefer_localhost_replica 0 --max_block_size 12640 --max_joined_block_size_rows 83617 --max_threads 2 --optimize_append_index 0 --optimize_if_chain_to_multiif 0 --optimize_if_transform_strings_to_enum 0 --optimize_read_in_order 0 --optimize_or_like_chain 1 --optimize_substitute_columns 1 --enable_multiple_prewhere_read_steps 1 --read_in_order_two_level_merge_threshold 11 --optimize_aggregation_in_order 1 --aggregation_in_order_max_block_bytes 17289857 --use_uncompressed_cache 0 --min_bytes_to_use_direct_io 1 --min_bytes_to_use_mmap_io 10737418240 --local_filesystem_read_method mmap --remote_filesystem_read_method read --local_filesystem_read_prefetch 0 --filesystem_cache_segments_batch_size 50 --read_from_filesystem_cache_if_exists_otherwise_bypass_cache 0 --throw_on_error_from_cache_on_write_operations 1 --remote_filesystem_read_prefetch 1 --allow_prefetched_read_pool_for_remote_filesystem 0 --filesystem_prefetch_max_memory_usage 128Mi --filesystem_prefetches_limit 10 --filesystem_prefetch_min_bytes_for_single_read_task 16Mi --filesystem_prefetch_step_marks 50 --filesystem_prefetch_step_bytes 100Mi --compile_aggregate_expressions 1 --compile_sort_description 1 --merge_tree_coarse_index_granularity 28 --optimize_distinct_in_order 0 --max_bytes_before_external_sort 0 --max_bytes_before_external_group_by 8954535557 --max_bytes_before_remerge_sort 2083033355 --min_compress_block_size 2339237 --max_compress_block_size 783097 --merge_tree_compact_parts_min_granules_to_multibuffer_read 105 --optimize_sorting_by_input_stream_properties 1 --http_response_buffer_size 6534029 --http_wait_end_of_query False --enable_memory_bound_merging_of_aggregation_results 0 --min_count_to_compile_expression 3 --min_count_to_compile_aggregate_expression 3 --min_count_to_compile_sort_description 0 --session_timezone America/Sao_Paulo --prefer_warmed_unmerged_parts_seconds 3 --use_page_cache_for_disks_without_file_cache True --page_cache_inject_eviction True --merge_tree_read_split_ranges_into_intersecting_and_non_intersecting_injection_probability 0.02 --prefer_external_sort_block_bytes 100000000 --cross_join_min_rows_to_compress 1 --cross_join_min_bytes_to_compress 100000000 --min_external_table_block_size_bytes 0 --max_parsing_threads 10

MergeTree settings used in test: --ratio_of_defaults_for_sparse_serialization 1.0 --prefer_fetch_merged_part_size_threshold 6812409254 --vertical_merge_algorithm_min_rows_to_activate 1000000 --vertical_merge_algorithm_min_columns_to_activate 100 --allow_vertical_merges_from_compact_to_wide_parts 0 --min_merge_bytes_to_use_direct_io 1 --index_granularity_bytes 27821122 --merge_max_block_size 1371 --index_granularity 19327 --min_bytes_for_wide_part 1073741824 --compress_marks 1 --compress_primary_key 0 --marks_compress_block_size 60330 --primary_key_compress_block_size 66055 --replace_long_file_name_to_hash 1 --max_file_name_length 128 --min_bytes_for_full_part_storage 433601574 --compact_parts_max_bytes_to_buffer 461948454 --compact_parts_max_granules_to_buffer 19 --compact_parts_merge_max_bytes_to_prefetch_part 6507794 --cache_populated_by_fetch 0 --concurrent_part_removal_threshold 100 --old_parts_lifetime 10

Database: test_985xhuwj
01925_test_group_by_const_consistency:                                  [ OK ] 0.27 sec.
00599_create_view_with_subquery:                                        [ OK ] 0.17 sec.
03104_create_view_join:                                                 [ OK ] 0.27 sec.
02481_analyzer_join_alias_unknown_identifier_crash:                     [ OK ] 0.32 sec.
00677_shard_any_heavy_merge:                                            [ FAIL ] 0.22 sec.
Reason: return code:  7
[arthur] 2024.07.15 10:05:25.118562 [ 3188210 ] {90abe08f-ad05-4057-95bc-b4ca9f711b14} <Error> executeQuery: Code: 519. DB::NetException: All attempts to get table structure failed. Log: 

Code: 279. DB::NetException: All connection tries failed. Log: 

Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)

. (ALL_CONNECTION_TRIES_FAILED) (version 24.7.1.1)
Code: 279. DB::NetException: All connection tries failed. Log: 

Code: 210. DB::NetException: Connection refused (127.0.0.3:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.3:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.3:9000). (NETWORK_ERROR) (version 24.7.1.1)

. (ALL_CONNECTION_TRIES_FAILED) (version 24.7.1.1)

. (NO_REMOTE_SHARD_AVAILABLE) (version 24.7.1.1) (from 127.0.0.1:53402) (comment: 00677_shard_any_heavy_merge.sql) (in query: WITH arrayJoin(['hello', 'world']) AS s SELECT count(), arraySort(groupUniqArray(s)), anyHeavy(s) FROM remote('127.0.0.{2,3}', system.one);), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::NetException::NetException<String&>(int, FormatStringHelperImpl<std::type_identity<String&>::type>, String&) @ 0x0000000011de0b83
3. /home/arthur/ClickHouse/src/Storages/getStructureOfRemoteTable.cpp:170: DB::getStructureOfRemoteTable(DB::Cluster const&, DB::StorageID const&, std::shared_ptr<DB::Context const>, std::shared_ptr<DB::IAST> const&) @ 0x0000000011ddf0ba
4. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::TableFunctionRemote::getActualTableStructure(std::shared_ptr<DB::Context const>, bool) const @ 0x000000000fd0634b
5. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__utility/swap.h:35: DB::TableFunctionRemote::executeImpl(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const>, String const&, DB::ColumnsDescription, bool) const @ 0x000000000fd05520
6. /home/arthur/ClickHouse/src/TableFunctions/ITableFunction.cpp:37: DB::ITableFunction::execute(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const>, String const&, DB::ColumnsDescription, bool, bool) const @ 0x000000000ff53f37
7. /home/arthur/ClickHouse/src/Interpreters/Context.cpp:2216: DB::Context::executeTableFunction(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::ITableFunction> const&) @ 0x0000000010a31752
8. /home/arthur/ClickHouse/src/Analyzer/Resolve/QueryAnalyzer.cpp:4795: DB::QueryAnalyzer::resolveTableFunction(std::shared_ptr<DB::IQueryTreeNode>&, DB::IdentifierResolveScope&, DB::QueryExpressionsAliasVisitor&, bool) @ 0x0000000010ef7fec
9. /home/arthur/ClickHouse/src/Analyzer/Resolve/QueryAnalyzer.cpp:0: DB::QueryAnalyzer::resolveQueryJoinTreeNode(std::shared_ptr<DB::IQueryTreeNode>&, DB::IdentifierResolveScope&, DB::QueryExpressionsAliasVisitor&) @ 0x0000000010f1aac1
10. /home/arthur/ClickHouse/src/Analyzer/Resolve/QueryAnalyzer.cpp:5389: DB::QueryAnalyzer::resolveQuery(std::shared_ptr<DB::IQueryTreeNode> const&, DB::IdentifierResolveScope&) @ 0x0000000010eed6ae
11. /home/arthur/ClickHouse/src/Analyzer/Resolve/QueryAnalyzer.cpp:0: DB::QueryAnalyzer::resolve(std::shared_ptr<DB::IQueryTreeNode>&, std::shared_ptr<DB::IQueryTreeNode> const&, std::shared_ptr<DB::Context const>) @ 0x0000000010eeca79
12. /home/arthur/ClickHouse/src/Analyzer/Resolve/QueryAnalysisPass.cpp:0: DB::QueryAnalysisPass::run(std::shared_ptr<DB::IQueryTreeNode>&, std::shared_ptr<DB::Context const>) @ 0x0000000010eec30e
13. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:547: DB::QueryTreePassManager::run(std::shared_ptr<DB::IQueryTreeNode>) @ 0x0000000010ee84aa
14. /home/arthur/ClickHouse/src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:0: DB::(anonymous namespace)::buildQueryTreeAndRunPasses(std::shared_ptr<DB::IAST> const&, DB::SelectQueryOptions const&, std::shared_ptr<DB::Context const> const&, std::shared_ptr<DB::IStorage> const&) @ 0x0000000011020c56
15. /home/arthur/ClickHouse/src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:160: DB::InterpreterSelectQueryAnalyzer::InterpreterSelectQueryAnalyzer(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const> const&, DB::SelectQueryOptions const&, std::vector<String, std::allocator<String>> const&) @ 0x000000001101f149
16. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/vector:438: std::__unique_if<DB::InterpreterSelectQueryAnalyzer>::__unique_single std::make_unique[abi:v15007]<DB::InterpreterSelectQueryAnalyzer, std::shared_ptr<DB::IAST>&, std::shared_ptr<DB::Context> const&, DB::SelectQueryOptions const&>(std::shared_ptr<DB::IAST>&, std::shared_ptr<DB::Context> const&, DB::SelectQueryOptions const&) @ 0x0000000011021b64
17. /home/arthur/ClickHouse/src/Interpreters/InterpreterFactory.cpp:0: DB::InterpreterFactory::get(std::shared_ptr<DB::IAST>&, std::shared_ptr<DB::Context>, DB::SelectQueryOptions const&) @ 0x0000000010fbde44
18. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000112f72a9
19. /home/arthur/ClickHouse/src/Interpreters/executeQuery.cpp:1390: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000112f321d
20. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001255397b
21. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:593: DB::TCPHandler::run() @ 0x0000000012568a59
22. /home/arthur/ClickHouse/base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x0000000014fe2b47
23. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x0000000014fe301e
24. /home/arthur/ClickHouse/base/poco/Foundation/src/ThreadPool.cpp:219: Poco::PooledThread::run() @ 0x0000000014f8f0d2
25. /home/arthur/ClickHouse/base/poco/Foundation/include/Poco/AutoPtr.h:77: Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000014f8cde3
26. ? @ 0x00007d28d949ca94
27. ? @ 0x00007d28d9529c3c

Received exception from server (version 24.7.1):
Code: 519. DB::Exception: Received from localhost:9000. DB::NetException. DB::NetException: All attempts to get table structure failed. Log: 

Code: 279. DB::NetException: All connection tries failed. Log: 

Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)

. (ALL_CONNECTION_TRIES_FAILED) (version 24.7.1.1)
Code: 279. DB::NetException: All connection tries failed. Log: 

Code: 210. DB::NetException: Connection refused (127.0.0.3:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.3:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.3:9000). (NETWORK_ERROR) (version 24.7.1.1)

. (ALL_CONNECTION_TRIES_FAILED) (version 24.7.1.1)

. (NO_REMOTE_SHARD_AVAILABLE)
(query: WITH arrayJoin(['hello', 'world']) AS s SELECT count(), arraySort(groupUniqArray(s)), anyHeavy(s) FROM remote('127.0.0.{2,3}', system.one);)
, result:



stdout:


Settings used in the test: --max_insert_threads 3 --group_by_two_level_threshold 85237 --group_by_two_level_threshold_bytes 1 --distributed_aggregation_memory_efficient 1 --fsync_metadata 0 --output_format_parallel_formatting 0 --input_format_parallel_parsing 0 --min_chunk_bytes_for_parallel_parsing 12726034 --max_read_buffer_size 1041434 --prefer_localhost_replica 1 --max_block_size 24620 --max_joined_block_size_rows 35103 --max_threads 2 --optimize_append_index 1 --optimize_if_chain_to_multiif 1 --optimize_if_transform_strings_to_enum 1 --optimize_read_in_order 1 --optimize_or_like_chain 0 --optimize_substitute_columns 0 --enable_multiple_prewhere_read_steps 1 --read_in_order_two_level_merge_threshold 9 --optimize_aggregation_in_order 1 --aggregation_in_order_max_block_bytes 26861437 --use_uncompressed_cache 1 --min_bytes_to_use_direct_io 10737418240 --min_bytes_to_use_mmap_io 1 --local_filesystem_read_method pread_threadpool --remote_filesystem_read_method read --local_filesystem_read_prefetch 0 --filesystem_cache_segments_batch_size 0 --read_from_filesystem_cache_if_exists_otherwise_bypass_cache 0 --throw_on_error_from_cache_on_write_operations 1 --remote_filesystem_read_prefetch 0 --allow_prefetched_read_pool_for_remote_filesystem 0 --filesystem_prefetch_max_memory_usage 32Mi --filesystem_prefetches_limit 0 --filesystem_prefetch_min_bytes_for_single_read_task 8Mi --filesystem_prefetch_step_marks 50 --filesystem_prefetch_step_bytes 100Mi --compile_aggregate_expressions 1 --compile_sort_description 0 --merge_tree_coarse_index_granularity 32 --optimize_distinct_in_order 1 --max_bytes_before_external_sort 10737418240 --max_bytes_before_external_group_by 10737418240 --max_bytes_before_remerge_sort 244510924 --min_compress_block_size 2260285 --max_compress_block_size 221714 --merge_tree_compact_parts_min_granules_to_multibuffer_read 124 --optimize_sorting_by_input_stream_properties 0 --http_response_buffer_size 3492314 --http_wait_end_of_query False --enable_memory_bound_merging_of_aggregation_results 1 --min_count_to_compile_expression 0 --min_count_to_compile_aggregate_expression 0 --min_count_to_compile_sort_description 3 --session_timezone Mexico/BajaSur --prefer_warmed_unmerged_parts_seconds 6 --use_page_cache_for_disks_without_file_cache False --page_cache_inject_eviction True --merge_tree_read_split_ranges_into_intersecting_and_non_intersecting_injection_probability 0.66 --prefer_external_sort_block_bytes 0 --cross_join_min_rows_to_compress 100000000 --cross_join_min_bytes_to_compress 0 --min_external_table_block_size_bytes 100000000 --max_parsing_threads 10

MergeTree settings used in test: --ratio_of_defaults_for_sparse_serialization 1.0 --prefer_fetch_merged_part_size_threshold 10737418240 --vertical_merge_algorithm_min_rows_to_activate 1 --vertical_merge_algorithm_min_columns_to_activate 100 --allow_vertical_merges_from_compact_to_wide_parts 1 --min_merge_bytes_to_use_direct_io 2378699830 --index_granularity_bytes 11800657 --merge_max_block_size 18857 --index_granularity 5402 --min_bytes_for_wide_part 1073741824 --compress_marks 0 --compress_primary_key 1 --marks_compress_block_size 33376 --primary_key_compress_block_size 43330 --replace_long_file_name_to_hash 1 --max_file_name_length 97 --min_bytes_for_full_part_storage 536870912 --compact_parts_max_bytes_to_buffer 170083788 --compact_parts_max_granules_to_buffer 174 --compact_parts_merge_max_bytes_to_prefetch_part 15012620 --cache_populated_by_fetch 1 --concurrent_part_removal_threshold 100 --old_parts_lifetime 480

Database: test_3xrcd5dc
00410_aggregation_combinators_with_arenas:                              [ OK ] 0.62 sec.
01720_country_intersection:                                             [ OK ] 2.32 sec.
02685_bson2:                                                            [ OK ] 0.32 sec.
03168_read_in_order_buffering_2:                                        [ OK ] 2.47 sec.
00961_checksums_in_system_parts_columns_table:                          [ OK ] 0.27 sec.
01600_select_in_different_types:                                        [ OK ] 0.37 sec.
00700_decimal_array_functions:                                          [ OK ] 0.27 sec.
02417_load_marks_async:                                                 [ OK ] 2.37 sec.
00918_has_unsufficient_type_check:                                      [ OK ] 0.27 sec.
00557_array_resize:                                                     [ OK ] 0.22 sec.
01825_type_json_9:                                                      [ OK ] 0.22 sec.
01557_field_infinite_convert_to_number:                                 [ OK ] 0.27 sec.
00757_enum_defaults:                                                    [ OK ] 0.32 sec.
03095_group_by_server_constants_bug:                                    [ FAIL ] 0.17 sec.
Reason: return code:  23
[arthur] 2024.07.15 14:05:25.884896 [ 3188185 ] {e78c7842-fee6-4ca6-a405-9cd8ad9034cd} <Error> executeQuery: Code: 279. DB::Exception: All connection tries failed. Log: 

Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)

: While executing Remote. (ALL_CONNECTION_TRIES_FAILED) (version 24.7.1.1) (from 127.0.0.1:53642) (comment: 03095_group_by_server_constants_bug.sql) (in query: SELECT serverUUID() AS s, count() FROM remote('127.0.0.{1,2}', system.one) GROUP BY s format Null;), Stack trace (when copying this message, always include the lines below):

0. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000014f3d672
1. /home/arthur/ClickHouse/src/Common/Exception.cpp:110: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c0f6f39
2. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/string:1499: DB::NetException::NetException<String&>(int, FormatStringHelperImpl<std::type_identity<String&>::type>, String&) @ 0x0000000011de0b83
3. /home/arthur/ClickHouse/src/Client/HedgedConnectionsFactory.cpp:0: DB::HedgedConnectionsFactory::getManyConnections(DB::PoolMode, std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>) @ 0x00000000124aa1a2
4. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x00000000124a25f9
5. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x000000001064f5cd
6. /home/arthur/ClickHouse/src/QueryPipeline/RemoteQueryExecutor.cpp:213: std::unique_ptr<DB::IConnections, std::default_delete<DB::IConnections>> std::__function::__policy_invoker<std::unique_ptr<DB::IConnections, std::default_delete<DB::IConnections>> (std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>)>::__call_impl<std::__function::__default_alloc_func<DB::RemoteQueryExecutor::RemoteQueryExecutor(std::shared_ptr<DB::ConnectionPoolWithFailover> const&, String const&, DB::Block const&, std::shared_ptr<DB::Context const>, std::shared_ptr<DB::Throttler> const&, std::map<String, DB::Block, std::less<String>, std::allocator<std::pair<String const, DB::Block>>> const&, std::map<String, std::shared_ptr<DB::IStorage>, std::less<String>, std::allocator<std::pair<String const, std::shared_ptr<DB::IStorage>>>> const&, DB::QueryProcessingStage::Enum, std::optional<DB::RemoteQueryExecutor::Extension>, std::function<Priority (unsigned long)>)::$_0, std::unique_ptr<DB::IConnections, std::default_delete<DB::IConnections>> (std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>)>>(std::__function::__policy_storage const*, std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>&&) @ 0x00000000106499b9
7. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::RemoteQueryExecutor::sendQueryUnlocked(DB::ClientInfo::QueryKind, std::function<void (int, Poco::Timespan, DB::AsyncEventTimeoutType, String const&, unsigned int)>) @ 0x0000000010642fb6
8. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x0000000010651cc3
9. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x0000000010651552
10. /home/arthur/ClickHouse/contrib/llvm-project/libcxx/include/__functional/function.h:818: ? @ 0x000000001065139a
11. /home/arthur/ClickHouse/contrib/boost/boost/context/fiber_fcontext.hpp:0: void boost::context::detail::fiber_entry<boost::context::detail::fiber_record<boost::context::fiber, FiberStack&, Fiber::RoutineImpl<DB::AsyncTaskExecutor::Routine>>>(boost::context::detail::transfer_t) @ 0x00000000106510e1

Received exception from server (version 24.7.1):
Code: 279. DB::Exception: Received from localhost:9000. DB::Exception: All connection tries failed. Log: 

Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)

: While executing Remote. (ALL_CONNECTION_TRIES_FAILED)
(query: SELECT serverUUID() AS s, count() FROM remote('127.0.0.{1,2}', system.one) GROUP BY s format Null;)
, result:



stdout:


Settings used in the test: --max_insert_threads 2 --group_by_two_level_threshold 133359 --group_by_two_level_threshold_bytes 36977852 --distributed_aggregation_memory_efficient 1 --fsync_metadata 1 --output_format_parallel_formatting 0 --input_format_parallel_parsing 0 --min_chunk_bytes_for_parallel_parsing 11199186 --max_read_buffer_size 894359 --prefer_localhost_replica 1 --max_block_size 47311 --max_joined_block_size_rows 64360 --max_threads 1 --optimize_append_index 1 --optimize_if_chain_to_multiif 0 --optimize_if_transform_strings_to_enum 0 --optimize_read_in_order 1 --optimize_or_like_chain 0 --optimize_substitute_columns 1 --enable_multiple_prewhere_read_steps 0 --read_in_order_two_level_merge_threshold 10 --optimize_aggregation_in_order 0 --aggregation_in_order_max_block_bytes 4405639 --use_uncompressed_cache 0 --min_bytes_to_use_direct_io 10737418240 --min_bytes_to_use_mmap_io 1 --local_filesystem_read_method io_uring --remote_filesystem_read_method read --local_filesystem_read_prefetch 0 --filesystem_cache_segments_batch_size 0 --read_from_filesystem_cache_if_exists_otherwise_bypass_cache 1 --throw_on_error_from_cache_on_write_operations 0 --remote_filesystem_read_prefetch 0 --allow_prefetched_read_pool_for_remote_filesystem 0 --filesystem_prefetch_max_memory_usage 64Mi --filesystem_prefetches_limit 0 --filesystem_prefetch_min_bytes_for_single_read_task 8Mi --filesystem_prefetch_step_marks 0 --filesystem_prefetch_step_bytes 0 --compile_aggregate_expressions 0 --compile_sort_description 0 --merge_tree_coarse_index_granularity 15 --optimize_distinct_in_order 1 --max_bytes_before_external_sort 10737418240 --max_bytes_before_external_group_by 0 --max_bytes_before_remerge_sort 2688723551 --min_compress_block_size 1116788 --max_compress_block_size 2850270 --merge_tree_compact_parts_min_granules_to_multibuffer_read 94 --optimize_sorting_by_input_stream_properties 1 --http_response_buffer_size 4466955 --http_wait_end_of_query False --enable_memory_bound_merging_of_aggregation_results 0 --min_count_to_compile_expression 0 --min_count_to_compile_aggregate_expression 0 --min_count_to_compile_sort_description 0 --session_timezone America/Sao_Paulo --prefer_warmed_unmerged_parts_seconds 10 --use_page_cache_for_disks_without_file_cache True --page_cache_inject_eviction True --merge_tree_read_split_ranges_into_intersecting_and_non_intersecting_injection_probability 0.11 --prefer_external_sort_block_bytes 100000000 --cross_join_min_rows_to_compress 100000000 --cross_join_min_bytes_to_compress 100000000 --min_external_table_block_size_bytes 1 --max_parsing_threads 1

MergeTree settings used in test: --ratio_of_defaults_for_sparse_serialization 1.0 --prefer_fetch_merged_part_size_threshold 10737418240 --vertical_merge_algorithm_min_rows_to_activate 694870 --vertical_merge_algorithm_min_columns_to_activate 1 --allow_vertical_merges_from_compact_to_wide_parts 1 --min_merge_bytes_to_use_direct_io 6124316741 --index_granularity_bytes 25540821 --merge_max_block_size 4436 --index_granularity 63076 --min_bytes_for_wide_part 590288600 --compress_marks 0 --compress_primary_key 0 --marks_compress_block_size 84437 --primary_key_compress_block_size 22977 --replace_long_file_name_to_hash 1 --max_file_name_length 128 --min_bytes_for_full_part_storage 455768801 --compact_parts_max_bytes_to_buffer 117609530 --compact_parts_max_granules_to_buffer 219 --compact_parts_merge_max_bytes_to_prefetch_part 17709084 --cache_populated_by_fetch 0 --concurrent_part_removal_threshold 41 --old_parts_lifetime 480

Database: test_0rxb00pv
00701_rollup:                                                           [ OK ] 0.32 sec.
02363_mapupdate_improve:                                                [ OK ] 0.27 sec.
00401_merge_and_stripelog:                                              [ OK ] 0.52 sec.
02459_read_in_order_bufer:                                              [ OK ] 0.33 sec.
02346_fulltext_index_match_predicate:                                   [ OK ] 0.32 sec.
01075_in_arrays_enmk:                                                   [ OK ] 0.27 sec.
02417_opentelemetry_insert_on_distributed_table:                        [ OK ] 6.64 sec.
01889_key_condition_function_chains:                                    [ OK ] 0.37 sec.
02558_system_processes_elapsed:                                         [ OK ] 2.42 sec.
02212_cte_and_table_alias:                                              [ OK ] 0.22 sec.
01296_codecs_bad_arguments:                                             [ OK ] 0.32 sec.
02994_libarchive_compression:                                           [ OK ] 3.73 sec.
01067_window_view_event_tumble_to_asc_lateness:                         [ OK ] 1.62 sec.
00485_http_insert_format:                                               [ OK ] 1.07 sec.
02996_index_compaction_counterexample:                                  [ OK ] 0.32 sec.
02834_nulls_first_sort:                                                 [ OK ] 0.28 sec.
02494_analyzer_cte_resolution_in_subquery_fix:                          [ OK ] 0.27 sec.
02286_parallel_final:                                                   [ OK ] 3.14 sec.
02501_limits_on_result_for_view:                                        [ FAIL ] 0.32 sec.
Reason: return code:  23
Expected server error code: 396 but got: 279 (query: -- test
SELECT * from 02501_view settings max_result_rows = 1; -- { serverError TOO_MANY_ROWS_OR_BYTES }).
Received exception from server (version 24.7.1):
Code: 279. DB::Exception: Received from localhost:9000. DB::Exception: All connection tries failed. Log: 

Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)
Code: 210. DB::NetException: Connection refused (127.0.0.2:9000). (NETWORK_ERROR) (version 24.7.1.1)

: While executing Remote. (ALL_CONNECTION_TRIES_FAILED)
(query: -- test
SELECT * from 02501_view settings max_result_rows = 1; -- { serverError TOO_MANY_ROWS_OR_BYTES })
, result:



stdout:


Settings used in the test: --max_insert_threads 1 --group_by_two_level_threshold 1000000 --group_by_two_level_threshold_bytes 50000000 --distributed_aggregation_memory_efficient 1 --fsync_metadata 1 --output_format_parallel_formatting 0 --input_format_parallel_parsing 1 --min_chunk_bytes_for_parallel_parsing 18178547 --max_read_buffer_size 891966 --prefer_localhost_replica 0 --max_block_size 23678 --max_joined_block_size_rows 83183 --max_threads 3 --optimize_append_index 1 --optimize_if_chain_to_multiif 1 --optimize_if_transform_strings_to_enum 0 --optimize_read_in_order 1 --optimize_or_like_chain 0 --optimize_substitute_columns 0 --enable_multiple_prewhere_read_steps 0 --read_in_order_two_level_merge_threshold 26 --optimize_aggregation_in_order 0 --aggregation_in_order_max_block_bytes 49621996 --use_uncompressed_cache 1 --min_bytes_to_use_direct_io 10737418240 --min_bytes_to_use_mmap_io 1187032144 --local_filesystem_read_method io_uring --remote_filesystem_read_method threadpool --local_filesystem_read_prefetch 1 --filesystem_cache_segments_batch_size 3 --read_from_filesystem_cache_if_exists_otherwise_bypass_cache 0 --throw_on_error_from_cache_on_write_operations 0 --remote_filesystem_read_prefetch 1 --allow_prefetched_read_pool_for_remote_filesystem 0 --filesystem_prefetch_max_memory_usage 32Mi --filesystem_prefetches_limit 0 --filesystem_prefetch_min_bytes_for_single_read_task 16Mi --filesystem_prefetch_step_marks 0 --filesystem_prefetch_step_bytes 100Mi --compile_aggregate_expressions 1 --compile_sort_description 0 --merge_tree_coarse_index_granularity 4 --optimize_distinct_in_order 1 --max_bytes_before_external_sort 0 --max_bytes_before_external_group_by 5781461031 --max_bytes_before_remerge_sort 263936602 --min_compress_block_size 722872 --max_compress_block_size 1484067 --merge_tree_compact_parts_min_granules_to_multibuffer_read 83 --optimize_sorting_by_input_stream_properties 0 --http_response_buffer_size 7053778 --http_wait_end_of_query False --enable_memory_bound_merging_of_aggregation_results 0 --min_count_to_compile_expression 0 --min_count_to_compile_aggregate_expression 3 --min_count_to_compile_sort_description 0 --session_timezone Africa/Khartoum --prefer_warmed_unmerged_parts_seconds 3 --use_page_cache_for_disks_without_file_cache True --page_cache_inject_eviction True --merge_tree_read_split_ranges_into_intersecting_and_non_intersecting_injection_probability 0.49 --prefer_external_sort_block_bytes 0 --cross_join_min_rows_to_compress 1 --cross_join_min_bytes_to_compress 1 --min_external_table_block_size_bytes 1 --max_parsing_threads 10

MergeTree settings used in test: --ratio_of_defaults_for_sparse_serialization 0.0 --prefer_fetch_merged_part_size_threshold 10737418240 --vertical_merge_algorithm_min_rows_to_activate 1000000 --vertical_merge_algorithm_min_columns_to_activate 100 --allow_vertical_merges_from_compact_to_wide_parts 1 --min_merge_bytes_to_use_direct_io 1 --index_granularity_bytes 24209095 --merge_max_block_size 16669 --index_granularity 25837 --min_bytes_for_wide_part 911216010 --compress_marks 1 --compress_primary_key 0 --marks_compress_block_size 13576 --primary_key_compress_block_size 44624 --replace_long_file_name_to_hash 0 --max_file_name_length 0 --min_bytes_for_full_part_storage 157786211 --compact_parts_max_bytes_to_buffer 315694338 --compact_parts_max_granules_to_buffer 86 --compact_parts_merge_max_bytes_to_prefetch_part 27868744 --cache_populated_by_fetch 0 --concurrent_part_removal_threshold 2 --old_parts_lifetime 480

Database: test_477a1us7
00900_orc_load:                                                         [ OK ] 2.13 sec.
00587_union_all_type_conversions:                                       [ OK ] 0.32 sec.
00304_http_external_data:                                               [ OK ] 0.32 sec.
01278_random_string_utf8:                                               [ OK ] 0.32 sec.
00907_set_index_with_nullable_and_low_cardinality_bug:                  [ OK ] 0.32 sec.
03033_recursive_cte_basic:                                              [ OK ] 0.52 sec.
02682_quantiles_too_large_size:                                         [ OK ] 0.28 sec.
00140_parse_unix_timestamp_as_datetime:                                 [ OK ] 0.32 sec.
02183_dictionary_no_attributes:                                         [ OK ] 0.78 sec.
02374_regexp_replace:                                                   [ OK ] 0.27 sec.
02210_append_to_dev_dull:                                               [ OK ] 0.33 sec.
01391_join_on_dict_crash:                                               [ OK ] 0.33 sec.
02942_variant_cast:                                                     [ OK ] 0.53 sec.
02783_max_bytes_to_read_in_schema_inference:                            [ OK ] 0.28 sec.
02302_lc_nullable_string_insert_as_number:                              [ OK ] 0.33 sec.
02346_aggregation_in_order_fixed_prefix:                                [ OK ] 2.38 sec.
Running 272 stateless tests (Process-22).
03164_orc_signedness:                                                   [ FAIL ] 0.00 sec.
Reason: server died 
Server does not respond to health check

Sending signals
Sending signals DONE
Break tests executionBreak tests execution
Sending signals
Sending signals DONE
