- name: Copy new debs
  shell: mv /home/runner/.cache/tmp/packages/{{ item }} {{ local_repo_path }}/{{ repo_prefix }}apt-repo/pool/main/{{ item }}"
  loop: "{{ deb_pkg_names }}"

- name: Copy library-bridge and obdc-bridge if version newer than 24.8
  when: (pkgver | regex_replace('^(\\d+\\.\\d+).*$', '\\1')) is version('24.8', '==')
  shell: mv /home/runner/.cache/tmp/packages/{{ item }} {{ local_repo_path }}/{{ repo_prefix }}apt-repo/pool/main/{{ item }}"
  loop:
    - "clickhouse-library-bridge_{{ pkgver }}_amd64.deb"
    - "clickhouse-library-bridge_{{ pkgver }}_arm64.deb"
    - "clickhouse-odbc-bridge_{{ pkgver }}_amd64.deb"
    - "clickhouse-odbc-bridge_{{ pkgver }}_arm64.deb"

- name: Sign new debs
  shell: "dpkg-sig -k {{ gpg_key_id }} --sign builder {{ local_repo_path }}/{{ repo_prefix }}apt-repo/pool/main/{{ item }}"
  loop: "{{ deb_pkg_names }}"

- name: Sign library-bridge and obdc-bridge if version newer than 24.8
  when: (pkgver | regex_replace('^(\\d+\\.\\d+).*$', '\\1')) is version('24.8', '==')
  shell: "dpkg-sig -k {{ gpg_key_id }} --sign builder {{ local_repo_path }}/{{ repo_prefix }}apt-repo/pool/main/{{ item }}"
  loop:
    - "clickhouse-library-bridge_{{ pkgver }}_amd64.deb"
    - "clickhouse-library-bridge_{{ pkgver }}_arm64.deb"
    - "clickhouse-odbc-bridge_{{ pkgver }}_amd64.deb"
    - "clickhouse-odbc-bridge_{{ pkgver }}_arm64.deb"

- name: Set up apt-ftparchive config
  template:
    src: "{{ item }}"
    dest: "/{{ item }}"
  loop:
    - "apt-ftparchive.conf"
    - "apt-ftparchive-{{ repo_deb_dist }}.conf"

- name: Build and sign {{ repo_prefix }}apt repo
  shell:
    chdir: "{{ local_repo_path }}/{{ repo_prefix }}apt-repo"
    cmd: |
      set -xe
      apt-ftparchive generate /apt-ftparchive.conf
      apt-ftparchive -c /apt-ftparchive-{{ repo_deb_dist }}.conf release dists/{{ repo_deb_dist }} > dists/{{ repo_deb_dist }}/Release
      gpg -a --yes --output dists/{{ repo_deb_dist }}/Release.gpg --detach-sign dists/{{ repo_deb_dist }}/Release
      gpg -a --yes --clearsign --output dists/{{ repo_deb_dist }}/InRelease --detach-sign dists/{{ repo_deb_dist }}/Release

- name: Get file info for contents of generated repo
  stat:
    path: "{{ local_repo_path }}/{{ repo_prefix }}apt-repo/dists/{{ repo_deb_dist }}/Contents-amd64"
  register: contents_stat

- name: Make sure the generated repo has content
  assert:
    that: "contents_stat.stat.size is defined and contents_stat.stat.size > 0"
    fail_msg: "Repo generated by apt-ftparchive has no contents"

- name: Export GPG public key to repo
  shell: 'gpg --export --armor "{{ gpg_key_name }}" > "{{ local_repo_path }}/{{ repo_prefix }}apt-repo/pubkey.gpg"'

- name: Sync repos between source and target
  shell: 'aws s3 sync --delete "{{ local_repo_path }}/{{ item }}" "{{ s3_repo_target_path }}/{{ release_environment }}/{{ item }}"'
  loop: "{{ apt_repos }}"
  when: cloudfront_origin_path != ""
