test_one_thread_simple_group_by() {
  expected_size_hint=$table_size
  prepare_table

  query="
  -- size_hint = $expected_size_hint --
    SELECT number
      FROM $table_name
  GROUP BY number
  SETTINGS max_threads = 1
    FORMAT Null;"

  run_query
  run_query
  check_preallocated_elements $expected_size_hint
  print_border
}

test_one_thread_simple_group_by_with_limit() {
  expected_size_hint=$table_size
  prepare_table

  query="
  -- size_hint = $expected_size_hint despite the presence of limit --
    SELECT number
      FROM $table_name
  GROUP BY number
     LIMIT 5
  SETTINGS max_threads = 1
    FORMAT Null;"

  run_query
  run_query
  check_preallocated_elements $expected_size_hint
  print_border
}

test_one_thread_simple_group_by_with_join_and_subquery() {
  expected_size_hint=$((table_size + table_size / 2))
  prepare_table

  query="
  -- expected two size_hints for different keys: for the inner ($table_size) and the outer aggregation ($((table_size / 2)))
    SELECT number
      FROM $table_name AS t1
      JOIN
      (
        SELECT number
          FROM $table_name AS t2
      GROUP BY number
         LIMIT $((table_size / 2))
      ) AS t3 USING(number)
  GROUP BY number
  SETTINGS max_threads = 1,
           distributed_product_mode = 'local'
    FORMAT Null;"

  run_query
  run_query
  check_preallocated_elements $expected_size_hint
  print_border
}

test_several_threads_simple_group_by_with_limit_single_level_ht() {
  expected_size_hint=$table_size
  prepare_table

  query="
  -- size_hint = $expected_size_hint despite the presence of limit --
    SELECT number
      FROM $table_name
  GROUP BY number
     LIMIT 5
  SETTINGS max_threads = $max_threads,
           group_by_two_level_threshold = $((expected_size_hint + 1)),
           group_by_two_level_threshold_bytes = $((table_size * 1000))
    FORMAT Null;"

  run_query
  run_query
  check_preallocated_elements $((expected_size_hint / max_threads)) $expected_size_hint
  print_border
}

test_several_threads_simple_group_by_with_limit_two_level_ht() {
  expected_size_hint=$table_size
  prepare_table

  query="
  -- size_hint = $expected_size_hint despite the presence of limit --
    SELECT number
      FROM $table_name
  GROUP BY number
     LIMIT 5
  SETTINGS max_threads = $max_threads,
           group_by_two_level_threshold = $expected_size_hint,
           group_by_two_level_threshold_bytes = $((table_size * 1000))
    FORMAT Null;"

  run_query
  run_query
  check_convertion_to_two_level
  print_border
}

test_several_threads_simple_group_by_external_aggregation_two_level_ht() {
  expected_size_hint=$((table_size / 10))
  prepare_table

  query="
  -- size_hint = group_by_two_level_threshold = $expected_size_hint ---
    SELECT number
      FROM $table_name
  GROUP BY number
  SETTINGS max_threads = $max_threads,
           group_by_two_level_threshold = $expected_size_hint,
           group_by_two_level_threshold_bytes = $((table_size * 1000)),
           max_bytes_before_external_group_by = 1
    FORMAT Null;"

  run_query
  run_query
  check_convertion_to_two_level
  print_border
}

test_several_threads_simple_group_by_in_order_aggregation() {
  expected_size_hint=$table_size
  prepare_table_with_sorting_key number

  query_template="
  -- size_hint = $expected_size_hint --
    SELECT number
      FROM $table_name
  GROUP BY number
  SETTINGS max_threads = $max_threads,
           group_by_two_level_threshold = $((expected_size_hint + 1)),
           group_by_two_level_threshold_bytes = $((table_size * 1000)),
           optimize_aggregation_in_order = {aggregation_in_order}
    FORMAT Null;"

  # Collected sizes are not used for now during in-order aggregation since
  # latter works with each group by key in turn (without storing them in HT)
  # and also statistics isn't used during merging of partially aggregated blocks.
  # So we can check size_hint value only during usual aggregation.

  query=$(sed -e 's/{aggregation_in_order}/1/' <<< $query_template)
  run_query
  query=$(sed -e 's/{aggregation_in_order}/0/' <<< $query_template)
  run_query
  check_preallocated_elements $((expected_size_hint / max_threads)) $expected_size_hint
  print_border
}

test_several_threads_simple_group_by_with_limit_and_rollup_single_level_ht() {
  expected_size_hint=$table_size
  prepare_table

  query="
  -- size_hint = $expected_size_hint despite the presence of limit --
       SELECT number
         FROM $table_name
     GROUP BY number
  WITH ROLLUP
        LIMIT 5
     SETTINGS max_threads = $max_threads,
              group_by_two_level_threshold = $((expected_size_hint + 1)),
              group_by_two_level_threshold_bytes = $((table_size * 1000))
       FORMAT Null;"

  run_query
  run_query
  check_preallocated_elements $((expected_size_hint / max_threads)) $expected_size_hint
  print_border
}

test_several_threads_simple_group_by_with_limit_and_rollup_two_level_ht() {
  expected_size_hint=$table_size
  prepare_table

  query="
  -- size_hint = $expected_size_hint despite the presence of limit --
       SELECT number
         FROM $table_name
     GROUP BY number
  WITH ROLLUP
        LIMIT 5
     SETTINGS max_threads = $max_threads,
              group_by_two_level_threshold = $expected_size_hint,
              group_by_two_level_threshold_bytes = $((table_size * 1000))
       FORMAT Null;"

  run_query
  run_query
  check_convertion_to_two_level
  print_border
}

test_several_threads_simple_group_by_with_limit_and_cube_single_level_ht() {
  expected_size_hint=$table_size
  prepare_table

  query="
  -- size_hint = $expected_size_hint despite the presence of limit --
     SELECT number
       FROM $table_name
   GROUP BY number
  WITH CUBE
      LIMIT 5
   SETTINGS max_threads = $max_threads,
            group_by_two_level_threshold = $((expected_size_hint + 1)),
            group_by_two_level_threshold_bytes = $((table_size * 1000))
     FORMAT Null;"

  run_query
  run_query
  check_preallocated_elements $((expected_size_hint / max_threads)) $expected_size_hint
  print_border
}

test_several_threads_simple_group_by_with_limit_and_cube_two_level_ht() {
  expected_size_hint=$table_size
  prepare_table

  query="
  -- size_hint = $expected_size_hint despite the presence of limit --
     SELECT number
       FROM $table_name
   GROUP BY number
  WITH CUBE
      LIMIT 5
   SETTINGS max_threads = $max_threads,
            group_by_two_level_threshold = $expected_size_hint,
            group_by_two_level_threshold_bytes = $((table_size * 1000))
     FORMAT Null;"

  run_query
  run_query
  check_convertion_to_two_level
  print_border
}
