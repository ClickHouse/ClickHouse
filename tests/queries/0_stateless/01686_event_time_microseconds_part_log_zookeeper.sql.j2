-- vim: set ft=sql:

{% for engine, params in {
  'MergeTree': ['table_with_single_pk', ''],
  'ReplicatedMergeTree': ['table_with_single_pk_rep', "'/clickhouse/" + database + "/table_with_single_pk_rep', 'replica'"],
}.items() %}
{% set table = params[0] %}
{% set args  = params[1] %}
SELECT '{{ engine }}';

DROP TABLE IF EXISTS {{ table }};

CREATE TABLE {{ table }}
(
  key UInt8,
  value String
)
ENGINE = {{ engine }}( {{ args }})
ORDER BY key;

INSERT INTO {{ table }} SELECT number, toString(number % 10) FROM numbers(1000000);

-- Check NewPart
SYSTEM FLUSH LOGS;
WITH (
         SELECT (event_time, event_time_microseconds)
         FROM system.part_log
         WHERE table = '{{ table }}' AND database = currentDatabase() AND event_type = 'NewPart'
         ORDER BY event_time DESC
         LIMIT 1
    ) AS time
SELECT if(dateDiff('second', toDateTime(time.2), toDateTime(time.1)) = 0, 'ok', 'fail');

-- Now let's check RemovePart
TRUNCATE TABLE {{ table }};
SYSTEM FLUSH LOGS;
WITH (
         SELECT (event_time, event_time_microseconds)
         FROM system.part_log
         WHERE table = '{{ table }}' AND database = currentDatabase() AND event_type = 'RemovePart'
         ORDER BY event_time DESC
         LIMIT 1
    ) AS time
SELECT if(dateDiff('second', toDateTime(time.2), toDateTime(time.1)) = 0, 'ok', 'fail');

DROP TABLE {{ table }};
{% endfor %}
