#!/usr/bin/expect -f

set basedir [file dirname $argv0]
set basename [file tail $argv0]
if {[info exists env(CLICKHOUSE_TMP)]} {
    set CLICKHOUSE_TMP $env(CLICKHOUSE_TMP)
} else {
    set CLICKHOUSE_TMP "."
}
exp_internal -f $CLICKHOUSE_TMP/$basename.debuglog 0
set history_file $CLICKHOUSE_TMP/$basename.history

log_user 0
set timeout 60
match_max 100000

expect_after {
    # Do not ignore eof from expect
    -i $any_spawn_id eof { exp_continue }
    # A default timeout action is to do nothing, change it to fail
    -i $any_spawn_id timeout { exit 1 }
}

spawn bash -c "source $basedir/../shell_config.sh ; EDITOR=cat \$CLICKHOUSE_CLIENT_BINARY \$CLICKHOUSE_CLIENT_EXPECT_OPT --history_file=$history_file"

expect ":) "

#
# no format
#
send -- "select 1"
expect "select 1"
# editor without format (M-E)
send -- "\033E"
expect "select 1"
send -- "\r"
expect "Elapsed"
expect ":) "

#
# oneline
#
send -- "select 1"
# editor with format (M-F)
send -- "\033F"
expect "SELECT 1"
send -- "\r"
expect "Elapsed"
expect ":) "

#
# multiquery
#
send -- "select 1; select 2;"
# editor with format (M-F)
send -- "\033F"
expect "SELECT 1;"
expect "SELECT 2;"
send -- "\r"
expect "Elapsed"
expect "Elapsed"
expect ":) "

#
# INSERTs
#
send -- "insert into data select * from numbers(10)"
# editor with format (M-F)
send -- "\033F"
expect "INSERT INTO data SELECT * FROM numbers(10)"
send -- "\r"
expect "Elapsed"
expect ":) "

#
# INSERT
#
send -- "insert into function null() values (1)"
# editor with format (M-F)
send -- "\033F"
expect "INSERT INTO FUNCTION null() VALUES (1)"
send -- "\r"
expect "Elapsed"
expect ":) "

send -- "insert into function null() format JSONEachRow {\"foo\": \"bar\"}"
# editor with format (M-F)
send -- "\033F"
expect "INSERT INTO FUNCTION null() FORMAT JSONEachRow {\"foo\": \"bar\"}"
send -- "\r"
expect "Elapsed"
expect ":) "

send -- ""
expect eof
