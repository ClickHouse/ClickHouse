-- { echo On }

-- two tables
select * from tab_l l inner join tab_m m on l.a * 2 = m.c + m.d and l.d = m.a and l.b + l.c = m.b * 2 order by l.a limit 10 offset 999990;
999990	999990	999990	999990	999990	999990	999990	999990
999991	999991	999991	999991	999991	999991	999991	999991
999992	999992	999992	999992	999992	999992	999992	999992
999993	999993	999993	999993	999993	999993	999993	999993
999994	999994	999994	999994	999994	999994	999994	999994
999995	999995	999995	999995	999995	999995	999995	999995
999996	999996	999996	999996	999996	999996	999996	999996
999997	999997	999997	999997	999997	999997	999997	999997
999998	999998	999998	999998	999998	999998	999998	999998
999999	999999	999999	999999	999999	999999	999999	999999
select explain e from (explain actions = 1 select * from tab_l l inner join tab_m m on l.a * 2 = m.c + m.d and l.b + l.c = m.b * 2)
where e like '%ReadFromMergeTree%' or e like '%Expression%' or e like '%Join%' or e like '%Clauses%' or e like '%Sharding%';
Expression ((Project names + Projection))
  Expression
    Join
    Algorithm: ConcurrentHashJoin
    Clauses: [(multiply(__table1.a, 2_UInt8), plus(__table1.b, __table1.c)) = (plus(__table2.c, __table2.d), multiply(__table2.b, 2_UInt8))]
    Sharding: [(multiply(a, 2) = plus(c, d)), (plus(b, c) = multiply(b, 2))]
      Expression
        Expression (Change column names to column identifiers)
          ReadFromMergeTree (default.tab_l)
      Expression
        Expression (Change column names to column identifiers)
          ReadFromMergeTree (default.tab_m)
-- three tables
select * from tab_l l inner join tab_m m on l.a * 2 = m.c + m.d and l.d = m.a and l.b + l.c = m.b * 2 inner join tab_r r on l.a * 2 = r.a * 2 and l.b + l.c = r.c * 2 and l.d = r.d order by l.a limit 10 offset 999990;
999990	999990	999990	999990	999990	999990	999990	999990	999990	999990	999990	999990
999991	999991	999991	999991	999991	999991	999991	999991	999991	999991	999991	999991
999992	999992	999992	999992	999992	999992	999992	999992	999992	999992	999992	999992
999993	999993	999993	999993	999993	999993	999993	999993	999993	999993	999993	999993
999994	999994	999994	999994	999994	999994	999994	999994	999994	999994	999994	999994
999995	999995	999995	999995	999995	999995	999995	999995	999995	999995	999995	999995
999996	999996	999996	999996	999996	999996	999996	999996	999996	999996	999996	999996
999997	999997	999997	999997	999997	999997	999997	999997	999997	999997	999997	999997
999998	999998	999998	999998	999998	999998	999998	999998	999998	999998	999998	999998
999999	999999	999999	999999	999999	999999	999999	999999	999999	999999	999999	999999
select explain e from (explain actions = 1 select * from tab_l l inner join tab_m m on l.a * 2 = m.c + m.d and l.d = m.a and l.b + l.c = m.b * 2 inner join tab_r r on l.a * 2 = r.a * 2 and l.b + l.c = r.c * 2 and l.d = r.d)
where e like '%ReadFromMergeTree%' or e like '%Expression%' or e like '%Join%' or e like '%Clauses%' or e like '%Sharding%';
Expression ((Project names + Projection))
  Expression
    Join
    Algorithm: ConcurrentHashJoin
    Clauses: [(multiply(__table1.a, 2_UInt8), plus(__table1.b, __table1.c), __table1.d) = (multiply(__table3.a, 2_UInt8), multiply(__table3.c, 2_UInt8), __table3.d)]
    Sharding: [(multiply(a, 2) = multiply(a, 2)), (plus(b, c) = multiply(c, 2))]
      Expression
        Expression
          Join
          Algorithm: ConcurrentHashJoin
          Clauses: [(multiply(__table1.a, 2_UInt8), __table1.d, plus(__table1.b, __table1.c)) = (plus(__table2.c, __table2.d), __table2.a, multiply(__table2.b, 2_UInt8))]
          Sharding: [(multiply(a, 2) = plus(c, d)), (plus(b, c) = multiply(b, 2))]
            Expression
              Expression (Change column names to column identifiers)
                ReadFromMergeTree (default.tab_l)
            Expression
              Expression (Change column names to column identifiers)
                ReadFromMergeTree (default.tab_m)
      Expression
        Expression (Change column names to column identifiers)
          ReadFromMergeTree (default.tab_r)
--- three tables, where m table matches one key, so that r table can match only one key as well
select * from tab_l l inner join tab_m m on l.a * 2 = m.c + m.d and l.d = m.a inner join tab_r r on l.a * 2 = r.a * 2 and l.b + l.c = r.c * 2 and l.d = r.d order by l.a limit 10 offset 999990;
999990	999990	999990	999990	999990	999990	999990	999990	999990	999990	999990	999990
999991	999991	999991	999991	999991	999991	999991	999991	999991	999991	999991	999991
999992	999992	999992	999992	999992	999992	999992	999992	999992	999992	999992	999992
999993	999993	999993	999993	999993	999993	999993	999993	999993	999993	999993	999993
999994	999994	999994	999994	999994	999994	999994	999994	999994	999994	999994	999994
999995	999995	999995	999995	999995	999995	999995	999995	999995	999995	999995	999995
999996	999996	999996	999996	999996	999996	999996	999996	999996	999996	999996	999996
999997	999997	999997	999997	999997	999997	999997	999997	999997	999997	999997	999997
999998	999998	999998	999998	999998	999998	999998	999998	999998	999998	999998	999998
999999	999999	999999	999999	999999	999999	999999	999999	999999	999999	999999	999999
select explain e from (explain actions = 1 select * from tab_l l inner join tab_m m on l.a * 2 = m.c + m.d and l.d = m.a inner join tab_r r on l.a * 2 = r.a * 2 and l.b + l.c = r.c * 2 and l.d = r.d)
where e like '%ReadFromMergeTree%' or e like '%Expression%' or e like '%Join%' or e like '%Clauses%' or e like '%Sharding%';
Expression ((Project names + Projection))
  Expression
    Join
    Algorithm: ConcurrentHashJoin
    Clauses: [(multiply(__table1.a, 2_UInt8), plus(__table1.b, __table1.c), __table1.d) = (multiply(__table3.a, 2_UInt8), multiply(__table3.c, 2_UInt8), __table3.d)]
    Sharding: [(multiply(a, 2) = multiply(a, 2))]
      Expression
        Expression
          Join
          Algorithm: ConcurrentHashJoin
          Clauses: [(multiply(__table1.a, 2_UInt8), __table1.d) = (plus(__table2.c, __table2.d), __table2.a)]
          Sharding: [(multiply(a, 2) = plus(c, d))]
            Expression
              Expression (Change column names to column identifiers)
                ReadFromMergeTree (default.tab_l)
            Expression
              Expression (Change column names to column identifiers)
                ReadFromMergeTree (default.tab_m)
      Expression
        Expression (Change column names to column identifiers)
          ReadFromMergeTree (default.tab_r)
--- three tables, right table matches one key
select * from tab_l l inner join tab_m m on l.a * 2 = m.c + m.d and l.d = m.a and l.b + l.c = m.b * 2 inner join tab_r r on l.a * 2 = r.a * 2 and l.d = r.d order by l.a limit 10 offset 999990;
999990	999990	999990	999990	999990	999990	999990	999990	999990	999990	999990	999990
999991	999991	999991	999991	999991	999991	999991	999991	999991	999991	999991	999991
999992	999992	999992	999992	999992	999992	999992	999992	999992	999992	999992	999992
999993	999993	999993	999993	999993	999993	999993	999993	999993	999993	999993	999993
999994	999994	999994	999994	999994	999994	999994	999994	999994	999994	999994	999994
999995	999995	999995	999995	999995	999995	999995	999995	999995	999995	999995	999995
999996	999996	999996	999996	999996	999996	999996	999996	999996	999996	999996	999996
999997	999997	999997	999997	999997	999997	999997	999997	999997	999997	999997	999997
999998	999998	999998	999998	999998	999998	999998	999998	999998	999998	999998	999998
999999	999999	999999	999999	999999	999999	999999	999999	999999	999999	999999	999999
select explain e from (explain actions = 1 select * from tab_l l inner join tab_m m on l.a * 2 = m.c + m.d and l.d = m.a and l.b + l.c = m.b * 2 inner join tab_r r on l.a * 2 = r.a * 2 and l.d = r.d)
where e like '%ReadFromMergeTree%' or e like '%Expression%' or e like '%Join%' or e like '%Clauses%' or e like '%Sharding%';
Expression ((Project names + Projection))
  Expression
    Join
    Algorithm: ConcurrentHashJoin
    Clauses: [(multiply(__table1.a, 2_UInt8), __table1.d) = (multiply(__table3.a, 2_UInt8), __table3.d)]
    Sharding: [(multiply(a, 2) = multiply(a, 2))]
      Expression
        Expression
          Join
          Algorithm: ConcurrentHashJoin
          Clauses: [(multiply(__table1.a, 2_UInt8), __table1.d, plus(__table1.b, __table1.c)) = (plus(__table2.c, __table2.d), __table2.a, multiply(__table2.b, 2_UInt8))]
          Sharding: [(multiply(a, 2) = plus(c, d))]
            Expression
              Expression (Change column names to column identifiers)
                ReadFromMergeTree (default.tab_l)
            Expression
              Expression (Change column names to column identifiers)
                ReadFromMergeTree (default.tab_m)
      Expression
        Expression (Change column names to column identifiers)
          ReadFromMergeTree (default.tab_r)
--- three tables, tab_m table matches noting, so right table can match both keys
select * from tab_l l inner join tab_m m on l.d = m.a inner join tab_r r on l.a * 2 = r.a * 2 and l.b + l.c = r.c * 2 and l.d = r.d order by l.a limit 10 offset 999990;
999990	999990	999990	999990	999990	999990	999990	999990	999990	999990	999990	999990
999991	999991	999991	999991	999991	999991	999991	999991	999991	999991	999991	999991
999992	999992	999992	999992	999992	999992	999992	999992	999992	999992	999992	999992
999993	999993	999993	999993	999993	999993	999993	999993	999993	999993	999993	999993
999994	999994	999994	999994	999994	999994	999994	999994	999994	999994	999994	999994
999995	999995	999995	999995	999995	999995	999995	999995	999995	999995	999995	999995
999996	999996	999996	999996	999996	999996	999996	999996	999996	999996	999996	999996
999997	999997	999997	999997	999997	999997	999997	999997	999997	999997	999997	999997
999998	999998	999998	999998	999998	999998	999998	999998	999998	999998	999998	999998
999999	999999	999999	999999	999999	999999	999999	999999	999999	999999	999999	999999
select explain e from (explain actions = 1 select * from tab_l l inner join tab_m m on l.d = m.a inner join tab_r r on l.a * 2 = r.a * 2 and l.b + l.c = r.c * 2 and l.d = r.d)
where e like '%ReadFromMergeTree%' or e like '%Expression%' or e like '%Join%' or e like '%Clauses%' or e like '%Sharding%';
Expression ((Project names + Projection))
  Expression
    Join
    Algorithm: ConcurrentHashJoin
    Clauses: [(multiply(__table1.a, 2_UInt8), plus(__table1.b, __table1.c), __table1.d) = (multiply(__table3.a, 2_UInt8), multiply(__table3.c, 2_UInt8), __table3.d)]
    Sharding: [(multiply(a, 2) = multiply(a, 2)), (plus(b, c) = multiply(c, 2))]
      Expression
        Expression
          Join
          Algorithm: ConcurrentHashJoin
          Clauses: [(__table1.d) = (__table2.a)]
            Expression (Change column names to column identifiers)
              ReadFromMergeTree (default.tab_l)
            Expression (Change column names to column identifiers)
              ReadFromMergeTree (default.tab_m)
      Expression
        Expression (Change column names to column identifiers)
          ReadFromMergeTree (default.tab_r)
--- join_use_nulls is not supported. Here we check that is not broken in general.
set join_use_nulls=1;
-- two tables
select * from tab_l l right join tab_m m on l.a * 2 = m.c + m.d and l.d = m.a and l.b + l.c = m.b * 2 order by l.a limit 10 offset 999990;
999990	999990	999990	999990	999990	999990	999990	999990
999991	999991	999991	999991	999991	999991	999991	999991
999992	999992	999992	999992	999992	999992	999992	999992
999993	999993	999993	999993	999993	999993	999993	999993
999994	999994	999994	999994	999994	999994	999994	999994
999995	999995	999995	999995	999995	999995	999995	999995
999996	999996	999996	999996	999996	999996	999996	999996
999997	999997	999997	999997	999997	999997	999997	999997
999998	999998	999998	999998	999998	999998	999998	999998
999999	999999	999999	999999	999999	999999	999999	999999
select explain e from (explain actions = 1 select * from tab_l l right join tab_m m on l.a * 2 = m.c + m.d and l.b + l.c = m.b * 2)
where e like '%ReadFromMergeTree%' or e like '%Expression%' or e like '%Join%' or e like '%Clauses%' or e like '%Sharding%';
Expression ((Project names + Projection))
  Expression
    Join
    Algorithm: HashJoin
    Clauses: [(multiply(__table1.a, 2_UInt8), plus(__table1.b, __table1.c)) = (plus(__table2.c, __table2.d), multiply(__table2.b, 2_UInt8))]
      Expression
        Expression (Change column names to column identifiers)
          ReadFromMergeTree (default.tab_l)
      Expression
        Expression (Change column names to column identifiers)
          ReadFromMergeTree (default.tab_m)
-- three tables
select * from tab_l l left join tab_m m on l.a * 2 = m.c + m.d and l.d = m.a and l.b + l.c = m.b * 2 left join tab_r r on l.a * 2 = r.a * 2 and l.b + l.c = r.c * 2 and l.d = r.d order by l.a limit 10 offset 999990;
999990	999990	999990	999990	999990	999990	999990	999990	999990	999990	999990	999990
999991	999991	999991	999991	999991	999991	999991	999991	999991	999991	999991	999991
999992	999992	999992	999992	999992	999992	999992	999992	999992	999992	999992	999992
999993	999993	999993	999993	999993	999993	999993	999993	999993	999993	999993	999993
999994	999994	999994	999994	999994	999994	999994	999994	999994	999994	999994	999994
999995	999995	999995	999995	999995	999995	999995	999995	999995	999995	999995	999995
999996	999996	999996	999996	999996	999996	999996	999996	999996	999996	999996	999996
999997	999997	999997	999997	999997	999997	999997	999997	999997	999997	999997	999997
999998	999998	999998	999998	999998	999998	999998	999998	999998	999998	999998	999998
999999	999999	999999	999999	999999	999999	999999	999999	999999	999999	999999	999999
select explain e from (explain actions = 1 select * from tab_l l left join tab_m m on l.a * 2 = m.c + m.d and l.d = m.a and l.b + l.c = m.b * 2 left join tab_r r on l.a * 2 = r.a * 2 and l.b + l.c = r.c * 2 and l.d = r.d)
where e like '%ReadFromMergeTree%' or e like '%Expression%' or e like '%Join%' or e like '%Clauses%' or e like '%Sharding%';
Expression ((Project names + Projection))
  Expression
    Join
    Algorithm: ConcurrentHashJoin
    Clauses: [(multiply(__table1.a, 2_UInt8), plus(__table1.b, __table1.c), __table1.d) = (multiply(__table3.a, 2_UInt8), multiply(__table3.c, 2_UInt8), __table3.d)]
      Expression
        Expression
          Join
          Algorithm: ConcurrentHashJoin
          Clauses: [(multiply(__table1.a, 2_UInt8), __table1.d, plus(__table1.b, __table1.c)) = (plus(__table2.c, __table2.d), __table2.a, multiply(__table2.b, 2_UInt8))]
            Expression
              Expression (Change column names to column identifiers)
                ReadFromMergeTree (default.tab_l)
            Expression
              Expression (Change column names to column identifiers)
                ReadFromMergeTree (default.tab_m)
      Expression
        Expression (Change column names to column identifiers)
          ReadFromMergeTree (default.tab_r)
