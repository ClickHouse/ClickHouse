#!/usr/bin/expect -f

# This is a separate test, because we want to test the interactive mode.
# https://github.com/ClickHouse/ClickHouse/issues/19353

set basedir [file dirname $argv0]
set basename [file tail $argv0]
exp_internal -f $env(CLICKHOUSE_TMP)/$basename.debuglog 0
set history_file $env(CLICKHOUSE_TMP)/$basename.history

log_user 0
set timeout 60
match_max 100000

expect_after {
    # Do not ignore eof from expect
    -i $any_spawn_id eof { exp_continue }
    # A default timeout action is to do nothing, change it to fail
    -i $any_spawn_id timeout { exit 1 }
}

spawn bash -c "source $basedir/../shell_config.sh ; \$CLICKHOUSE_CLIENT_BINARY \$CLICKHOUSE_CLIENT_OPT --disable_suggestion -mn --history_file=$history_file"
expect "\n:) "

send -- "DROP TABLE IF EXISTS t01565;\n"
# NOTE: this is important for -mn mode, you should send "\r" only after reading echoed command
expect "DROP"
send -- "\r"
expect "\nOk."
expect "\n:)"

send -- "CREATE TABLE t01565 (c0 String, c1 Int32) ENGINE = Memory() ;\n"
expect "CREATE"
send -- "\r"
expect "\nOk."
expect "\n:) "

send -- "INSERT INTO t01565(c0, c1) VALUES (\"1\",1) ;\n"
expect "INSERT"
send -- "\r"
expect "\n:) "

send -- "INSERT INTO t01565(c0, c1) VALUES ('1', 1) ;\n"
expect "INSERT"
send -- "\r"
expect "\nOk."
expect "\n:) "

# Ctrl+D
send -- "\4"
expect eof
