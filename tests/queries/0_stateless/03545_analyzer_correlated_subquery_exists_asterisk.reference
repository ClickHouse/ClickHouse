Expression ((Project names + (Projection + WHERE)))
Actions: INPUT :: 0 -> exists(__table2) UInt8 : 0
         INPUT :: 1 -> __table1.i1 Int64 : 1
         COLUMN Const(UInt8) -> 1 UInt8 : 2
Positions: 2
  Expression (Post Join Actions)
  Actions: INPUT :: 0 -> __table1.i1 Int64 : 0
           INPUT :: 1 -> exists(__table2) UInt8 : 1
  Positions: 0 1
    Join
    Type: LEFT
    Strictness: SEMI
    Algorithm: ConcurrentHashJoin
    Clauses: [(__table1.i1) = (exists(__table2).__table1.i1)]
      Expression (Left Pre Join Actions)
      Actions: INPUT :: 0 -> __table1.i1 Int64 : 0
      Positions: 0
        Expression (Change column names to column identifiers)
        Actions: INPUT : 0 -> i1 Int64 : 0
                 ALIAS i1 :: 0 -> __table1.i1 Int64 : 1
        Positions: 1
          ReadFromMergeTree (default.test)
          ReadType: Default
          Parts: 1
          Granules: 1
      Expression (Right Pre Join Actions)
      Actions: INPUT :: 0 -> exists(__table2).__table1.i1 Int64 : 0
               INPUT :: 1 -> exists(__table2) UInt8 : 1
      Positions: 0 1
        Expression ((Create result for always true EXISTS expression + ))
        Actions: INPUT : 0 -> __table1.i1 Int64 : 0
                 COLUMN Const(UInt8) -> exists(__table2) UInt8 : 1
                 ALIAS __table1.i1 :: 0 -> exists(__table2).__table1.i1 Int64 : 2
                 FUNCTION materialize(exists(__table2) :: 1) -> materialize(exists(__table2)) UInt8 : 0
                 ALIAS materialize(exists(__table2)) :: 0 -> exists(__table2) UInt8 : 1
        Positions: 2 1
          Expression (Post Join Actions)
          Actions: INPUT :: 0 -> __table1.i1 Int64 : 0
          Positions: 0
            Join
            Type: INNER
            Strictness: ALL
            Algorithm: HashJoin
            Clauses: [(__table1.i1) = (__table4.i2)]
              Expression (Left Pre Join Actions)
              Actions: INPUT :: 0 -> __table1.i1 Int64 : 0
              Positions: 0
                Expression (Change column names to column identifiers)
                Actions: INPUT : 0 -> i1 Int64 : 0
                         ALIAS i1 :: 0 -> __table1.i1 Int64 : 1
                Positions: 1
                  ReadFromMergeTree (default.test)
                  ReadType: Default
                  Parts: 1
                  Granules: 1
              Expression (Right Pre Join Actions)
              Actions: INPUT :: 0 -> __table4.i2 Int64 : 0
              Positions: 0
                Expression (Change column names to column identifiers)
                Actions: INPUT :: 0 -> i1 Int64 : 0
                         INPUT : 1 -> i2 Int64 : 1
                         ALIAS i2 :: 1 -> __table4.i2 Int64 : 2
                Positions: 2
                  ReadFromMergeTree (default.test)
                  ReadType: Default
                  Parts: 1
                  Granules: 1
