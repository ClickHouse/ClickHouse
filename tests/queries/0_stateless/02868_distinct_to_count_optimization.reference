-- { echoOn }

-- test simple distinct
SELECT uniq(a) FROM (SELECT DISTINCT a FROM test_rewrite_uniq_to_count) settings allow_experimental_analyzer=0;
3
EXPLAIN SYNTAX SELECT uniq(a) FROM (SELECT DISTINCT a FROM test_rewrite_uniq_to_count) settings allow_experimental_analyzer=0;
SELECT count()
FROM
(
    SELECT DISTINCT a
    FROM test_rewrite_uniq_to_count
)
SETTINGS allow_experimental_analyzer = 0
SELECT uniq(a) FROM (SELECT DISTINCT a FROM test_rewrite_uniq_to_count) settings allow_experimental_analyzer=1;
3
EXPLAIN QUERY TREE SELECT uniq(a) FROM (SELECT DISTINCT a FROM test_rewrite_uniq_to_count) settings allow_experimental_analyzer=1;
QUERY id: 0
  PROJECTION COLUMNS
    uniq(a) UInt64
  PROJECTION
    LIST id: 1, nodes: 1
      FUNCTION id: 2, function_name: count, function_type: aggregate, result_type: UInt64
  JOIN TREE
    QUERY id: 3, is_subquery: 1, is_distinct: 1
      PROJECTION COLUMNS
        a UInt8
      PROJECTION
        LIST id: 4, nodes: 1
          COLUMN id: 5, column_name: a, result_type: UInt8, source_id: 6
      JOIN TREE
        TABLE id: 6, table_name: default.test_rewrite_uniq_to_count
  SETTINGS allow_experimental_analyzer=1
-- test distinct with subquery alias
SELECT uniq(t.a) FROM (SELECT DISTINCT a FROM test_rewrite_uniq_to_count) t settings allow_experimental_analyzer=0;
3
EXPLAIN SYNTAX SELECT uniq(a) FROM (SELECT DISTINCT a FROM test_rewrite_uniq_to_count) t settings allow_experimental_analyzer=0;
SELECT count()
FROM
(
    SELECT DISTINCT a
    FROM test_rewrite_uniq_to_count
) AS t
SETTINGS allow_experimental_analyzer = 0
SELECT uniq(t.a) FROM (SELECT DISTINCT a FROM test_rewrite_uniq_to_count) t settings allow_experimental_analyzer=1;
3
EXPLAIN QUERY TREE SELECT uniq(t.a) FROM (SELECT DISTINCT a FROM test_rewrite_uniq_to_count) t settings allow_experimental_analyzer=1;
QUERY id: 0
  PROJECTION COLUMNS
    uniq(a) UInt64
  PROJECTION
    LIST id: 1, nodes: 1
      FUNCTION id: 2, function_name: count, function_type: aggregate, result_type: UInt64
  JOIN TREE
    QUERY id: 3, alias: t, is_subquery: 1, is_distinct: 1
      PROJECTION COLUMNS
        a UInt8
      PROJECTION
        LIST id: 4, nodes: 1
          COLUMN id: 5, column_name: a, result_type: UInt8, source_id: 6
      JOIN TREE
        TABLE id: 6, table_name: default.test_rewrite_uniq_to_count
  SETTINGS allow_experimental_analyzer=1
-- test distinct with compound column name
SELECT uniq(a) FROM (SELECT DISTINCT test_rewrite_uniq_to_count.a FROM test_rewrite_uniq_to_count) t settings allow_experimental_analyzer=0;
3
EXPLAIN SYNTAX SELECT uniq(a) FROM (SELECT DISTINCT test_rewrite_uniq_to_count.a FROM test_rewrite_uniq_to_count) t settings allow_experimental_analyzer=0;
SELECT count()
FROM
(
    SELECT DISTINCT a
    FROM test_rewrite_uniq_to_count
) AS t
SETTINGS allow_experimental_analyzer = 0
SELECT uniq(a) FROM (SELECT DISTINCT test_rewrite_uniq_to_count.a FROM test_rewrite_uniq_to_count) t settings allow_experimental_analyzer=1;
3
EXPLAIN QUERY TREE SELECT uniq(a) FROM (SELECT DISTINCT test_rewrite_uniq_to_count.a FROM test_rewrite_uniq_to_count) t settings allow_experimental_analyzer=1;
QUERY id: 0
  PROJECTION COLUMNS
    uniq(a) UInt64
  PROJECTION
    LIST id: 1, nodes: 1
      FUNCTION id: 2, function_name: count, function_type: aggregate, result_type: UInt64
  JOIN TREE
    QUERY id: 3, alias: t, is_subquery: 1, is_distinct: 1
      PROJECTION COLUMNS
        a UInt8
      PROJECTION
        LIST id: 4, nodes: 1
          COLUMN id: 5, column_name: a, result_type: UInt8, source_id: 6
      JOIN TREE
        TABLE id: 6, table_name: default.test_rewrite_uniq_to_count
  SETTINGS allow_experimental_analyzer=1
-- test distinct with select expression alias
SELECT uniq(alias_of_a) FROM (SELECT DISTINCT a as alias_of_a FROM test_rewrite_uniq_to_count) t settings allow_experimental_analyzer=0;
3
EXPLAIN SYNTAX SELECT uniq(alias_of_a) FROM (SELECT DISTINCT a as alias_of_a FROM test_rewrite_uniq_to_count) t settings allow_experimental_analyzer=0;
SELECT count()
FROM
(
    SELECT DISTINCT a AS alias_of_a
    FROM test_rewrite_uniq_to_count
) AS t
SETTINGS allow_experimental_analyzer = 0
SELECT uniq(alias_of_a) FROM (SELECT DISTINCT a as alias_of_a FROM test_rewrite_uniq_to_count) t settings allow_experimental_analyzer=1;
3
EXPLAIN QUERY TREE SELECT uniq(alias_of_a) FROM (SELECT DISTINCT a as alias_of_a FROM test_rewrite_uniq_to_count) t settings allow_experimental_analyzer=1;
QUERY id: 0
  PROJECTION COLUMNS
    uniq(alias_of_a) UInt64
  PROJECTION
    LIST id: 1, nodes: 1
      FUNCTION id: 2, function_name: count, function_type: aggregate, result_type: UInt64
  JOIN TREE
    QUERY id: 3, alias: t, is_subquery: 1, is_distinct: 1
      PROJECTION COLUMNS
        alias_of_a UInt8
      PROJECTION
        LIST id: 4, nodes: 1
          COLUMN id: 5, column_name: a, result_type: UInt8, source_id: 6
      JOIN TREE
        TABLE id: 6, table_name: default.test_rewrite_uniq_to_count
  SETTINGS allow_experimental_analyzer=1
-- test simple group by
SELECT uniq(a) FROM (SELECT a, sum(b) FROM test_rewrite_uniq_to_count GROUP BY a) settings allow_experimental_analyzer=0;
3
EXPLAIN SYNTAX SELECT uniq(a) FROM (SELECT a, sum(b) FROM test_rewrite_uniq_to_count GROUP BY a) settings allow_experimental_analyzer=0;
SELECT count()
FROM
(
    SELECT
        a,
        sum(b)
    FROM test_rewrite_uniq_to_count
    GROUP BY a
)
SETTINGS allow_experimental_analyzer = 0
SELECT uniq(a) FROM (SELECT a, sum(b) FROM test_rewrite_uniq_to_count GROUP BY a) settings allow_experimental_analyzer=1;
3
EXPLAIN QUERY TREE SELECT uniq(a) FROM (SELECT a, sum(b) FROM test_rewrite_uniq_to_count GROUP BY a) settings allow_experimental_analyzer=1;
QUERY id: 0
  PROJECTION COLUMNS
    uniq(a) UInt64
  PROJECTION
    LIST id: 1, nodes: 1
      FUNCTION id: 2, function_name: count, function_type: aggregate, result_type: UInt64
  JOIN TREE
    QUERY id: 3, is_subquery: 1
      PROJECTION COLUMNS
        a UInt8
        sum(b) UInt64
      PROJECTION
        LIST id: 4, nodes: 2
          COLUMN id: 5, column_name: a, result_type: UInt8, source_id: 6
          FUNCTION id: 7, function_name: sum, function_type: aggregate, result_type: UInt64
            ARGUMENTS
              LIST id: 8, nodes: 1
                COLUMN id: 9, column_name: b, result_type: UInt8, source_id: 6
      JOIN TREE
        TABLE id: 6, table_name: default.test_rewrite_uniq_to_count
      GROUP BY
        LIST id: 10, nodes: 1
          COLUMN id: 5, column_name: a, result_type: UInt8, source_id: 6
  SETTINGS allow_experimental_analyzer=1
-- test group by with subquery alias
SELECT uniq(t.a) FROM (SELECT a, sum(b) FROM test_rewrite_uniq_to_count GROUP BY a) t settings allow_experimental_analyzer=0;
3
EXPLAIN SYNTAX SELECT uniq(t.a) FROM (SELECT a, sum(b) FROM test_rewrite_uniq_to_count GROUP BY a) t settings allow_experimental_analyzer=0;
SELECT count()
FROM
(
    SELECT
        a,
        sum(b)
    FROM test_rewrite_uniq_to_count
    GROUP BY a
) AS t
SETTINGS allow_experimental_analyzer = 0
SELECT uniq(t.a) FROM (SELECT a, sum(b) FROM test_rewrite_uniq_to_count GROUP BY a) t settings allow_experimental_analyzer=1;
3
EXPLAIN QUERY TREE SELECT uniq(t.a) FROM (SELECT a, sum(b) FROM test_rewrite_uniq_to_count GROUP BY a) t settings allow_experimental_analyzer=1;
QUERY id: 0
  PROJECTION COLUMNS
    uniq(a) UInt64
  PROJECTION
    LIST id: 1, nodes: 1
      FUNCTION id: 2, function_name: count, function_type: aggregate, result_type: UInt64
  JOIN TREE
    QUERY id: 3, alias: t, is_subquery: 1
      PROJECTION COLUMNS
        a UInt8
        sum(b) UInt64
      PROJECTION
        LIST id: 4, nodes: 2
          COLUMN id: 5, column_name: a, result_type: UInt8, source_id: 6
          FUNCTION id: 7, function_name: sum, function_type: aggregate, result_type: UInt64
            ARGUMENTS
              LIST id: 8, nodes: 1
                COLUMN id: 9, column_name: b, result_type: UInt8, source_id: 6
      JOIN TREE
        TABLE id: 6, table_name: default.test_rewrite_uniq_to_count
      GROUP BY
        LIST id: 10, nodes: 1
          COLUMN id: 5, column_name: a, result_type: UInt8, source_id: 6
  SETTINGS allow_experimental_analyzer=1
-- test group by with compound column name
SELECT uniq(t.alias_of_a) FROM (SELECT a as alias_of_a, sum(b) FROM test_rewrite_uniq_to_count GROUP BY a) t settings allow_experimental_analyzer=0;
3
EXPLAIN SYNTAX SELECT uniq(t.alias_of_a) FROM (SELECT a as alias_of_a, sum(b) FROM test_rewrite_uniq_to_count GROUP BY a) t settings allow_experimental_analyzer=0;
SELECT count()
FROM
(
    SELECT
        a AS alias_of_a,
        sum(b)
    FROM test_rewrite_uniq_to_count
    GROUP BY a
) AS t
SETTINGS allow_experimental_analyzer = 0
SELECT uniq(t.alias_of_a) FROM (SELECT a as alias_of_a, sum(b) FROM test_rewrite_uniq_to_count GROUP BY a) t settings allow_experimental_analyzer=1;
3
EXPLAIN QUERY TREE SELECT uniq(t.alias_of_a) FROM (SELECT a as alias_of_a, sum(b) FROM test_rewrite_uniq_to_count GROUP BY a) t settings allow_experimental_analyzer=1;
QUERY id: 0
  PROJECTION COLUMNS
    uniq(alias_of_a) UInt64
  PROJECTION
    LIST id: 1, nodes: 1
      FUNCTION id: 2, function_name: count, function_type: aggregate, result_type: UInt64
  JOIN TREE
    QUERY id: 3, alias: t, is_subquery: 1
      PROJECTION COLUMNS
        alias_of_a UInt8
        sum(b) UInt64
      PROJECTION
        LIST id: 4, nodes: 2
          COLUMN id: 5, column_name: a, result_type: UInt8, source_id: 6
          FUNCTION id: 7, function_name: sum, function_type: aggregate, result_type: UInt64
            ARGUMENTS
              LIST id: 8, nodes: 1
                COLUMN id: 9, column_name: b, result_type: UInt8, source_id: 6
      JOIN TREE
        TABLE id: 6, table_name: default.test_rewrite_uniq_to_count
      GROUP BY
        LIST id: 10, nodes: 1
          COLUMN id: 5, column_name: a, result_type: UInt8, source_id: 6
  SETTINGS allow_experimental_analyzer=1
-- test group by with select expression alias
SELECT uniq(t.alias_of_a) FROM (SELECT a as alias_of_a, sum(b) FROM test_rewrite_uniq_to_count GROUP BY alias_of_a) t settings allow_experimental_analyzer=0;
3
EXPLAIN SYNTAX SELECT uniq(t.alias_of_a) FROM (SELECT a as alias_of_a, sum(b) FROM test_rewrite_uniq_to_count GROUP BY alias_of_a) t  settings allow_experimental_analyzer=0;
SELECT count()
FROM
(
    SELECT
        a AS alias_of_a,
        sum(b)
    FROM test_rewrite_uniq_to_count
    GROUP BY alias_of_a
) AS t
SETTINGS allow_experimental_analyzer = 0
SELECT uniq(t.alias_of_a) FROM (SELECT a as alias_of_a, sum(b) FROM test_rewrite_uniq_to_count GROUP BY alias_of_a) t  settings allow_experimental_analyzer=1;
3
EXPLAIN QUERY TREE SELECT uniq(t.alias_of_a) FROM (SELECT a as alias_of_a, sum(b) FROM test_rewrite_uniq_to_count GROUP BY alias_of_a) t  settings allow_experimental_analyzer=1;
QUERY id: 0
  PROJECTION COLUMNS
    uniq(alias_of_a) UInt64
  PROJECTION
    LIST id: 1, nodes: 1
      FUNCTION id: 2, function_name: count, function_type: aggregate, result_type: UInt64
  JOIN TREE
    QUERY id: 3, alias: t, is_subquery: 1
      PROJECTION COLUMNS
        alias_of_a UInt8
        sum(b) UInt64
      PROJECTION
        LIST id: 4, nodes: 2
          COLUMN id: 5, column_name: a, result_type: UInt8, source_id: 6
          FUNCTION id: 7, function_name: sum, function_type: aggregate, result_type: UInt64
            ARGUMENTS
              LIST id: 8, nodes: 1
                COLUMN id: 9, column_name: b, result_type: UInt8, source_id: 6
      JOIN TREE
        TABLE id: 6, table_name: default.test_rewrite_uniq_to_count
      GROUP BY
        LIST id: 10, nodes: 1
          COLUMN id: 5, column_name: a, result_type: UInt8, source_id: 6
  SETTINGS allow_experimental_analyzer=1
drop table if exists test_rewrite_uniq_to_count;
