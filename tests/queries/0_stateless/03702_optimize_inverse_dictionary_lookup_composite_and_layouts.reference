Composite key - plan
SELECT
    __table1.k1 AS k1,
    __table1.k2 AS k2,
    __table1.payload AS payload
FROM default.f AS __table1
WHERE (__table1.k1, __table1.k2) IN (SELECT
    __table1.k1 AS k1,
    __table1.k2 AS k2
FROM dictionary(\'dict_prices_ckh\') AS __table1
WHERE __table1.tag = \'pro\')
ORDER BY
    __table1.k1 ASC,
    __table1.k2 ASC,
    __table1.payload ASC
Composite key
1	a	x
Composite key: AND/OR recursion - plan
SELECT
    __table1.k1 AS k1,
    __table1.k2 AS k2
FROM default.f AS __table1
WHERE (((__table1.k1, __table1.k2) IN (SELECT
    __table1.k1 AS k1,
    __table1.k2 AS k2
FROM dictionary(\'dict_prices_ckh\') AS __table1
WHERE __table1.tag = \'pro\')) AND ((__table1.k1, __table1.k2) IN (SELECT
    __table1.k1 AS k1,
    __table1.k2 AS k2
FROM dictionary(\'dict_prices_ckh\') AS __table1
WHERE _CAST(__table1.price, \'Int32\') < 120))) OR ((__table1.k1, __table1.k2) IN (SELECT
    __table1.k1 AS k1,
    __table1.k2 AS k2
FROM dictionary(\'dict_prices_ckh\') AS __table1
WHERE __table1.tag = \'cheap\'))
ORDER BY
    __table1.k1 ASC,
    __table1.k2 ASC
Composite key: AND/OR recursion
1	a
3	c
Composite key, Complex Key Hashed layout: MATCH - plan
SELECT
    __table1.k1 AS k1,
    __table1.k2 AS k2
FROM default.f AS __table1
WHERE (__table1.k1, __table1.k2) IN (SELECT
    __table1.k1 AS k1,
    __table1.k2 AS k2
FROM dictionary(\'dict_prices_ckh\') AS __table1
WHERE match(__table1.tag, \'^p\'))
ORDER BY
    __table1.k1 ASC,
    __table1.k2 ASC
Composite key, Complex Key Hashed layout: MATCH
1	a
2	a
Flat layout: equality and inequality - plan
SELECT
    __table1.id AS id,
    __table1.payload AS payload
FROM default.f AS __table1
WHERE (__table1.id IN (SELECT __table1.id AS id
FROM dictionary(\'dict_items_flat\') AS __table1
WHERE __table1.name = \'alpha\')) AND (__table1.id IN (SELECT __table1.id AS id
FROM dictionary(\'dict_items_flat\') AS __table1
WHERE __table1.score >= 10))
ORDER BY
    __table1.id ASC,
    __table1.payload ASC
Flat layout: equality and inequality
1	u
1	x
3	z
Range layout: not supported, no rewrite expected - plan
SELECT
    __table1.id AS id,
    __table1.payload AS payload
FROM default.g AS __table1
WHERE dictGetUInt64(\'dict_salary_rh\', \'rate\', __table1.id, _CAST(\'2024-01-15\', \'Date\')) >= 100
ORDER BY
    __table1.id ASC,
    __table1.payload ASC
Range layout: not supported, no rewrite expected
1	p
