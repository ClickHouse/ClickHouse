-- { echoOn }

SET enable_analyzer = 0;
SET join_use_nulls = 0;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	\N
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
0	0
SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
0	0
SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
SEMI LEFT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;
SET enable_analyzer = 0;
SET join_use_nulls = 0;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	\N
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
0	0
SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
0	0
SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
SEMI LEFT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;
SET enable_analyzer = 0;
SET join_use_nulls = 0;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;
0	1
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
ANTI LEFT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;
\N	0
SET enable_analyzer = 0;
SET join_use_nulls = 0;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;
0	1
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
ANTI LEFT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;
\N	0
SET enable_analyzer = 0;
SET join_use_nulls = 0;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	\N
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
0	0
SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
0	0
SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
SEMI RIGHT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;
SET enable_analyzer = 0;
SET join_use_nulls = 0;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	\N
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
0	0
SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
0	0
SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
SEMI RIGHT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;
SET enable_analyzer = 0;
SET join_use_nulls = 0;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;
0	2
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
ANTI RIGHT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;
\N	1
SET enable_analyzer = 0;
SET join_use_nulls = 0;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;
0	2
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
ANTI RIGHT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;
\N	1
SET enable_analyzer = 0;
SET join_use_nulls = 1;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
0	\N
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	\N
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
0	\N
SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
0	\N
SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
SEMI LEFT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;
SET enable_analyzer = 0;
SET join_use_nulls = 1;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
0	\N
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	\N
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
0	\N
SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
0	\N
SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
SEMI LEFT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;
SET enable_analyzer = 0;
SET join_use_nulls = 1;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;
0	1
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
ANTI LEFT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;
\N	\N
SET enable_analyzer = 0;
SET join_use_nulls = 1;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;
0	1
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
ANTI LEFT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;
\N	\N
SET enable_analyzer = 0;
SET join_use_nulls = 1;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
0	0
SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
0	0
SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
SEMI RIGHT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;
SET enable_analyzer = 0;
SET join_use_nulls = 1;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
0	0
SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
0	0
SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
SEMI RIGHT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;
SET enable_analyzer = 0;
SET join_use_nulls = 1;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;
\N	2
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
ANTI RIGHT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;
\N	1
SET enable_analyzer = 0;
SET join_use_nulls = 1;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;
\N	2
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
ANTI RIGHT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;
\N	1
SET enable_analyzer = 1;
SET join_use_nulls = 0;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
0	0
SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
0	0
SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
SEMI LEFT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;
SET enable_analyzer = 1;
SET join_use_nulls = 0;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
0	0
SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
0	0
SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
SEMI LEFT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;
SET enable_analyzer = 1;
SET join_use_nulls = 0;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;
0	1
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
ANTI LEFT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;
\N	0
SET enable_analyzer = 1;
SET join_use_nulls = 0;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;
0	1
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
ANTI LEFT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;
\N	0
SET enable_analyzer = 1;
SET join_use_nulls = 0;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
0	0
SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
0	0
SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
SEMI RIGHT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;
SET enable_analyzer = 1;
SET join_use_nulls = 0;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
0	0
SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
0	0
SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
SEMI RIGHT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;
SET enable_analyzer = 1;
SET join_use_nulls = 0;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;
1	2
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
ANTI RIGHT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;
\N	1
SET enable_analyzer = 1;
SET join_use_nulls = 0;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;
1	2
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
ANTI RIGHT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;
\N	1
SET enable_analyzer = 1;
SET join_use_nulls = 1;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
0	0
SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
0	0
SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
SEMI LEFT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;
SET enable_analyzer = 1;
SET join_use_nulls = 1;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
0	0
SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
0	0
SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
SEMI LEFT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;
SET enable_analyzer = 1;
SET join_use_nulls = 1;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;
0	\N
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
ANTI LEFT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;
\N	\N
SET enable_analyzer = 1;
SET join_use_nulls = 1;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;
0	\N
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
ANTI LEFT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;
\N	\N
SET enable_analyzer = 1;
SET join_use_nulls = 1;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
0	0
SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
0	0
SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
SEMI RIGHT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;
SET enable_analyzer = 1;
SET join_use_nulls = 1;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
0	0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
0	0
SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
0	0
SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
SEMI RIGHT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;
SET enable_analyzer = 1;
SET join_use_nulls = 1;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(2)) AS id) AS d
USING (id)
;
1	2
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
SELECT *
FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a
ANTI RIGHT JOIN (SELECT (1 :: UInt32) AS id) AS d
ON a.id = d.id
;
\N	1
SET enable_analyzer = 1;
SET join_use_nulls = 1;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(toNullable(0))) AS id) AS d
USING (id)
;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d
USING (id)
;
1	2
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d
ON a.id = d.id
;
SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a
ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d
ON a.id = d.idd
;
SELECT *
FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a
ANTI RIGHT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d
ON a.id = d.id
;
\N	1
