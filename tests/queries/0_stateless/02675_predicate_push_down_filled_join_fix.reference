Expression ((Project names + (Projection + )))
Header: t1.id UInt64
        t1.value String
        t2.value String
Actions: INPUT : 0 -> t1.id_0 UInt64 : 0
         INPUT : 1 -> t1.value_1 String : 1
         INPUT : 2 -> t2.value_2 String : 2
         ALIAS t1.id_0 :: 0 -> t1.id UInt64 : 3
         ALIAS t1.value_1 :: 1 -> t1.value String : 0
         ALIAS t2.value_2 :: 2 -> t2.value String : 1
Positions: 3 0 1
  FilledJoin (Filled JOIN)
  Header: t1.id_0 UInt64
          t1.value_1 String
          t2.value_2 String
    Filter (( + (JOIN actions + Change column names to column identifiers)))
    Header: t1.id_0 UInt64
            t1.value_1 String
    Filter column: equals(t1.id_0, 0_UInt8) (removed)
    Actions: INPUT : 0 -> id UInt64 : 0
             INPUT : 1 -> value String : 1
             COLUMN Const(UInt8) -> 0_UInt8 UInt8 : 2
             ALIAS id :: 0 -> t1.id_0 UInt64 : 3
             ALIAS value :: 1 -> t1.value_1 String : 0
             FUNCTION equals(t1.id_0 : 3, 0_UInt8 :: 2) -> equals(t1.id_0, 0_UInt8) UInt8 : 1
    Positions: 1 3 0
      ReadFromMergeTree (default.test_table)
      Header: id UInt64
              value String
      ReadType: Default
      Parts: 1
      Granules: 1
0	Value	JoinValue
