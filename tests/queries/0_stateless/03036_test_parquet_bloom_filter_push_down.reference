3000
bloom filter is off, all row groups should be read
expect rows_read = select count()
{
  "data": [
    {
      "f32": -64.12787,
      "fixed_str": "BYYC",
      "str": "LYLDL"
    },
    {
      "f32": -15.910733,
      "fixed_str": "DCXV",
      "str": "KCGEY"
    }
  ],
  "rows": 2,
  "statistics": {
    "rows_read": 3000,
    "bytes_read": 99010
  }
}
bloom filter is on, some row groups should be skipped
expect rows_read much less than select count()
{
  "data": [
    {
      "f32": -64.12787,
      "fixed_str": "BYYC",
      "str": "LYLDL"
    },
    {
      "f32": -15.910733,
      "fixed_str": "DCXV",
      "str": "KCGEY"
    }
  ],
  "rows": 2,
  "statistics": {
    "rows_read": 1342,
    "bytes_read": 44044
  }
}
bloom filter is on, but where predicate contains data from 2 row groups out of 3.
Rows read should be less than select count, by greater than previous selects
{
  "data": [
    {
      "f32": -95.748695
    },
    {
      "f32": -64.12787
    }
  ],
  "rows": 2,
  "statistics": {
    "rows_read": 1658,
    "bytes_read": 55026
  }
}
bloom filter is on, but where predicate contains data from all row groups
expect rows_read = select count()
{
  "data": [
    {
      "f32": -95.748695
    },
    {
      "f32": -64.12787
    },
    {
      "f32": -42.54674
    }
  ],
  "rows": 3,
  "statistics": {
    "rows_read": 3000,
    "bytes_read": 99010
  }
}
IN check
{
  "data": [
    {
      "f32": -15.910733,
      "fixed_str": "DCXV"
    }
  ],
  "rows": 1,
  "statistics": {
    "rows_read": 1342,
    "bytes_read": 44044
  }
}
IN check for floats
{
  "data": [
    {
      "f64": 22.89182051713945
    },
    {
      "f64": 68.62704389505595
    }
  ],
  "rows": 2,
  "statistics": {
    "rows_read": 1342,
    "bytes_read": 43984
  }
}
tuple in case, bf is off.
{
  "data": [
    {
      "str": "LYLDL",
      "fixed_str": "BYYC"
    }
  ],
  "rows": 1,
  "statistics": {
    "rows_read": 3000,
    "bytes_read": 99010
  }
}
tuple in case, bf is on.
{
  "data": [
    {
      "str": "LYLDL",
      "fixed_str": "BYYC"
    }
  ],
  "rows": 1,
  "statistics": {
    "rows_read": 1342,
    "bytes_read": 44044
  }
}
complex tuple in case, bf is off
{
  "data": [
    {
      "str": "LYLDL",
      "fixed_str": "BYYC"
    }
  ],
  "rows": 1,
  "statistics": {
    "rows_read": 3000,
    "bytes_read": 99010
  }
}
complex tuple in case, bf is on
{
  "data": [
    {
      "str": "LYLDL",
      "fixed_str": "BYYC"
    }
  ],
  "rows": 1,
  "statistics": {
    "rows_read": 1342,
    "bytes_read": 44044
  }
}
complex tuple in case, bf is on. Non existent
{
  "data": [],
  "rows": 0,
  "statistics": {
    "rows_read": 0,
    "bytes_read": 0
  }
}
