idx_a is excluded, so it should perform no filtering, while `id,x_b` should perform filtering since it is included
Name: idx_a
Description: minmax GRANULARITY 1
Parts: 2/2
Granules: 50/50
Name: id,x_b
Description: set GRANULARITY 1
Parts: 1/2
Granules: 13/50
Ranges: 1

After START MERGES and OPTIMIZE TABLE both indexes should participate in filtering
Name: idx_a
Description: minmax GRANULARITY 1
Parts: 1/1
Granules: 6/50
Name: id,x_b
Description: set GRANULARITY 1
Parts: 1/1
Granules: 3/6
Ranges: 1

MATERIALIZE INDEX should also cause both indexes to participate in filtering despite exclude setting
Name: idx_a
Description: minmax GRANULARITY 1
Parts: 2/2
Granules: 6/50
Name: id,x_b
Description: set GRANULARITY 1
Parts: 1/2
Granules: 3/6
Ranges: 1

query-level session setting should override session setting at file level, so id,x_b should not be updated
Name: idx_a
Description: minmax GRANULARITY 1
Parts: 2/2
Granules: 6/50
Name: id,x_b
Description: set GRANULARITY 1
Parts: 2/2
Granules: 6/6
Ranges: 2

Count query log entries containing index updates on INSERT
6

Both indexes are excluded, so neither should participate in filtering
Name: idx_a
Description: minmax GRANULARITY 1
Parts: 2/2
Granules: 50/50
Name: id,x_b
Description: set GRANULARITY 1
Parts: 2/2
Granules: 50/50
Ranges: 2

After START MERGES and OPTIMIZE TABLE both indexes should participate in filtering
Name: idx_a
Description: minmax GRANULARITY 1
Parts: 1/1
Granules: 6/50
Name: id,x_b
Description: set GRANULARITY 1
Parts: 1/1
Granules: 3/6
Ranges: 1

MATERIALIZE INDEX should also cause both indexes to participate in filtering despite exclude setting
Name: idx_a
Description: minmax GRANULARITY 1
Parts: 2/2
Granules: 6/50
Name: id,x_b
Description: set GRANULARITY 1
Parts: 1/2
Granules: 3/6
Ranges: 1

Count query log entries containing index updates on INSERT
10
