-- tuple element alias
Row 1:
──────
tupleElement⋯ Int)'), 1): 1
tupleElement⋯ring)'), 1): s
Row 1:
──────
tupleElement⋯nt)'), 'a'): 1
tupleElement⋯ng)'), 'a'): s
Row 1:
──────
tupleElement⋯nt)'), 'a'): 1
tupleElement⋯nt)'), 'a'): 1
-- tuple element alias + untuple() alias
Row 1:
──────
x.a: 1
y.a: s
Row 1:
──────
x.a: 1
y.a: s
Row 1:
──────
x.a: 1
x.a: 1
-- untuple() alias
Row 1:
──────
x.1: 1
y.1: s
Row 1:
──────
x.1: 1
y.1: s
Row 1:
──────
x.1: 1
x.1: 1
-- no aliases
Row 1:
──────
tupleElement⋯(Int)'), 1): 1
tupleElement⋯ring)'), 1): s
Row 1:
──────
tupleElement⋯nt)'), '1'): 1
tupleElement⋯ng)'), '1'): s
Row 1:
──────
tupleElement⋯nt)'), '1'): 1
tupleElement⋯nt)'), '1'): 1
-- tuple() loses the column names (would be good to fix, see #36773)
Row 1:
──────
t.1: 1
Row 1:
──────
t.1: 1
-- tuple() with enable_named_columns_in_function_tuple = 1 and enable_analyzer = 1 keeps the column names
Row 1:
──────
t.a: 1
-- thankfully JSONExtract() keeps them
Row 1:
──────
x.key: value
Row 1:
──────
x.key: value
