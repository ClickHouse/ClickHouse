-- { echoOn }
SELECT round(avg(log(2) * number), 6) AS k FROM numbers(10000000) GROUP BY (number % 2) * (number % 3), number % 3, number % 2 HAVING avg(log(2) * number) > 3465735.3 ORDER BY k;
3465735.9028
3465735.9028
3465736.595947
SELECT round(avg(log(2) * number), 6) AS k FROM numbers(10000000) GROUP BY (number % 2) * (number % 3), number % 3, number % 2 HAVING avg(log(2) * number) > 3465735.3 ORDER BY k SETTINGS allow_experimental_analyzer=1;
3465735.9028
3465735.9028
3465736.595947
SELECT round(avg(log(2) * number), 6) AS k FROM numbers(10000000) GROUP BY number % 5, ((number % 5) * (number % 5)) HAVING ((number % 5) * (number % 5)) < 5 ORDER BY k;
3465734.169932
3465734.863079
3465735.556226
SELECT round(avg(log(2) * number), 6) AS k FROM numbers(10000000) GROUP BY number % 5, ((number % 5) * (number % 5)) HAVING ((number % 5) * (number % 5)) < 5 ORDER BY k SETTINGS allow_experimental_analyzer=1;
3465734.169932
3465734.863079
3465735.556226
SELECT (number % 5) * (number % 5) AS k FROM numbers(10000000) GROUP BY number % 5, ((number % 5) * (number % 5)) HAVING ((number % 5) * (number % 5)) < 5 ORDER BY k;
0
1
4
SELECT (number % 5) * (number % 5) AS k FROM numbers(10000000) GROUP BY number % 5, ((number % 5) * (number % 5)) HAVING ((number % 5) * (number % 5)) < 5 ORDER BY k SETTINGS allow_experimental_analyzer=1;
0
1
4
SELECT avg(log(2) * number) AS k
FROM numbers(10000000)
GROUP BY
    number % 3,
    number % 2
HAVING avg(log(2) * number) > 3465735.3
ORDER BY k ASC
QUERY id: 0
  PROJECTION COLUMNS
    k Float64
  PROJECTION
    LIST id: 1, nodes: 1
      FUNCTION id: 2, function_name: multiply, function_type: ordinary, result_type: Float64
        ARGUMENTS
          LIST id: 3, nodes: 2
            CONSTANT id: 4, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
              EXPRESSION
                FUNCTION id: 5, function_name: log, function_type: ordinary, result_type: Float64
                  ARGUMENTS
                    LIST id: 6, nodes: 1
                      CONSTANT id: 7, constant_value: UInt64_2, constant_value_type: UInt8
            FUNCTION id: 8, function_name: avg, function_type: aggregate, result_type: Float64
              ARGUMENTS
                LIST id: 9, nodes: 1
                  COLUMN id: 10, column_name: number, result_type: UInt64, source_id: 11
  JOIN TREE
    TABLE_FUNCTION id: 11, table_function_name: numbers
      ARGUMENTS
        LIST id: 12, nodes: 1
          CONSTANT id: 13, constant_value: UInt64_10000000, constant_value_type: UInt32
  GROUP BY
    LIST id: 14, nodes: 2
      FUNCTION id: 15, function_name: modulo, function_type: ordinary, result_type: UInt8
        ARGUMENTS
          LIST id: 16, nodes: 2
            COLUMN id: 17, column_name: number, result_type: UInt64, source_id: 11
            CONSTANT id: 18, constant_value: UInt64_3, constant_value_type: UInt8
      FUNCTION id: 19, function_name: modulo, function_type: ordinary, result_type: UInt8
        ARGUMENTS
          LIST id: 20, nodes: 2
            COLUMN id: 17, column_name: number, result_type: UInt64, source_id: 11
            CONSTANT id: 21, constant_value: UInt64_2, constant_value_type: UInt8
  HAVING
    FUNCTION id: 22, function_name: greater, function_type: ordinary, result_type: UInt8
      ARGUMENTS
        LIST id: 23, nodes: 2
          FUNCTION id: 24, function_name: multiply, function_type: ordinary, result_type: Float64
            ARGUMENTS
              LIST id: 25, nodes: 2
                CONSTANT id: 26, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
                  EXPRESSION
                    FUNCTION id: 27, function_name: log, function_type: ordinary, result_type: Float64
                      ARGUMENTS
                        LIST id: 28, nodes: 1
                          CONSTANT id: 29, constant_value: UInt64_2, constant_value_type: UInt8
                FUNCTION id: 30, function_name: avg, function_type: aggregate, result_type: Float64
                  ARGUMENTS
                    LIST id: 31, nodes: 1
                      COLUMN id: 32, column_name: number, result_type: UInt64, source_id: 11
          CONSTANT id: 33, constant_value: Float64_3465735.3, constant_value_type: Float64
  ORDER BY
    LIST id: 34, nodes: 1
      SORT id: 35, sort_direction: ASCENDING, with_fill: 0
        EXPRESSION
          FUNCTION id: 36, function_name: multiply, function_type: ordinary, result_type: Float64
            ARGUMENTS
              LIST id: 37, nodes: 2
                CONSTANT id: 38, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
                  EXPRESSION
                    FUNCTION id: 5, function_name: log, function_type: ordinary, result_type: Float64
                      ARGUMENTS
                        LIST id: 6, nodes: 1
                          CONSTANT id: 7, constant_value: UInt64_2, constant_value_type: UInt8
                FUNCTION id: 39, function_name: avg, function_type: aggregate, result_type: Float64
                  ARGUMENTS
                    LIST id: 40, nodes: 1
                      COLUMN id: 41, column_name: number, result_type: UInt64, source_id: 11
SELECT avg(log(2) * number) AS k
FROM numbers(10000000)
WHERE ((number % 5) * (number % 5)) < 5
GROUP BY number % 5
ORDER BY k ASC
QUERY id: 0
  PROJECTION COLUMNS
    k Float64
  PROJECTION
    LIST id: 1, nodes: 1
      FUNCTION id: 2, function_name: multiply, function_type: ordinary, result_type: Float64
        ARGUMENTS
          LIST id: 3, nodes: 2
            CONSTANT id: 4, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
              EXPRESSION
                FUNCTION id: 5, function_name: log, function_type: ordinary, result_type: Float64
                  ARGUMENTS
                    LIST id: 6, nodes: 1
                      CONSTANT id: 7, constant_value: UInt64_2, constant_value_type: UInt8
            FUNCTION id: 8, function_name: avg, function_type: aggregate, result_type: Float64
              ARGUMENTS
                LIST id: 9, nodes: 1
                  COLUMN id: 10, column_name: number, result_type: UInt64, source_id: 11
  JOIN TREE
    TABLE_FUNCTION id: 11, table_function_name: numbers
      ARGUMENTS
        LIST id: 12, nodes: 1
          CONSTANT id: 13, constant_value: UInt64_10000000, constant_value_type: UInt32
  GROUP BY
    LIST id: 14, nodes: 1
      FUNCTION id: 15, function_name: modulo, function_type: ordinary, result_type: UInt8
        ARGUMENTS
          LIST id: 16, nodes: 2
            COLUMN id: 17, column_name: number, result_type: UInt64, source_id: 11
            CONSTANT id: 18, constant_value: UInt64_5, constant_value_type: UInt8
  HAVING
    FUNCTION id: 19, function_name: less, function_type: ordinary, result_type: UInt8
      ARGUMENTS
        LIST id: 20, nodes: 2
          FUNCTION id: 21, function_name: multiply, function_type: ordinary, result_type: UInt16
            ARGUMENTS
              LIST id: 22, nodes: 2
                FUNCTION id: 23, function_name: modulo, function_type: ordinary, result_type: UInt8
                  ARGUMENTS
                    LIST id: 24, nodes: 2
                      COLUMN id: 17, column_name: number, result_type: UInt64, source_id: 11
                      CONSTANT id: 25, constant_value: UInt64_5, constant_value_type: UInt8
                FUNCTION id: 26, function_name: modulo, function_type: ordinary, result_type: UInt8
                  ARGUMENTS
                    LIST id: 27, nodes: 2
                      COLUMN id: 17, column_name: number, result_type: UInt64, source_id: 11
                      CONSTANT id: 28, constant_value: UInt64_5, constant_value_type: UInt8
          CONSTANT id: 29, constant_value: UInt64_5, constant_value_type: UInt8
  ORDER BY
    LIST id: 30, nodes: 1
      SORT id: 31, sort_direction: ASCENDING, with_fill: 0
        EXPRESSION
          FUNCTION id: 32, function_name: multiply, function_type: ordinary, result_type: Float64
            ARGUMENTS
              LIST id: 33, nodes: 2
                CONSTANT id: 34, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
                  EXPRESSION
                    FUNCTION id: 5, function_name: log, function_type: ordinary, result_type: Float64
                      ARGUMENTS
                        LIST id: 6, nodes: 1
                          CONSTANT id: 7, constant_value: UInt64_2, constant_value_type: UInt8
                FUNCTION id: 35, function_name: avg, function_type: aggregate, result_type: Float64
                  ARGUMENTS
                    LIST id: 36, nodes: 1
                      COLUMN id: 37, column_name: number, result_type: UInt64, source_id: 11
SELECT (number % 5) * (number % 5) AS k
FROM numbers(10000000)
WHERE ((number % 5) * (number % 5)) < 5
GROUP BY number % 5
ORDER BY k ASC
QUERY id: 0
  PROJECTION COLUMNS
    k UInt16
  PROJECTION
    LIST id: 1, nodes: 1
      FUNCTION id: 2, function_name: multiply, function_type: ordinary, result_type: UInt16
        ARGUMENTS
          LIST id: 3, nodes: 2
            FUNCTION id: 4, function_name: modulo, function_type: ordinary, result_type: UInt8
              ARGUMENTS
                LIST id: 5, nodes: 2
                  COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
                  CONSTANT id: 8, constant_value: UInt64_5, constant_value_type: UInt8
            FUNCTION id: 9, function_name: modulo, function_type: ordinary, result_type: UInt8
              ARGUMENTS
                LIST id: 10, nodes: 2
                  COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
                  CONSTANT id: 11, constant_value: UInt64_5, constant_value_type: UInt8
  JOIN TREE
    TABLE_FUNCTION id: 7, table_function_name: numbers
      ARGUMENTS
        LIST id: 12, nodes: 1
          CONSTANT id: 13, constant_value: UInt64_10000000, constant_value_type: UInt32
  GROUP BY
    LIST id: 14, nodes: 1
      FUNCTION id: 15, function_name: modulo, function_type: ordinary, result_type: UInt8
        ARGUMENTS
          LIST id: 16, nodes: 2
            COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
            CONSTANT id: 17, constant_value: UInt64_5, constant_value_type: UInt8
  HAVING
    FUNCTION id: 18, function_name: less, function_type: ordinary, result_type: UInt8
      ARGUMENTS
        LIST id: 19, nodes: 2
          FUNCTION id: 20, function_name: multiply, function_type: ordinary, result_type: UInt16
            ARGUMENTS
              LIST id: 21, nodes: 2
                FUNCTION id: 22, function_name: modulo, function_type: ordinary, result_type: UInt8
                  ARGUMENTS
                    LIST id: 23, nodes: 2
                      COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
                      CONSTANT id: 24, constant_value: UInt64_5, constant_value_type: UInt8
                FUNCTION id: 25, function_name: modulo, function_type: ordinary, result_type: UInt8
                  ARGUMENTS
                    LIST id: 26, nodes: 2
                      COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
                      CONSTANT id: 27, constant_value: UInt64_5, constant_value_type: UInt8
          CONSTANT id: 28, constant_value: UInt64_5, constant_value_type: UInt8
  ORDER BY
    LIST id: 29, nodes: 1
      SORT id: 30, sort_direction: ASCENDING, with_fill: 0
        EXPRESSION
          FUNCTION id: 2, function_name: multiply, function_type: ordinary, result_type: UInt16
            ARGUMENTS
              LIST id: 3, nodes: 2
                FUNCTION id: 4, function_name: modulo, function_type: ordinary, result_type: UInt8
                  ARGUMENTS
                    LIST id: 5, nodes: 2
                      COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
                      CONSTANT id: 8, constant_value: UInt64_5, constant_value_type: UInt8
                FUNCTION id: 9, function_name: modulo, function_type: ordinary, result_type: UInt8
                  ARGUMENTS
                    LIST id: 10, nodes: 2
                      COLUMN id: 6, column_name: number, result_type: UInt64, source_id: 7
                      CONSTANT id: 11, constant_value: UInt64_5, constant_value_type: UInt8
3465735.9028
3465735.9028
3465736.595947
3465734.169932
3465734.863079
3465735.556226
0
1
4
SELECT avg(log(2) * number) AS k
FROM numbers(10000000)
GROUP BY
    (number % 2) * (number % 3),
    number % 3,
    number % 2
HAVING avg(log(2) * number) > 3465735.3
ORDER BY k ASC
QUERY id: 0
  PROJECTION COLUMNS
    k Float64
  PROJECTION
    LIST id: 1, nodes: 1
      FUNCTION id: 2, function_name: multiply, function_type: ordinary, result_type: Float64
        ARGUMENTS
          LIST id: 3, nodes: 2
            CONSTANT id: 4, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
              EXPRESSION
                FUNCTION id: 5, function_name: log, function_type: ordinary, result_type: Float64
                  ARGUMENTS
                    LIST id: 6, nodes: 1
                      CONSTANT id: 7, constant_value: UInt64_2, constant_value_type: UInt8
            FUNCTION id: 8, function_name: avg, function_type: aggregate, result_type: Float64
              ARGUMENTS
                LIST id: 9, nodes: 1
                  COLUMN id: 10, column_name: number, result_type: UInt64, source_id: 11
  JOIN TREE
    TABLE_FUNCTION id: 11, table_function_name: numbers
      ARGUMENTS
        LIST id: 12, nodes: 1
          CONSTANT id: 13, constant_value: UInt64_10000000, constant_value_type: UInt32
  GROUP BY
    LIST id: 14, nodes: 3
      FUNCTION id: 15, function_name: multiply, function_type: ordinary, result_type: UInt16
        ARGUMENTS
          LIST id: 16, nodes: 2
            FUNCTION id: 17, function_name: modulo, function_type: ordinary, result_type: UInt8
              ARGUMENTS
                LIST id: 18, nodes: 2
                  COLUMN id: 19, column_name: number, result_type: UInt64, source_id: 11
                  CONSTANT id: 20, constant_value: UInt64_2, constant_value_type: UInt8
            FUNCTION id: 21, function_name: modulo, function_type: ordinary, result_type: UInt8
              ARGUMENTS
                LIST id: 22, nodes: 2
                  COLUMN id: 19, column_name: number, result_type: UInt64, source_id: 11
                  CONSTANT id: 23, constant_value: UInt64_3, constant_value_type: UInt8
      FUNCTION id: 24, function_name: modulo, function_type: ordinary, result_type: UInt8
        ARGUMENTS
          LIST id: 25, nodes: 2
            COLUMN id: 19, column_name: number, result_type: UInt64, source_id: 11
            CONSTANT id: 26, constant_value: UInt64_3, constant_value_type: UInt8
      FUNCTION id: 27, function_name: modulo, function_type: ordinary, result_type: UInt8
        ARGUMENTS
          LIST id: 28, nodes: 2
            COLUMN id: 19, column_name: number, result_type: UInt64, source_id: 11
            CONSTANT id: 29, constant_value: UInt64_2, constant_value_type: UInt8
  HAVING
    FUNCTION id: 30, function_name: greater, function_type: ordinary, result_type: UInt8
      ARGUMENTS
        LIST id: 31, nodes: 2
          FUNCTION id: 32, function_name: multiply, function_type: ordinary, result_type: Float64
            ARGUMENTS
              LIST id: 33, nodes: 2
                CONSTANT id: 34, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
                  EXPRESSION
                    FUNCTION id: 35, function_name: log, function_type: ordinary, result_type: Float64
                      ARGUMENTS
                        LIST id: 36, nodes: 1
                          CONSTANT id: 37, constant_value: UInt64_2, constant_value_type: UInt8
                FUNCTION id: 38, function_name: avg, function_type: aggregate, result_type: Float64
                  ARGUMENTS
                    LIST id: 39, nodes: 1
                      COLUMN id: 40, column_name: number, result_type: UInt64, source_id: 11
          CONSTANT id: 41, constant_value: Float64_3465735.3, constant_value_type: Float64
  ORDER BY
    LIST id: 42, nodes: 1
      SORT id: 43, sort_direction: ASCENDING, with_fill: 0
        EXPRESSION
          FUNCTION id: 44, function_name: multiply, function_type: ordinary, result_type: Float64
            ARGUMENTS
              LIST id: 45, nodes: 2
                CONSTANT id: 46, constant_value: Float64_0.6931471805599453, constant_value_type: Float64
                  EXPRESSION
                    FUNCTION id: 5, function_name: log, function_type: ordinary, result_type: Float64
                      ARGUMENTS
                        LIST id: 6, nodes: 1
                          CONSTANT id: 7, constant_value: UInt64_2, constant_value_type: UInt8
                FUNCTION id: 47, function_name: avg, function_type: aggregate, result_type: Float64
                  ARGUMENTS
                    LIST id: 48, nodes: 1
                      COLUMN id: 49, column_name: number, result_type: UInt64, source_id: 11
SELECT avg(log(2) * number) AS k
FROM numbers(10000000)
WHERE ((number % 5) * (number % 5)) < 5
GROUP BY
    number % 5,
    (number % 5) * (number % 5)
ORDER BY k ASC
SELECT (number % 5) * (number % 5) AS k
FROM numbers(10000000)
WHERE ((number % 5) * (number % 5)) < 5
GROUP BY
    number % 5,
    (number % 5) * (number % 5)
ORDER BY k ASC
