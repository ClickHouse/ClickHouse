-- { echoOn }
SELECT * FROM explain_indexes;
Expression ((Project names + Projection))
  Aggregating
    Expression (Before GROUP BY)
      Expression ((WHERE + Change column names to column identifiers))
        ReadFromMergeTree (default.tab)
        Indexes:
          PrimaryKey
            Condition: true
            Parts: 1/1
            Granules: 3/3
          Skip
            Name: idx
            Description: text GRANULARITY 1
            Parts: 1/1
            Granules: 1/3
          Ranges: 1
--
--Establishing baseline, compare future tests to these:
--hasAnyTokens:
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAnyTokens(message, ['abc']);
[1,2,3,4,5,6]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAnyTokens(message, ['ab']);
[]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAnyTokens(message, ['foo']);
[1,3,5]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAnyTokens(message, ['bar']);
[4,6]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAnyTokens(message, ['abc', 'foo']);
[1,2,3,4,5,6]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAnyTokens(message, ['abc', 'bar']);
[1,2,3,4,5,6]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAnyTokens(message, ['foo', 'bar']);
[1,3,4,5,6]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAnyTokens(message, ['foo', 'ba']);
[1,3,5]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAnyTokens(message, ['fo', 'ba']);
[]
--
--hasAllTokens:
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAllTokens(message, ['abc']);
[1,2,3,4,5,6]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAllTokens(message, ['ab']);
[]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAllTokens(message, ['foo']);
[1,3,5]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAllTokens(message, ['bar']);
[4,6]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAllTokens(message, ['abc', 'foo']);
[1,3,5]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAllTokens(message, ['abc', 'bar']);
[4,6]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAllTokens(message, ['foo', 'bar']);
[]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAllTokens(message, ['abc', 'fo']);
[]
-- { echoOn }
SELECT * FROM explain_indexes;
Expression ((Project names + Projection))
  Aggregating
    Expression (Before GROUP BY)
      Expression ((WHERE + Change column names to column identifiers))
        ReadFromMergeTree (default.tab)
        Indexes:
          PrimaryKey
            Condition: true
            Parts: 2/2
            Granules: 4/4
          Skip
            Name: idx
            Description: text GRANULARITY 1
            Parts: 1/2
            Granules: 2/4
          Ranges: 1
--
--Should match baseline:
--hasAnyTokens:
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAnyTokens(message, ['abc']);
[1,2,3,4,5,6]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAnyTokens(message, ['ab']);
[]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAnyTokens(message, ['foo']);
[1,3,5]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAnyTokens(message, ['bar']);
[4,6]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAnyTokens(message, ['abc', 'foo']);
[1,2,3,4,5,6]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAnyTokens(message, ['abc', 'bar']);
[1,2,3,4,5,6]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAnyTokens(message, ['foo', 'bar']);
[1,3,4,5,6]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAnyTokens(message, ['foo', 'ba']);
[1,3,5]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAnyTokens(message, ['fo', 'ba']);
[]
--
--hasAllTokens:
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAllTokens(message, ['abc']);
[1,2,3,4,5,6]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAllTokens(message, ['ab']);
[]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAllTokens(message, ['foo']);
[1,3,5]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAllTokens(message, ['bar']);
[4,6]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAllTokens(message, ['abc', 'foo']);
[1,3,5]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAllTokens(message, ['abc', 'bar']);
[4,6]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAllTokens(message, ['foo', 'bar']);
[]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAllTokens(message, ['abc', 'fo']);
[]
-- { echoOn }
SELECT * FROM explain_indexes;
Expression ((Project names + Projection))
  Aggregating
    Expression (Before GROUP BY)
      Expression ((WHERE + Change column names to column identifiers))
        ReadFromMergeTree (default.tab)
        Indexes:
          PrimaryKey
            Condition: true
            Parts: 2/2
            Granules: 4/4
          Skip
            Name: idx
            Description: text GRANULARITY 1
            Parts: 1/2
            Granules: 2/4
          Ranges: 1
--
-- Test that splitByNonAlpha tokenizer is applied even to column part which is not materialized
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAnyTokens(message, ['bar']);
[2,4,6]
SELECT arraySort(groupArray(id)) FROM tab WHERE hasAllTokens(message, ['bar']);
[2,4,6]
