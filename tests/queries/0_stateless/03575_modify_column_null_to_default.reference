-- { echoOn }

SELECT * from nullable_test ORDER BY ALL;
1	1	1	A
\N	\N	\N	\N
SYSTEM STOP MERGES nullable_test;
ALTER TABLE nullable_test MODIFY COLUMN my_int_nullable UInt64 SETTINGS mutations_sync = 0, alter_sync = 0; -- { serverError BAD_ARGUMENTS }
ALTER TABLE nullable_test MODIFY COLUMN my_int_nullable UInt64 DEFAULT 42 SETTINGS mutations_sync = 0, alter_sync = 0;
SELECT * from nullable_test ORDER BY ALL;
1	1	1	A
42	\N	\N	\N
SYSTEM START MERGES nullable_test;
SELECT * from nullable_test ORDER BY ALL;
1	1	1	A
42	\N	\N	\N
OPTIMIZE TABLE nullable_test FINAL;
SELECT * from nullable_test ORDER BY ALL;
1	1	1	A
42	\N	\N	\N
ALTER TABLE nullable_test MODIFY COLUMN my_text_lc_nullable String DEFAULT 'empty';
SELECT * from nullable_test ORDER BY ALL;
1	1	1	A
42	\N	\N	empty
-- Previouly existing DEFAULT NULL does not allow to modify
ALTER TABLE nullable_test MODIFY COLUMN my_int_nullable_with_default UInt64 SETTINGS mutations_sync = 0, alter_sync = 0; -- { serverError CANNOT_CONVERT_TYPE }
SELECT * from nullable_test ORDER BY ALL;
1	1	1	A
42	\N	\N	empty
ALTER TABLE nullable_test MODIFY COLUMN my_int_nullable_with_default UInt64 DEFAULT 43 SETTINGS mutations_sync = 0, alter_sync = 0;
SELECT * from nullable_test ORDER BY ALL;
1	1	1	A
42	43	\N	empty
-- But when we have DEFAULT which is non NULL we can keep it
ALTER TABLE nullable_test MODIFY COLUMN my_int_nullable_with_default2 UInt64 SETTINGS mutations_sync = 0, alter_sync = 0;
SELECT * from nullable_test ORDER BY ALL;
1	1	1	A
42	43	11	empty
DROP TABLE IF EXISTS nullable_test;
