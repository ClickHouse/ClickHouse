equal (RES): SELECT 1 + 1
equal (AST): SELECT 1 + 1
equal (RES): SELECT 3 + 7 * 5 + 32 / 2 - 5 * 2
equal (AST): SELECT 3 + 7 * 5 + 32 / 2 - 5 * 2
equal (RES): SELECT 100 MOD 5 DIV 20 MOD 5
equal (AST): SELECT 100 MOD 5 DIV 20 MOD 5
equal (RES): SELECT 1 + 2 * 3 - 3 / 2 < 80 / 8 + 2 * 5
equal (AST): SELECT 1 + 2 * 3 - 3 / 2 < 80 / 8 + 2 * 5
equal (RES): SELECT 20 MOD 10 > 200 DIV 6
equal (AST): SELECT 20 MOD 10 > 200 DIV 6
equal (RES): SELECT 5 != 80 / 8 + 2 * 5
equal (AST): SELECT 5 != 80 / 8 + 2 * 5
equal (AST): SELECT a.5
equal (AST): SELECT a.b.5
equal (AST): SELECT a.b.n.v
equal (AST): SELECT 10 * a.b.5 / 3
equal (RES): SELECT -1::Int64
equal (AST): SELECT -1::Int64
equal (RES): SELECT [1,2,3]::Array(Int64)
equal (AST): SELECT [1,2,3]::Array(Int64)
equal (RES): SELECT [1,2,cos(1)]
equal (AST): SELECT [1,2,cos(1)]
equal (AST): SELECT [a,b,c]
equal (AST): SELECT [a,b,c]::Array(UInt8)
equal (RES): SELECT number AS a1, number AS b2, number FROM numbers(10)
equal (AST): SELECT number AS a1, number AS b2, number FROM numbers(10)
equal (AST): SELECT *[n]
equal (RES): SELECT 3 + 7 * (5 + 32) / 2 - 5 * (2 - 1)
equal (AST): SELECT 3 + 7 * (5 + 32) / 2 - 5 * (2 - 1)
equal (AST): SELECT (a, b, c) * ((a, b, c) + (a, b, c))
equal (AST): SELECT 1 + 2 * 3 < a / b mod 5 OR [a, b, c] + 1 != [c, d, e] AND n as res
equal (AST): SELECT 1 + 2 * 3 < a / b mod 5 AND [a, b, c] + 1 != [c, d, e] OR n as res
equal (AST): SELECT 'needle' LIKE 'haystack' AND NOT needle NOT ILIKE haystack
equal (AST): SELECT 'needle' LIKE 'haystack' AND (NOT needle) NOT ILIKE haystack
equal (AST): SELECT [1, 2, 3, cast(['a', 'b', c] as Array(String)), 4]
equal (AST): SELECT [1, 2, 3, cast(['a', 'b', c], Array(String)), 4]
equal (AST): SELECT [1, 2, 3, cast(['a', 'b', c] as Array(String)), 4]
equal (AST): SELECT [1, 2, 3, cast(['a', 'b', c], Array(String)), 4]
equal (RES): SELECT EXTRACT(DAY FROM toDate('2017-06-15'))
equal (AST): SELECT EXTRACT(DAY FROM toDate('2017-06-15'))
equal (RES): SELECT substring(toFixedString('hello12345', 16) from 1 for 8)
equal (AST): SELECT substring(toFixedString('hello12345', 16) from 1 for 8)
equal (RES): SELECT position('Hello, world!' IN '!')
equal (AST): SELECT position('Hello, world!' IN '!')
equal (RES): SELECT trim(TRAILING 'x' FROM 'xxfooxx')
equal (AST): SELECT trim(TRAILING 'x' FROM 'xxfooxx')
