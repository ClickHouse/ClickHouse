-- { echoOn }
Select sum(number + 1) from numbers(10);
55
Select sum(1 + number) from numbers(10);
55
Select sum(number - 1) from numbers(10);
35
Select sum(1 - number) from numbers(10);
-35
EXPLAIN SYNTAX (Select sum(number + 1) from numbers(10));
SELECT sum(number) + (1 * count(number))
FROM numbers(10)
EXPLAIN SYNTAX (Select sum(1 + number) from numbers(10));
SELECT (1 * count(number)) + sum(number)
FROM numbers(10)
EXPLAIN SYNTAX (Select sum(number - 1) from numbers(10));
SELECT sum(number) - (1 * count(number))
FROM numbers(10)
EXPLAIN SYNTAX (Select sum(1 - number) from numbers(10));
SELECT (1 * count(number)) - sum(number)
FROM numbers(10)
WITH 1::Nullable(UInt64) as my_literal Select sum(number + my_literal) from numbers(0);
\N
WITH 1::Nullable(UInt64) as my_literal Select sum(number) + my_literal * count() from numbers(0);
0
EXPLAIN SYNTAX (WITH 1::Nullable(UInt64) as my_literal Select sum(number + my_literal) from numbers(0));
WITH CAST(\'1\', \'Nullable(UInt64)\') AS my_literal
SELECT sum(number + my_literal)
FROM numbers(0)
EXPLAIN SYNTAX (WITH 1::Nullable(UInt64) as my_literal Select sum(number) + my_literal * count() from numbers(0));
WITH CAST(\'1\', \'Nullable(UInt64)\') AS my_literal
SELECT sum(number) + (my_literal * count())
FROM numbers(0)
-- { echoOn }
SELECT sum(uint64 + 1 AS i) from test_table where i > 0;
20
SELECT sum(uint64 + 1) AS j from test_table having j > 0;
20
SELECT sum(uint64 + 1 AS i) j from test_table where i > 0 having j > 0;
20
SELECT sum((uint64 AS m) + (1 AS n)) j from test_table where m > 0 and n > 0 having j > 0;
20
SELECT sum(((uint64 AS m) + (1 AS n)) AS i) j from test_table where m > 0 and n > 0 and i > 0 having j > 0;
20
EXPLAIN SYNTAX (SELECT sum(uint64 + 1 AS i) from test_table where i > 0);
SELECT sum(uint64) + (1 * count(uint64))
FROM test_table
WHERE ((uint64 + 1) AS i) > 0
EXPLAIN SYNTAX (SELECT sum(uint64 + 1) AS j from test_table having j > 0);
SELECT sum(uint64) + (1 * count(uint64))
FROM test_table
HAVING (sum(uint64) + (1 * count(uint64))) > 0
EXPLAIN SYNTAX (SELECT sum(uint64 + 1 AS i) j from test_table where i > 0 having j > 0);
SELECT sum(uint64) + (1 * count(uint64))
FROM test_table
WHERE ((uint64 + 1) AS i) > 0
HAVING (sum(uint64) + (1 * count(uint64))) > 0
EXPLAIN SYNTAX (SELECT sum((uint64 AS m) + (1 AS n)) j from test_table where m > 0 and n > 0 having j > 0);
SELECT sum(uint64) + ((1 AS n) * count(uint64))
FROM test_table
WHERE ((uint64 AS m) > 0) AND (n > 0)
HAVING (sum(uint64) + (n * count(uint64))) > 0
EXPLAIN SYNTAX (SELECT sum(((uint64 AS m) + (1 AS n)) AS i) j from test_table where m > 0 and n > 0 and i > 0 having j > 0);
SELECT sum(uint64) + ((1 AS n) * count(uint64))
FROM test_table
WHERE ((uint64 AS m) > 0) AND (n > 0) AND (((m + n) AS i) > 0)
HAVING (sum(uint64) + (n * count(uint64))) > 0
SELECT sum(1 + uint64 AS i) from test_table where i > 0;
20
SELECT sum(1 + uint64) AS j from test_table having j > 0;
20
SELECT sum(1 + uint64 AS i) j from test_table where i > 0 having j > 0;
20
SELECT sum((1 AS m) + (uint64 AS n)) j from test_table where m > 0 and n > 0 having j > 0;
20
SELECT sum(((1 AS m) + (uint64 AS n)) AS i) j from test_table where m > 0 and n > 0 and i > 0 having j > 0;
20
EXPLAIN SYNTAX (SELECT sum(1 + uint64 AS i) from test_table where i > 0);
SELECT (1 * count(uint64)) + sum(uint64)
FROM test_table
WHERE ((1 + uint64) AS i) > 0
EXPLAIN SYNTAX (SELECT sum(1 + uint64) AS j from test_table having j > 0);
SELECT (1 * count(uint64)) + sum(uint64)
FROM test_table
HAVING ((1 * count(uint64)) + sum(uint64)) > 0
EXPLAIN SYNTAX (SELECT sum(1 + uint64 AS i) j from test_table where i > 0 having j > 0);
SELECT (1 * count(uint64)) + sum(uint64)
FROM test_table
WHERE ((1 + uint64) AS i) > 0
HAVING ((1 * count(uint64)) + sum(uint64)) > 0
EXPLAIN SYNTAX (SELECT sum((1 AS m) + (uint64 AS n)) j from test_table where m > 0 and n > 0 having j > 0);
SELECT ((1 AS m) * count(uint64)) + sum(uint64)
FROM test_table
WHERE (m > 0) AND ((uint64 AS n) > 0)
HAVING ((m * count(uint64)) + sum(uint64)) > 0
EXPLAIN SYNTAX (SELECT sum(((1 AS m) + (uint64 AS n)) AS i) j from test_table where m > 0 and n > 0 and i > 0 having j > 0);
SELECT ((1 AS m) * count(uint64)) + sum(uint64)
FROM test_table
WHERE (m > 0) AND ((uint64 AS n) > 0) AND (((m + n) AS i) > 0)
HAVING ((m * count(uint64)) + sum(uint64)) > 0
SELECT sum(uint64 - 1 AS i) from test_table where i > 0;
10
SELECT sum(uint64 - 1) AS j from test_table having j > 0;
10
SELECT sum(uint64 - 1 AS i) j from test_table where i > 0 having j > 0;
10
SELECT sum((uint64 AS m) - (1 AS n)) j from test_table where m > 0 and n > 0 having j > 0;
10
SELECT sum(((uint64 AS m) - (1 AS n)) AS i) j from test_table where m > 0 and n > 0 and i > 0 having j > 0;
10
EXPLAIN SYNTAX (SELECT sum(uint64 - 1 AS i) from test_table where i > 0);
SELECT sum(uint64) - (1 * count(uint64))
FROM test_table
WHERE ((uint64 - 1) AS i) > 0
EXPLAIN SYNTAX (SELECT sum(uint64 - 1) AS j from test_table having j > 0);
SELECT sum(uint64) - (1 * count(uint64))
FROM test_table
HAVING (sum(uint64) - (1 * count(uint64))) > 0
EXPLAIN SYNTAX (SELECT sum(uint64 - 1 AS i) j from test_table where i > 0 having j > 0);
SELECT sum(uint64) - (1 * count(uint64))
FROM test_table
WHERE ((uint64 - 1) AS i) > 0
HAVING (sum(uint64) - (1 * count(uint64))) > 0
EXPLAIN SYNTAX (SELECT sum((uint64 AS m) - (1 AS n)) j from test_table where m > 0 and n > 0 having j > 0);
SELECT sum(uint64) - ((1 AS n) * count(uint64))
FROM test_table
WHERE ((uint64 AS m) > 0) AND (n > 0)
HAVING (sum(uint64) - (n * count(uint64))) > 0
EXPLAIN SYNTAX (SELECT sum(((uint64 AS m) - (1 AS n)) AS i) j from test_table where m > 0 and n > 0 and i > 0 having j > 0);
SELECT sum(uint64) - ((1 AS n) * count(uint64))
FROM test_table
WHERE ((uint64 AS m) > 0) AND (n > 0) AND (((m - n) AS i) > 0)
HAVING (sum(uint64) - (n * count(uint64))) > 0
SELECT sum(1 - uint64 AS i) from test_table;
-10
SELECT sum(1 - uint64) AS j from test_table;
-10
SELECT sum(1 - uint64 AS i) j from test_table;
-10
SELECT sum((1 AS m) - (uint64 AS n)) j from test_table;
-10
SELECT sum(((1 AS m) - (uint64 AS n)) AS i) j from test_table;
-10
EXPLAIN SYNTAX (SELECT sum(1 - uint64 AS i) from test_table where i > 0);
SELECT (1 * count(uint64)) - sum(uint64)
FROM test_table
WHERE ((1 - uint64) AS i) > 0
EXPLAIN SYNTAX (SELECT sum(1 - uint64) AS j from test_table having j < 0);
SELECT (1 * count(uint64)) - sum(uint64)
FROM test_table
HAVING ((1 * count(uint64)) - sum(uint64)) < 0
EXPLAIN SYNTAX (SELECT sum(1 - uint64 AS i) j from test_table where i > 0 having j < 0);
SELECT (1 * count(uint64)) - sum(uint64)
FROM test_table
WHERE ((1 - uint64) AS i) > 0
HAVING ((1 * count(uint64)) - sum(uint64)) < 0
EXPLAIN SYNTAX (SELECT sum((1 AS m) - (uint64 AS n)) j from test_table where m > 0 and n > 0 having j < 0);
SELECT ((1 AS m) * count(uint64)) - sum(uint64)
FROM test_table
WHERE (m > 0) AND ((uint64 AS n) > 0)
HAVING ((m * count(uint64)) - sum(uint64)) < 0
EXPLAIN SYNTAX (SELECT sum(((1 AS m) - (uint64 AS n)) AS i) j from test_table where m > 0 and n > 0 and i < 0 having j < 0);
SELECT ((1 AS m) * count(uint64)) - sum(uint64)
FROM test_table
WHERE (m > 0) AND ((uint64 AS n) > 0) AND (((m - n) AS i) < 0)
HAVING ((m * count(uint64)) - sum(uint64)) < 0
SELECT sum(uint64 + 2.11) From test_table;
25.549999999999997
SELECT sum(2.11 + uint64) From test_table;
25.549999999999997
SELECT sum(uint64 - 2.11) From test_table;
4.450000000000001
SELECT sum(2.11 - uint64) From test_table;
-4.450000000000001
SELECT sum(uint64) + 2.11 * count(uint64) From test_table;
25.549999999999997
SELECT 2.11 * count(uint64) + sum(uint64) From test_table;
25.549999999999997
SELECT sum(uint64) - 2.11 * count(uint64) From test_table;
4.450000000000001
SELECT 2.11 * count(uint64) - sum(uint64) From test_table;
-4.450000000000001
EXPLAIN SYNTAX (SELECT sum(uint64 + 2.11) From test_table);
SELECT sum(uint64) + (2.11 * count(uint64))
FROM test_table
EXPLAIN SYNTAX (SELECT sum(2.11 + uint64) From test_table);
SELECT (2.11 * count(uint64)) + sum(uint64)
FROM test_table
EXPLAIN SYNTAX (SELECT sum(uint64 - 2.11) From test_table);
SELECT sum(uint64) - (2.11 * count(uint64))
FROM test_table
EXPLAIN SYNTAX (SELECT sum(2.11 - uint64) From test_table);
SELECT (2.11 * count(uint64)) - sum(uint64)
FROM test_table
EXPLAIN SYNTAX (SELECT sum(uint64) + 2.11 * count(uint64) From test_table);
SELECT sum(uint64) + (2.11 * count(uint64))
FROM test_table
EXPLAIN SYNTAX (SELECT 2.11 * count(uint64) + sum(uint64) From test_table);
SELECT (2.11 * count(uint64)) + sum(uint64)
FROM test_table
EXPLAIN SYNTAX (SELECT sum(uint64) - 2.11 * count(uint64) From test_table);
SELECT sum(uint64) - (2.11 * count(uint64))
FROM test_table
EXPLAIN SYNTAX (SELECT 2.11 * count(uint64) - sum(uint64) From test_table);
SELECT (2.11 * count(uint64)) - sum(uint64)
FROM test_table
SELECT sum(uint64 + 2) From test_table;
25
SELECT sum(2 + uint64) From test_table;
25
SELECT sum(uint64 - 2) From test_table;
5
SELECT sum(2 - uint64) From test_table;
-5
SELECT sum(uint64) + 2 * count(uint64) From test_table;
25
SELECT 2 * count(uint64) + sum(uint64) From test_table;
25
SELECT sum(uint64) - 2 * count(uint64) From test_table;
5
SELECT 2 * count(uint64) - sum(uint64) From test_table;
-5
EXPLAIN SYNTAX (SELECT sum(uint64 + 2) From test_table);
SELECT sum(uint64) + (2 * count(uint64))
FROM test_table
EXPLAIN SYNTAX (SELECT sum(2 + uint64) From test_table);
SELECT (2 * count(uint64)) + sum(uint64)
FROM test_table
EXPLAIN SYNTAX (SELECT sum(uint64 - 2) From test_table);
SELECT sum(uint64) - (2 * count(uint64))
FROM test_table
EXPLAIN SYNTAX (SELECT sum(2 - uint64) From test_table);
SELECT (2 * count(uint64)) - sum(uint64)
FROM test_table
EXPLAIN SYNTAX (SELECT sum(uint64) + 2 * count(uint64) From test_table);
SELECT sum(uint64) + (2 * count(uint64))
FROM test_table
EXPLAIN SYNTAX (SELECT 2 * count(uint64) + sum(uint64) From test_table);
SELECT (2 * count(uint64)) + sum(uint64)
FROM test_table
EXPLAIN SYNTAX (SELECT sum(uint64) - 2 * count(uint64) From test_table);
SELECT sum(uint64) - (2 * count(uint64))
FROM test_table
EXPLAIN SYNTAX (SELECT 2 * count(uint64) - sum(uint64) From test_table);
SELECT (2 * count(uint64)) - sum(uint64)
FROM test_table
SELECT sum(float64 + 2) From test_table;
26.5
SELECT sum(2 + float64) From test_table;
26.5
SELECT sum(float64 - 2) From test_table;
6.5
SELECT sum(2 - float64) From test_table;
-6.5
SELECT sum(float64) + 2 * count(float64) From test_table;
26.5
SELECT 2 * count(float64) + sum(float64) From test_table;
26.5
SELECT sum(float64) - 2 * count(float64) From test_table;
6.5
SELECT 2 * count(float64) - sum(float64) From test_table;
-6.5
EXPLAIN SYNTAX (SELECT sum(float64 + 2) From test_table);
SELECT sum(float64) + (2 * count(float64))
FROM test_table
EXPLAIN SYNTAX (SELECT sum(2 + float64) From test_table);
SELECT (2 * count(float64)) + sum(float64)
FROM test_table
EXPLAIN SYNTAX (SELECT sum(float64 - 2) From test_table);
SELECT sum(float64) - (2 * count(float64))
FROM test_table
EXPLAIN SYNTAX (SELECT sum(2 - float64) From test_table);
SELECT (2 * count(float64)) - sum(float64)
FROM test_table
EXPLAIN SYNTAX (SELECT sum(float64) + 2 * count(float64) From test_table);
SELECT sum(float64) + (2 * count(float64))
FROM test_table
EXPLAIN SYNTAX (SELECT 2 * count(float64) + sum(float64) From test_table);
SELECT (2 * count(float64)) + sum(float64)
FROM test_table
EXPLAIN SYNTAX (SELECT sum(float64) - 2 * count(float64) From test_table);
SELECT sum(float64) - (2 * count(float64))
FROM test_table
EXPLAIN SYNTAX (SELECT 2 * count(float64) - sum(float64) From test_table);
SELECT (2 * count(float64)) - sum(float64)
FROM test_table
SELECT sum(decimal32 + 2) From test_table;
26.65
SELECT sum(2 + decimal32) From test_table;
26.65
SELECT sum(decimal32 - 2) From test_table;
6.65
SELECT sum(2 - decimal32) From test_table;
-6.65
SELECT sum(decimal32) + 2 * count(decimal32) From test_table;
26.65
SELECT 2 * count(decimal32) + sum(decimal32) From test_table;
26.65
SELECT sum(decimal32) - 2 * count(decimal32) From test_table;
6.65
SELECT 2 * count(decimal32) - sum(decimal32) From test_table;
-6.65
EXPLAIN SYNTAX (SELECT sum(decimal32 + 2) From test_table);
SELECT sum(decimal32) + (2 * count(decimal32))
FROM test_table
EXPLAIN SYNTAX (SELECT sum(2 + decimal32) From test_table);
SELECT (2 * count(decimal32)) + sum(decimal32)
FROM test_table
EXPLAIN SYNTAX (SELECT sum(decimal32 - 2) From test_table);
SELECT sum(decimal32) - (2 * count(decimal32))
FROM test_table
EXPLAIN SYNTAX (SELECT sum(2 - decimal32) From test_table);
SELECT (2 * count(decimal32)) - sum(decimal32)
FROM test_table
EXPLAIN SYNTAX (SELECT sum(decimal32) + 2 * count(decimal32) From test_table);
SELECT sum(decimal32) + (2 * count(decimal32))
FROM test_table
EXPLAIN SYNTAX (SELECT 2 * count(decimal32) + sum(decimal32) From test_table);
SELECT (2 * count(decimal32)) + sum(decimal32)
FROM test_table
EXPLAIN SYNTAX (SELECT sum(decimal32) - 2 * count(decimal32) From test_table);
SELECT sum(decimal32) - (2 * count(decimal32))
FROM test_table
EXPLAIN SYNTAX (SELECT 2 * count(decimal32) - sum(decimal32) From test_table);
SELECT (2 * count(decimal32)) - sum(decimal32)
FROM test_table
SELECT sum(uint64 + 2) + sum(uint64 + 3) From test_table;
55
SELECT sum(uint64 + 2) - sum(uint64 + 3) From test_table;
-5
SELECT sum(uint64 - 2) + sum(uint64 - 3) From test_table;
5
SELECT sum(uint64 - 2) - sum(uint64 - 3) From test_table;
5
SELECT sum(2 - uint64) - sum(3 - uint64) From test_table;
-5
SELECT (sum(uint64) + 2 * count(uint64)) + (sum(uint64) + 3 * count(uint64)) From test_table;
55
SELECT (sum(uint64) + 2 * count(uint64)) - (sum(uint64) + 3 * count(uint64)) From test_table;
-5
SELECT (sum(uint64) - 2 * count(uint64)) + (sum(uint64) - 3 * count(uint64)) From test_table;
5
SELECT (sum(uint64) - 2 * count(uint64)) - (sum(uint64) - 3 * count(uint64)) From test_table;
5
SELECT (2 * count(uint64) - sum(uint64)) + (3 * count(uint64) - sum(uint64)) From test_table;
-5
EXPLAIN SYNTAX (SELECT sum(uint64 + 2) + sum(uint64 + 3) From test_table);
SELECT (sum(uint64) + (2 * count(uint64))) + (sum(uint64) + (3 * count(uint64)))
FROM test_table
EXPLAIN SYNTAX (SELECT sum(uint64 + 2) - sum(uint64 + 3) From test_table);
SELECT (sum(uint64) + (2 * count(uint64))) - (sum(uint64) + (3 * count(uint64)))
FROM test_table
EXPLAIN SYNTAX (SELECT sum(uint64 - 2) + sum(uint64 - 3) From test_table);
SELECT (sum(uint64) - (2 * count(uint64))) + (sum(uint64) - (3 * count(uint64)))
FROM test_table
EXPLAIN SYNTAX (SELECT sum(uint64 - 2) - sum(uint64 - 3) From test_table);
SELECT (sum(uint64) - (2 * count(uint64))) - (sum(uint64) - (3 * count(uint64)))
FROM test_table
EXPLAIN SYNTAX (SELECT sum(2 - uint64) - sum(3 - uint64) From test_table);
SELECT ((2 * count(uint64)) - sum(uint64)) - ((3 * count(uint64)) - sum(uint64))
FROM test_table
EXPLAIN SYNTAX (SELECT (sum(uint64) + 2 * count(uint64)) + (sum(uint64) + 3 * count(uint64)) From test_table);
SELECT (sum(uint64) + (2 * count(uint64))) + (sum(uint64) + (3 * count(uint64)))
FROM test_table
EXPLAIN SYNTAX (SELECT (sum(uint64) + 2 * count(uint64)) - (sum(uint64) + 3 * count(uint64)) From test_table);
SELECT (sum(uint64) + (2 * count(uint64))) - (sum(uint64) + (3 * count(uint64)))
FROM test_table
EXPLAIN SYNTAX (SELECT (sum(uint64) - 2 * count(uint64)) + (sum(uint64) - 3 * count(uint64)) From test_table);
SELECT (sum(uint64) - (2 * count(uint64))) + (sum(uint64) - (3 * count(uint64)))
FROM test_table
EXPLAIN SYNTAX (SELECT (sum(uint64) - 2 * count(uint64)) - (sum(uint64) - 3 * count(uint64)) From test_table);
SELECT (sum(uint64) - (2 * count(uint64))) - (sum(uint64) - (3 * count(uint64)))
FROM test_table
EXPLAIN SYNTAX (SELECT (2 * count(uint64) - sum(uint64)) + (3 * count(uint64) - sum(uint64)) From test_table);
SELECT ((2 * count(uint64)) - sum(uint64)) + ((3 * count(uint64)) - sum(uint64))
FROM test_table
SELECT sum(float64 + 2) + sum(float64 + 3) From test_table;
58
SELECT sum(float64 + 2) - sum(float64 + 3) From test_table;
-5
SELECT sum(float64 - 2) + sum(float64 - 3) From test_table;
8
SELECT sum(float64 - 2) - sum(float64 - 3) From test_table;
5
SELECT sum(2 - float64) - sum(3 - float64) From test_table;
-5
SELECT (sum(float64) + 2 * count(float64)) + (sum(float64) + 3 * count(float64)) From test_table;
58
SELECT (sum(float64) + 2 * count(float64)) - (sum(float64) + 3 * count(float64)) From test_table;
-5
SELECT (sum(float64) - 2 * count(float64)) + (sum(float64) - 3 * count(float64)) From test_table;
8
SELECT (sum(float64) - 2 * count(float64)) - (sum(float64) - 3 * count(float64)) From test_table;
5
SELECT (2 * count(float64) - sum(float64)) + (3 * count(float64) - sum(float64)) From test_table;
-8
EXPLAIN SYNTAX (SELECT sum(float64 + 2) + sum(float64 + 3) From test_table);
SELECT (sum(float64) + (2 * count(float64))) + (sum(float64) + (3 * count(float64)))
FROM test_table
EXPLAIN SYNTAX (SELECT sum(float64 + 2) - sum(float64 + 3) From test_table);
SELECT (sum(float64) + (2 * count(float64))) - (sum(float64) + (3 * count(float64)))
FROM test_table
EXPLAIN SYNTAX (SELECT sum(float64 - 2) + sum(float64 - 3) From test_table);
SELECT (sum(float64) - (2 * count(float64))) + (sum(float64) - (3 * count(float64)))
FROM test_table
EXPLAIN SYNTAX (SELECT sum(float64 - 2) - sum(float64 - 3) From test_table);
SELECT (sum(float64) - (2 * count(float64))) - (sum(float64) - (3 * count(float64)))
FROM test_table
EXPLAIN SYNTAX (SELECT sum(2 - float64) - sum(3 - float64) From test_table);
SELECT ((2 * count(float64)) - sum(float64)) - ((3 * count(float64)) - sum(float64))
FROM test_table
EXPLAIN SYNTAX (SELECT (sum(float64) + 2 * count(float64)) + (sum(float64) + 3 * count(float64)) From test_table);
SELECT (sum(float64) + (2 * count(float64))) + (sum(float64) + (3 * count(float64)))
FROM test_table
EXPLAIN SYNTAX (SELECT (sum(float64) + 2 * count(float64)) - (sum(float64) + 3 * count(float64)) From test_table);
SELECT (sum(float64) + (2 * count(float64))) - (sum(float64) + (3 * count(float64)))
FROM test_table
EXPLAIN SYNTAX (SELECT (sum(float64) - 2 * count(float64)) + (sum(float64) - 3 * count(float64)) From test_table);
SELECT (sum(float64) - (2 * count(float64))) + (sum(float64) - (3 * count(float64)))
FROM test_table
EXPLAIN SYNTAX (SELECT (sum(float64) - 2 * count(float64)) - (sum(float64) - 3 * count(float64)) From test_table);
SELECT (sum(float64) - (2 * count(float64))) - (sum(float64) - (3 * count(float64)))
FROM test_table
EXPLAIN SYNTAX (SELECT (2 * count(float64) - sum(float64)) + (3 * count(float64) - sum(float64)) From test_table);
SELECT ((2 * count(float64)) - sum(float64)) + ((3 * count(float64)) - sum(float64))
FROM test_table
SELECT sum(decimal32 + 2) + sum(decimal32 + 3) From test_table;
58.3
SELECT sum(decimal32 + 2) - sum(decimal32 + 3) From test_table;
-5
SELECT sum(decimal32 - 2) + sum(decimal32 - 3) From test_table;
8.3
SELECT sum(decimal32 - 2) - sum(decimal32 - 3) From test_table;
5
SELECT sum(2 - decimal32) - sum(3 - decimal32) From test_table;
-5
SELECT (sum(decimal32) + 2 * count(decimal32)) + (sum(decimal32) + 3 * count(decimal32)) From test_table;
58.3
SELECT (sum(decimal32) + 2 * count(decimal32)) - (sum(decimal32) + 3 * count(decimal32)) From test_table;
-5
SELECT (sum(decimal32) - 2 * count(decimal32)) + (sum(decimal32) - 3 * count(decimal32)) From test_table;
8.3
SELECT (sum(decimal32) - 2 * count(decimal32)) - (sum(decimal32) - 3 * count(decimal32)) From test_table;
5
SELECT (2 * count(decimal32) - sum(decimal32)) + (3 * count(decimal32) - sum(decimal32)) From test_table;
-8.3
EXPLAIN SYNTAX (SELECT sum(decimal32 + 2) + sum(decimal32 + 3) From test_table);
SELECT (sum(decimal32) + (2 * count(decimal32))) + (sum(decimal32) + (3 * count(decimal32)))
FROM test_table
EXPLAIN SYNTAX (SELECT sum(decimal32 + 2) - sum(decimal32 + 3) From test_table);
SELECT (sum(decimal32) + (2 * count(decimal32))) - (sum(decimal32) + (3 * count(decimal32)))
FROM test_table
EXPLAIN SYNTAX (SELECT sum(decimal32 - 2) + sum(decimal32 - 3) From test_table);
SELECT (sum(decimal32) - (2 * count(decimal32))) + (sum(decimal32) - (3 * count(decimal32)))
FROM test_table
EXPLAIN SYNTAX (SELECT sum(decimal32 - 2) - sum(decimal32 - 3) From test_table);
SELECT (sum(decimal32) - (2 * count(decimal32))) - (sum(decimal32) - (3 * count(decimal32)))
FROM test_table
EXPLAIN SYNTAX (SELECT sum(2 - decimal32) - sum(3 - decimal32) From test_table);
SELECT ((2 * count(decimal32)) - sum(decimal32)) - ((3 * count(decimal32)) - sum(decimal32))
FROM test_table
EXPLAIN SYNTAX (SELECT (sum(decimal32) + 2 * count(decimal32)) + (sum(decimal32) + 3 * count(decimal32)) From test_table);
SELECT (sum(decimal32) + (2 * count(decimal32))) + (sum(decimal32) + (3 * count(decimal32)))
FROM test_table
EXPLAIN SYNTAX (SELECT (sum(decimal32) + 2 * count(decimal32)) - (sum(decimal32) + 3 * count(decimal32)) From test_table);
SELECT (sum(decimal32) + (2 * count(decimal32))) - (sum(decimal32) + (3 * count(decimal32)))
FROM test_table
EXPLAIN SYNTAX (SELECT (sum(decimal32) - 2 * count(decimal32)) + (sum(decimal32) - 3 * count(decimal32)) From test_table);
SELECT (sum(decimal32) - (2 * count(decimal32))) + (sum(decimal32) - (3 * count(decimal32)))
FROM test_table
EXPLAIN SYNTAX (SELECT (sum(decimal32) - 2 * count(decimal32)) - (sum(decimal32) - 3 * count(decimal32)) From test_table);
SELECT (sum(decimal32) - (2 * count(decimal32))) - (sum(decimal32) - (3 * count(decimal32)))
FROM test_table
EXPLAIN SYNTAX (SELECT (2 * count(decimal32) - sum(decimal32)) + (3 * count(decimal32) - sum(decimal32)) From test_table);
SELECT ((2 * count(decimal32)) - sum(decimal32)) + ((3 * count(decimal32)) - sum(decimal32))
FROM test_table
