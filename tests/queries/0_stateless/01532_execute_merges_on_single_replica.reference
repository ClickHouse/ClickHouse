############################
### emulate normal feature operation - merges are distributed between replicas
############################
### emulate execute_merges_on_single_replica_time_threshold timeout
############################
### timeout not exceeded, r1 waits for r2
Row 1:
──────
table:           execute_on_single_replica_r1
type:            MERGE_PARTS
new_part_name:   all_0_0_5
has_postpones:   1
postpone_reason: Not executing merge for the part all_0_0_5, waiting for r2 to execute merge.

Row 2:
──────
table:           execute_on_single_replica_r2
type:            MERGE_PARTS
new_part_name:   all_0_0_5
has_postpones:   0
postpone_reason: 
############################
### timeout exceeded, r1 failed to get the merged part from r2 and did the merge by its own
Row 1:
──────
table:           execute_on_single_replica_r2
type:            MERGE_PARTS
new_part_name:   all_0_0_5
has_postpones:   0
postpone_reason: 
############################
### queue unfreeze
############################
### disable the feature
############################
### part_log
Row 1:
──────
part_name: all_0_0_1
mergers:   ['execute_on_single_replica_r1']
fetchers:  ['execute_on_single_replica_r2']

Row 2:
──────
part_name: all_0_0_2
mergers:   ['execute_on_single_replica_r1']
fetchers:  ['execute_on_single_replica_r2']

Row 3:
──────
part_name: all_0_0_3
mergers:   ['execute_on_single_replica_r2']
fetchers:  ['execute_on_single_replica_r1']

Row 4:
──────
part_name: all_0_0_4
mergers:   ['execute_on_single_replica_r2']
fetchers:  ['execute_on_single_replica_r1']

Row 5:
──────
part_name: all_0_0_5
mergers:   ['execute_on_single_replica_r1','execute_on_single_replica_r2']
fetchers:  []

Row 6:
──────
part_name: all_0_0_6
mergers:   ['execute_on_single_replica_r1','execute_on_single_replica_r2']
fetchers:  []

Row 7:
──────
part_name: all_0_0_7
mergers:   ['execute_on_single_replica_r1','execute_on_single_replica_r2']
fetchers:  []
