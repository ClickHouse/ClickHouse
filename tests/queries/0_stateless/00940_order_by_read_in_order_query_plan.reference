-- { echoOn }

-- Exact match, single key
select * from tab order by (a + b) * c;
0	0	0	0
0	0	0	0
1	1	1	1
1	1	1	1
2	2	2	2
2	2	2	2
3	3	3	3
3	3	3	3
4	4	4	4
4	4	4	4
select * from (explain plan actions = 1 select * from tab order by (a + b) * c) where explain like '%sort description%';
  Prefix sort description: multiply(plus(a, b), c) ASC
  Result sort description: multiply(plus(a, b), c) ASC
select * from tab order by (a + b) * c desc;
4	4	4	4
4	4	4	4
3	3	3	3
3	3	3	3
2	2	2	2
2	2	2	2
1	1	1	1
1	1	1	1
0	0	0	0
0	0	0	0
select * from (explain plan actions = 1 select * from tab order by (a + b) * c desc) where explain like '%sort description%';
  Prefix sort description: multiply(plus(a, b), c) DESC
  Result sort description: multiply(plus(a, b), c) DESC
-- Exact match, full key
select * from tab order by (a + b) * c, sin(a / b);
0	0	0	0
0	0	0	0
1	1	1	1
1	1	1	1
2	2	2	2
2	2	2	2
3	3	3	3
3	3	3	3
4	4	4	4
4	4	4	4
select * from (explain plan actions = 1 select * from tab order by (a + b) * c, sin(a / b)) where explain like '%sort description%';
  Prefix sort description: multiply(plus(a, b), c) ASC, sin(divide(a, b)) ASC
  Result sort description: multiply(plus(a, b), c) ASC, sin(divide(a, b)) ASC
select * from tab order by (a + b) * c desc, sin(a / b) desc;
4	4	4	4
4	4	4	4
3	3	3	3
3	3	3	3
2	2	2	2
2	2	2	2
1	1	1	1
1	1	1	1
0	0	0	0
0	0	0	0
select * from (explain plan actions = 1 select * from tab order by (a + b) * c desc, sin(a / b) desc) where explain like '%sort description%';
  Prefix sort description: multiply(plus(a, b), c) DESC, sin(divide(a, b)) DESC
  Result sort description: multiply(plus(a, b), c) DESC, sin(divide(a, b)) DESC
-- Exact match, mixed direction
select * from tab order by (a + b) * c desc, sin(a / b);
4	4	4	4
4	4	4	4
3	3	3	3
3	3	3	3
2	2	2	2
2	2	2	2
1	1	1	1
1	1	1	1
0	0	0	0
0	0	0	0
select * from (explain plan actions = 1 select * from tab order by (a + b) * c desc, sin(a / b)) where explain like '%sort description%';
  Prefix sort description: multiply(plus(a, b), c) DESC
  Result sort description: multiply(plus(a, b), c) DESC, sin(divide(a, b)) ASC
select * from tab order by (a + b) * c, sin(a / b) desc;
0	0	0	0
0	0	0	0
1	1	1	1
1	1	1	1
2	2	2	2
2	2	2	2
3	3	3	3
3	3	3	3
4	4	4	4
4	4	4	4
select * from (explain plan actions = 1 select * from tab order by (a + b) * c, sin(a / b) desc) where explain like '%sort description%';
  Prefix sort description: multiply(plus(a, b), c) ASC
  Result sort description: multiply(plus(a, b), c) ASC, sin(divide(a, b)) DESC
-- Wrong order, full sort
select * from tab order by sin(a / b), (a + b) * c;
1	1	1	1
1	1	1	1
2	2	2	2
2	2	2	2
3	3	3	3
3	3	3	3
4	4	4	4
4	4	4	4
0	0	0	0
0	0	0	0
select * from (explain plan actions = 1 select * from tab order by sin(a / b), (a + b) * c) where explain ilike '%sort description%';
  Sort description: sin(divide(a, b)) ASC, multiply(plus(a, b), c) ASC
-- Fixed point
select * from tab where (a + b) * c = 8 order by sin(a / b);
2	2	2	2
2	2	2	2
select * from (explain plan actions = 1 select * from tab where (a + b) * c = 8 order by sin(a / b)) where explain ilike '%sort description%';
  Prefix sort description: sin(divide(a, b)) ASC
  Result sort description: sin(divide(a, b)) ASC
select * from tab where d + 1 = 2 order by (d + 1) * 4, (a + b) * c;
1	1	1	1
1	1	1	1
select * from (explain plan actions = 1 select * from tab where d + 1 = 2 order by (d + 1) * 4, (a + b) * c) where explain ilike '%sort description%';
  Prefix sort description: multiply(plus(d, 1), 4) ASC, multiply(plus(a, b), c) ASC
  Result sort description: multiply(plus(d, 1), 4) ASC, multiply(plus(a, b), c) ASC
select * from tab where d + 1 = 3 and (a + b) = 4 and c = 2 order by (d + 1) * 4, sin(a / b);
2	2	2	2
2	2	2	2
select * from (explain plan actions = 1 select * from tab where d + 1 = 3 and (a + b) = 4 and c = 2 order by (d + 1) * 4, sin(a / b)) where explain ilike '%sort description%';
  Prefix sort description: multiply(plus(d, 1), 4) ASC, sin(divide(a, b)) ASC
  Result sort description: multiply(plus(d, 1), 4) ASC, sin(divide(a, b)) ASC
-- Wrong order with fixed point
select * from tab where (a + b) * c = 8 order by sin(b / a);
2	2	2	2
2	2	2	2
select * from (explain plan actions = 1 select * from tab where (a + b) * c = 8 order by sin(b / a)) where explain ilike '%sort description%';
  Sort description: sin(divide(b, a)) ASC
-- Monotonicity
select * from tab order by intDiv((a + b) * c, 2);
0	0	0	0
0	0	0	0
1	1	1	1
1	1	1	1
2	2	2	2
2	2	2	2
3	3	3	3
3	3	3	3
4	4	4	4
4	4	4	4
select * from (explain plan actions = 1 select * from tab order by intDiv((a + b) * c, 2)) where explain like '%sort description%';
  Prefix sort description: intDiv(multiply(plus(a, b), c), 2) ASC
  Result sort description: intDiv(multiply(plus(a, b), c), 2) ASC
select * from tab order by intDiv((a + b) * c, 2), sin(a / b);
0	0	0	0
0	0	0	0
1	1	1	1
1	1	1	1
2	2	2	2
2	2	2	2
3	3	3	3
3	3	3	3
4	4	4	4
4	4	4	4
select * from (explain plan actions = 1 select * from tab order by intDiv((a + b) * c, 2), sin(a / b)) where explain like '%sort description%';
  Prefix sort description: intDiv(multiply(plus(a, b), c), 2) ASC
  Result sort description: intDiv(multiply(plus(a, b), c), 2) ASC, sin(divide(a, b)) ASC
-- select * from tab order by (a + b) * c, intDiv(sin(a / b), 2);
select * from (explain plan actions = 1 select * from tab order by (a + b) * c, intDiv(sin(a / b), 2)) where explain like '%sort description%';
  Prefix sort description: multiply(plus(a, b), c) ASC, intDiv(sin(divide(a, b)), 2) ASC
  Result sort description: multiply(plus(a, b), c) ASC, intDiv(sin(divide(a, b)), 2) ASC
-- select * from tab order by (a + b) * c desc , intDiv(sin(a / b), 2);
select * from (explain plan actions = 1 select * from tab order by (a + b) * c desc , intDiv(sin(a / b), 2)) where explain like '%sort description%';
  Prefix sort description: multiply(plus(a, b), c) DESC
  Result sort description: multiply(plus(a, b), c) DESC, intDiv(sin(divide(a, b)), 2) ASC
-- select * from tab order by (a + b) * c, intDiv(sin(a / b), 2) desc;
select * from (explain plan actions = 1 select * from tab order by (a + b) * c, intDiv(sin(a / b), 2) desc) where explain like '%sort description%';
  Prefix sort description: multiply(plus(a, b), c) ASC
  Result sort description: multiply(plus(a, b), c) ASC, intDiv(sin(divide(a, b)), 2) DESC
-- select * from tab order by (a + b) * c desc, intDiv(sin(a / b), 2) desc;
select * from (explain plan actions = 1 select * from tab order by (a + b) * c desc, intDiv(sin(a / b), 2) desc) where explain like '%sort description%';
  Prefix sort description: multiply(plus(a, b), c) DESC, intDiv(sin(divide(a, b)), 2) DESC
  Result sort description: multiply(plus(a, b), c) DESC, intDiv(sin(divide(a, b)), 2) DESC
-- select * from tab order by (a + b) * c desc, intDiv(sin(a / b), -2);
select * from (explain plan actions = 1 select * from tab order by (a + b) * c desc, intDiv(sin(a / b), -2)) where explain like '%sort description%';
  Prefix sort description: multiply(plus(a, b), c) DESC, intDiv(sin(divide(a, b)), -2) ASC
  Result sort description: multiply(plus(a, b), c) DESC, intDiv(sin(divide(a, b)), -2) ASC
-- select * from tab order by (a + b) * c desc, intDiv(intDiv(sin(a / b), -2), -3);
select * from (explain plan actions = 1 select * from tab order by (a + b) * c desc, intDiv(intDiv(sin(a / b), -2), -3)) where explain like '%sort description%';
  Prefix sort description: multiply(plus(a, b), c) DESC
  Result sort description: multiply(plus(a, b), c) DESC, intDiv(intDiv(sin(divide(a, b)), -2), -3) ASC
-- select * from tab order by (a + b) * c, intDiv(intDiv(sin(a / b), -2), -3);
select * from (explain plan actions = 1 select * from tab order by (a + b) * c, intDiv(intDiv(sin(a / b), -2), -3)) where explain like '%sort description%';
  Prefix sort description: multiply(plus(a, b), c) ASC, intDiv(intDiv(sin(divide(a, b)), -2), -3) ASC
  Result sort description: multiply(plus(a, b), c) ASC, intDiv(intDiv(sin(divide(a, b)), -2), -3) ASC
-- Aliases
select * from (select *, a + b as x from tab) order by x * c;
0	0	0	0	0
0	0	0	0	0
1	1	1	1	2
1	1	1	1	2
2	2	2	2	4
2	2	2	2	4
3	3	3	3	6
3	3	3	3	6
4	4	4	4	8
4	4	4	4	8
select * from (explain plan actions = 1 select * from (select *, a + b as x from tab) order by x * c) where explain like '%sort description%';
  Prefix sort description: multiply(x, c) ASC
  Result sort description: multiply(x, c) ASC
select * from (select *, a + b as x, a / b as y from tab) order by x * c, sin(y);
0	0	0	0	0	nan
0	0	0	0	0	nan
1	1	1	1	2	1
1	1	1	1	2	1
2	2	2	2	4	1
2	2	2	2	4	1
3	3	3	3	6	1
3	3	3	3	6	1
4	4	4	4	8	1
4	4	4	4	8	1
select * from (explain plan actions = 1 select * from (select *, a + b as x, a / b as y from tab) order by x * c, sin(y)) where explain like '%sort description%';
  Prefix sort description: multiply(x, c) ASC, sin(y) ASC
  Result sort description: multiply(x, c) ASC, sin(y) ASC
select * from (select *, a / b as y from (select *, a + b as x from tab)) order by x * c, sin(y);
0	0	0	0	0	nan
0	0	0	0	0	nan
1	1	1	1	2	1
1	1	1	1	2	1
2	2	2	2	4	1
2	2	2	2	4	1
3	3	3	3	6	1
3	3	3	3	6	1
4	4	4	4	8	1
4	4	4	4	8	1
select * from (explain plan actions = 1 select * from (select *, a / b as y from (select *, a + b as x from tab)) order by x * c, sin(y)) where explain like '%sort description%';
  Prefix sort description: multiply(x, c) ASC, sin(y) ASC
  Result sort description: multiply(x, c) ASC, sin(y) ASC
-- { echoOn }

select * from tab2 order by toTimeZone(toTimezone(x, 'UTC'), 'CET'), intDiv(intDiv(y, -2), -3);
2020-02-02 00:00:00	0	0
2020-02-02 00:00:00	0	0
2020-02-03 00:00:00	1	1
2020-02-03 00:00:00	1	1
2020-02-04 00:00:00	2	2
2020-02-04 00:00:00	2	2
2020-02-05 00:00:00	3	3
2020-02-05 00:00:00	3	3
select * from (explain plan actions = 1 select * from tab2 order by toTimeZone(toTimezone(x, 'UTC'), 'CET'), intDiv(intDiv(y, -2), -3)) where explain like '%sort description%';
  Prefix sort description: toTimeZone(toTimezone(x, \'UTC\'), \'CET\') ASC, intDiv(intDiv(y, -2), -3) ASC
  Result sort description: toTimeZone(toTimezone(x, \'UTC\'), \'CET\') ASC, intDiv(intDiv(y, -2), -3) ASC
select * from tab2 order by toStartOfDay(x), intDiv(intDiv(y, -2), -3);
2020-02-02 00:00:00	0	0
2020-02-02 00:00:00	0	0
2020-02-03 00:00:00	1	1
2020-02-03 00:00:00	1	1
2020-02-04 00:00:00	2	2
2020-02-04 00:00:00	2	2
2020-02-05 00:00:00	3	3
2020-02-05 00:00:00	3	3
select * from (explain plan actions = 1 select * from tab2 order by toStartOfDay(x), intDiv(intDiv(y, -2), -3)) where explain like '%sort description%';
  Prefix sort description: toStartOfDay(x) ASC
  Result sort description: toStartOfDay(x) ASC, intDiv(intDiv(y, -2), -3) ASC
-- select * from tab2 where toTimezone(x, 'CET') = '2020-02-03 01:00:00' order by intDiv(intDiv(y, -2), -3);
select * from (explain plan actions = 1 select * from tab2 where toTimezone(x, 'CET') = '2020-02-03 01:00:00' order by intDiv(intDiv(y, -2), -3)) where explain like '%sort description%';
  Prefix sort description: intDiv(intDiv(y, -2), -3) ASC
  Result sort description: intDiv(intDiv(y, -2), -3) ASC
-- { echoOn }

-- Union (not fully supported)
select * from (select * from tab union all select * from tab3) order by (a + b) * c, sin(a / b);
0	0	0	0
0	0	0	0
0	0	0	0
0	0	0	0
1	1	1	1
1	1	1	1
1	1	1	1
1	1	1	1
2	2	2	2
2	2	2	2
2	2	2	2
2	2	2	2
3	3	3	3
3	3	3	3
3	3	3	3
3	3	3	3
4	4	4	4
4	4	4	4
4	4	4	4
4	4	4	4
select * from (explain plan actions = 1 select * from (select * from tab union all select * from tab3) order by (a + b) * c, sin(a / b)) where explain like '%sort description%' or explain like '%ReadType%';
  Prefix sort description: multiply(plus(a, b), c) ASC, sin(divide(a, b)) ASC
  Result sort description: multiply(plus(a, b), c) ASC, sin(divide(a, b)) ASC
        ReadType: InOrder
        ReadType: InOrder
select * from (select * from tab where (a + b) * c = 8 union all select * from tab3 where (a + b) * c = 18) order by sin(a / b);
2	2	2	2
2	2	2	2
3	3	3	3
3	3	3	3
select * from (explain plan actions = 1 select * from (select * from tab where (a + b) * c = 8 union all select * from tab3 where (a + b) * c = 18) order by sin(a / b)) where explain like '%sort description%' or explain like '%ReadType%';
  Prefix sort description: sin(divide(a, b)) ASC
  Result sort description: sin(divide(a, b)) ASC
        ReadType: InOrder
        ReadType: InOrder
select * from (select * from tab where (a + b) * c = 8 union all select * from tab4) order by sin(a / b);
2	2	2	2
2	2	2	2
1	1	1	1
2	2	2	2
3	3	3	3
4	4	4	4
1	1	1	1
2	2	2	2
3	3	3	3
4	4	4	4
0	0	0	0
0	0	0	0
select * from (explain plan actions = 1 select * from (select * from tab where (a + b) * c = 8 union all select * from tab4) order by sin(a / b)) where explain like '%sort description%' or explain like '%ReadType%';
  Prefix sort description: sin(divide(a, b)) ASC
  Result sort description: sin(divide(a, b)) ASC
        ReadType: InOrder
        ReadType: InOrder
select * from (select * from tab union all select * from tab5) order by (a + b) * c;
0	0	0	0
0	0	0	0
0	0	0	0
0	0	0	0
1	1	1	1
1	1	1	1
1	1	1	1
1	1	1	1
2	2	2	2
2	2	2	2
2	2	2	2
2	2	2	2
3	3	3	3
3	3	3	3
3	3	3	3
3	3	3	3
4	4	4	4
4	4	4	4
4	4	4	4
4	4	4	4
select * from (explain plan actions = 1 select * from (select * from tab union all select * from tab5) order by (a + b) * c) where explain like '%sort description%' or explain like '%ReadType%';
  Prefix sort description: multiply(plus(a, b), c) ASC
  Result sort description: multiply(plus(a, b), c) ASC
        ReadType: InOrder
        ReadType: InOrder
select * from (select * from tab union all select * from tab5) order by (a + b) * c, sin(a / b);
0	0	0	0
0	0	0	0
0	0	0	0
0	0	0	0
1	1	1	1
1	1	1	1
1	1	1	1
1	1	1	1
2	2	2	2
2	2	2	2
2	2	2	2
2	2	2	2
3	3	3	3
3	3	3	3
3	3	3	3
3	3	3	3
4	4	4	4
4	4	4	4
4	4	4	4
4	4	4	4
select * from (explain plan actions = 1 select * from (select * from tab union all select * from tab5) order by (a + b) * c, sin(a / b)) where explain like '%sort description%' or explain like '%ReadType%';
  Prefix sort description: multiply(plus(a, b), c) ASC, sin(divide(a, b)) ASC
  Result sort description: multiply(plus(a, b), c) ASC, sin(divide(a, b)) ASC
        ReadType: InOrder
      Prefix sort description: multiply(plus(a, b), c) ASC
      Result sort description: multiply(plus(a, b), c) ASC, sin(divide(a, b)) ASC
          ReadType: InOrder
-- Union with limit
select * from (select * from tab union all select * from tab5) order by (a + b) * c, sin(a / b) limit 3;
0	0	0	0
0	0	0	0
0	0	0	0
select * from (explain plan actions = 1 select * from (select * from tab union all select * from tab5) order by (a + b) * c, sin(a / b) limit 3) where explain ilike '%sort description%' or explain like '%ReadType%' or explain like '%Limit%';
  Limit (preliminary LIMIT (without OFFSET))
  Limit 3
    Prefix sort description: multiply(plus(a, b), c) ASC, sin(divide(a, b)) ASC
    Result sort description: multiply(plus(a, b), c) ASC, sin(divide(a, b)) ASC
    Limit 3
          ReadType: InOrder
        Prefix sort description: multiply(plus(a, b), c) ASC
        Result sort description: multiply(plus(a, b), c) ASC, sin(divide(a, b)) ASC
            ReadType: InOrder
-- In this example, we read-in-order from tab up to ((a + b) * c, sin(a / b)) and from tab5 up to ((a + b) * c).
-- In case of tab5, there would be two finish sorting transforms: ((a + b) * c) -> ((a + b) * c, sin(a / b)) -> ((a + b) * c, sin(a / b), d).
-- It's important that ((a + b) * c) -> ((a + b) * c does not have LIMIT. We can add LIMIT WITH TIES later, when sorting alog support it.
-- In case of tab4, we do full sorting by ((a + b) * c, sin(a / b), d) with LIMIT. We can replace it to sorting by ((a + b) * c, sin(a / b)) and LIMIT WITH TIES, when sorting alog support it.
select * from (select * from tab union all select * from tab5 union all select * from tab4) order by (a + b) * c, sin(a / b), d limit 3;
0	0	0	0
0	0	0	0
0	0	0	0
select * from (explain plan actions = 1 select * from (select * from tab union all select * from tab5 union all select * from tab4) order by (a + b) * c, sin(a / b), d limit 3) where explain ilike '%sort description%' or explain like '%ReadType%' or explain like '%Limit%';
  Limit (preliminary LIMIT (without OFFSET))
  Limit 3
    Prefix sort description: multiply(plus(a, b), c) ASC, sin(divide(a, b)) ASC
    Result sort description: multiply(plus(a, b), c) ASC, sin(divide(a, b)) ASC, d ASC
    Limit 3
          ReadType: InOrder
        Prefix sort description: multiply(plus(a, b), c) ASC
        Result sort description: multiply(plus(a, b), c) ASC, sin(divide(a, b)) ASC
            ReadType: InOrder
        Sort description: multiply(plus(a, b), c) ASC, sin(divide(a, b)) ASC, d ASC
        Limit 3
            ReadType: Default
drop table if exists tab;
drop table if exists tab2;
drop table if exists tab3;
drop table if exists tab4;
drop table if exists tab5;
