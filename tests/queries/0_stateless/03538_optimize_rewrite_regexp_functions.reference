-- { echo ON }

SET enable_analyzer = 1;
SET optimize_rewrite_regexp_functions = 1;
-- Rule 1: replaceRegexpAll / regexp_replace -> replaceRegexpOne if pattern without alternatives starts with ^ or ends with unescaped $

-- Starts with ^ (should rewrite)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT regexp_replace(identity('abc123'), '^abc', '');
SELECT replaceRegexpOne(identity(\'abc123\'), \'^abc\', \'\') AS `regexp_replace(identity(\'abc123\'), \'^abc\', \'\')`
FROM system.one AS __table1
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT replaceRegexpAll(identity('abc123'), '^abc', '');
SELECT replaceRegexpOne(identity(\'abc123\'), \'^abc\', \'\') AS `replaceRegexpAll(identity(\'abc123\'), \'^abc\', \'\')`
FROM system.one AS __table1
-- Ends with unescaped $ (should rewrite)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT regexp_replace(identity('abc123'), '123$', '');
SELECT replaceRegexpOne(identity(\'abc123\'), \'123$\', \'\') AS `regexp_replace(identity(\'abc123\'), \'123$\', \'\')`
FROM system.one AS __table1
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT replaceRegexpAll(identity('abc123'), '123$', '');
SELECT replaceRegexpOne(identity(\'abc123\'), \'123$\', \'\') AS `replaceRegexpAll(identity(\'abc123\'), \'123$\', \'\')`
FROM system.one AS __table1
-- Ends with escaped $ (should NOT rewrite)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT replaceRegexpAll(identity('abc123$'), '123\$', '');
SELECT replaceRegexpAll(identity(\'abc123$\'), \'123\\\\$\', \'\') AS `replaceRegexpAll(identity(\'abc123$\'), \'123\\\\\\\\$\', \'\')`
FROM system.one AS __table1
-- Starts with escaped ^ (should NOT rewrite)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT replaceRegexpAll(identity('abc123'), '\^abc', '');
SELECT replaceRegexpAll(identity(\'abc123\'), \'\\\\^abc\', \'\') AS `replaceRegexpAll(identity(\'abc123\'), \'\\\\\\\\^abc\', \'\')`
FROM system.one AS __table1
-- Pattern with ^ not at start (should NOT rewrite)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT replaceRegexpAll(identity('abc123'), 'a^bc', '');
SELECT replaceRegexpAll(identity(\'abc123\'), \'a^bc\', \'\') AS `replaceRegexpAll(identity(\'abc123\'), \'a^bc\', \'\')`
FROM system.one AS __table1
-- Pattern with $ not at end (should NOT rewrite)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT replaceRegexpAll(identity('abc123'), '123$abc', '');
SELECT replaceRegexpAll(identity(\'abc123\'), \'123$abc\', \'\') AS `replaceRegexpAll(identity(\'abc123\'), \'123$abc\', \'\')`
FROM system.one AS __table1
-- Pattern with alternatives (should NOT rewrite)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT replaceRegexpAll(identity('abc123'), '^123|456$', '');
SELECT replaceRegexpAll(identity(\'abc123\'), \'^123|456$\', \'\') AS `replaceRegexpAll(identity(\'abc123\'), \'^123|456$\', \'\')`
FROM system.one AS __table1
-- Rule 2: If a replaceRegexpOne function has a replacement of nothing other than \1 and some subpatterns in the regexp, or \0 and no subpatterns in the regexp, rewrite it with extract.

-- NOTE: \0 is specially treated as NUL instead of capture group reference. Need to use \\0 instead.

-- Only \0, no capture group (should rewrite)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT replaceRegexpOne(identity('abc123'), '^abc123$', '\\0');
SELECT extract(identity(\'abc123\'), \'^abc123$\') AS `replaceRegexpOne(identity(\'abc123\'), \'^abc123$\', \'\\\\\\\\0\')`
FROM system.one AS __table1
-- Only \1, with one capture group (should rewrite)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT replaceRegexpOne(identity('abc123'), '^(abc)$', '\1');
SELECT extract(identity(\'abc123\'), \'^(abc)$\') AS `replaceRegexpOne(identity(\'abc123\'), \'^(abc)$\', \'\\\\\\\\1\')`
FROM system.one AS __table1
-- Only \1, no capture group (should NOT rewrite)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT replaceRegexpOne(identity('abc123'), '^abc$', '\1');
SELECT replaceRegexpOne(identity(\'abc123\'), \'^abc$\', \'\\\\1\') AS `replaceRegexpOne(identity(\'abc123\'), \'^abc$\', \'\\\\\\\\1\')`
FROM system.one AS __table1
-- Pattern not full (should NOT rewrite)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT replaceRegexpOne(identity('abc123'), '^abc', '\\0');
SELECT replaceRegexpOne(identity(\'abc123\'), \'^abc\', \'\\\\0\') AS `replaceRegexpOne(identity(\'abc123\'), \'^abc\', \'\\\\\\\\0\')`
FROM system.one AS __table1
-- Pattern not full (should NOT rewrite)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT replaceRegexpOne(identity('abc123'), 'abc$', '\\0');
SELECT replaceRegexpOne(identity(\'abc123\'), \'abc$\', \'\\\\0\') AS `replaceRegexpOne(identity(\'abc123\'), \'abc$\', \'\\\\\\\\0\')`
FROM system.one AS __table1
-- Pattern not full (should NOT rewrite)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT replaceRegexpOne(identity('abc123'), 'abc', '\\0');
SELECT replaceRegexpOne(identity(\'abc123\'), \'abc\', \'\\\\0\') AS `replaceRegexpOne(identity(\'abc123\'), \'abc\', \'\\\\\\\\0\')`
FROM system.one AS __table1
-- Pattern not full (should NOT rewrite)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT replaceRegexpOne(identity('abc123'), '^abc\\$', '\\0');
SELECT replaceRegexpOne(identity(\'abc123\'), \'^abc\\\\$\', \'\\\\0\') AS `replaceRegexpOne(identity(\'abc123\'), \'^abc\\\\\\\\$\', \'\\\\\\\\0\')`
FROM system.one AS __table1
-- Pattern not full (should NOT rewrite)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT replaceRegexpOne(identity('abc123'), '^ab|c$', '\\0');
SELECT replaceRegexpOne(identity(\'abc123\'), \'^ab|c$\', \'\\\\0\') AS `replaceRegexpOne(identity(\'abc123\'), \'^ab|c$\', \'\\\\\\\\0\')`
FROM system.one AS __table1
-- \0 with extra characters (should NOT rewrite)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT replaceRegexpOne(identity('abc123'), '^abc123$', 'pre\\0post');
SELECT replaceRegexpOne(identity(\'abc123\'), \'^abc123$\', \'pre\\\\0post\') AS `replaceRegexpOne(identity(\'abc123\'), \'^abc123$\', \'pre\\\\\\\\0post\')`
FROM system.one AS __table1
-- \1 with two capture groups (should rewrite â€” only \1 used)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT replaceRegexpOne(identity('abc123'), '^(a)(b)$', '\1');
SELECT extract(identity(\'abc123\'), \'^(a)(b)$\') AS `replaceRegexpOne(identity(\'abc123\'), \'^(a)(b)$\', \'\\\\\\\\1\')`
FROM system.one AS __table1
-- \2 used (should NOT rewrite)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT replaceRegexpOne(identity('abc123'), '^(a)(b)$', '\2');
SELECT replaceRegexpOne(identity(\'abc123\'), \'^(a)(b)$\', \'\\\\2\') AS `replaceRegexpOne(identity(\'abc123\'), \'^(a)(b)$\', \'\\\\\\\\2\')`
FROM system.one AS __table1
-- Mixed content in replacement (should NOT rewrite)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT replaceRegexpOne(identity('abc123'), '^(abc)$', 'X\1Y');
SELECT replaceRegexpOne(identity(\'abc123\'), \'^(abc)$\', \'X\\\\1Y\') AS `replaceRegexpOne(identity(\'abc123\'), \'^(abc)$\', \'X\\\\\\\\1Y\')`
FROM system.one AS __table1
-- Escaped backslash in replacement (should NOT rewrite)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT replaceRegexpOne(identity('abc123'), '^(abc)$', '\\\\1');
SELECT replaceRegexpOne(identity(\'abc123\'), \'^(abc)$\', \'\\\\\\\\1\') AS `replaceRegexpOne(identity(\'abc123\'), \'^(abc)$\', \'\\\\\\\\\\\\\\\\1\')`
FROM system.one AS __table1
-- Rule 3: If an extract function has a regexp with some subpatterns and the regexp starts with ^.* or ending with an unescaped .*$, remove this prefix and/or suffix.

-- Starts with ^.* (should strip prefix)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT extract(identity('abc123'), '^.*(123)');
SELECT extract(identity(\'abc123\'), \'(123)\') AS `extract(identity(\'abc123\'), \'^.*(123)\')`
FROM system.one AS __table1
-- Ends with unescaped .*$ (should strip suffix)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT extract(identity('abc123'), '(abc).*$');
SELECT extract(identity(\'abc123\'), \'(abc)\') AS `extract(identity(\'abc123\'), \'(abc).*$\')`
FROM system.one AS __table1
-- Starts and ends (should strip both)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT extract(identity('abc123'), '^.*(abc).*$');
SELECT extract(identity(\'abc123\'), \'(abc)\') AS `extract(identity(\'abc123\'), \'^.*(abc).*$\')`
FROM system.one AS __table1
-- Starts and ends (should NOT rewrite without capture groups)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT extract(identity('abc123'), '^.*$');
SELECT extract(identity(\'abc123\'), \'^.*$\') AS `extract(identity(\'abc123\'), \'^.*$\')`
FROM system.one AS __table1
-- Escaped dot before * (should NOT rewrite)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT extract(identity('abc123'), '(abc)\.*$');
SELECT extract(identity(\'abc123\'), \'(abc)\\\\.*$\') AS `extract(identity(\'abc123\'), \'(abc)\\\\\\\\.*$\')`
FROM system.one AS __table1
-- No prefix or suffix (should NOT rewrite)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT extract(identity('abc123'), '(abc)');
SELECT extract(identity(\'abc123\'), \'(abc)\') AS `extract(identity(\'abc123\'), \'(abc)\')`
FROM system.one AS __table1
-- Starts with .* but not ^.* (should NOT rewrite)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT extract(identity('abc123'), '.*(abc)');
SELECT extract(identity(\'abc123\'), \'.*(abc)\') AS `extract(identity(\'abc123\'), \'.*(abc)\')`
FROM system.one AS __table1
-- Starts with ^.*? (should NOT rewrite)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT extract(identity('abc123abc456'), '^.*?(abc.*)');
SELECT extract(identity(\'abc123abc456\'), \'^.*?(abc.*)\') AS `extract(identity(\'abc123abc456\'), \'^.*?(abc.*)\')`
FROM system.one AS __table1
-- Ends with .* but not .*$ (should NOT rewrite)
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT extract(identity('abc123'), '(abc).*');
SELECT extract(identity(\'abc123\'), \'(abc).*\') AS `extract(identity(\'abc123\'), \'(abc).*\')`
FROM system.one AS __table1
-- Cascade tests

-- Rule 1 + Rule 2: replaceRegexpAll to replaceRegexpOne to extract
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT replaceRegexpAll(identity('abc'), '^(abc)', '\1');
SELECT replaceRegexpOne(identity(\'abc\'), \'^(abc)\', \'\\\\1\') AS `replaceRegexpAll(identity(\'abc\'), \'^(abc)\', \'\\\\\\\\1\')`
FROM system.one AS __table1
-- Rule 2 + 3: replaceRegexpOne -> extract -> simplified extract
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT replaceRegexpOne(identity('abc'), '^.*(abc).*$','\1');
SELECT extract(identity(\'abc\'), \'(abc)\') AS `replaceRegexpOne(identity(\'abc\'), \'^.*(abc).*$\', \'\\\\\\\\1\')`
FROM system.one AS __table1
-- Rule 1 + 2 + 3: replaceRegexpAll -> replaceRegexpOne -> extract -> simplified extract
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT replaceRegexpAll(identity('abc'), '^.*(abc).*$','\1');
SELECT extract(identity(\'abc\'), \'(abc)\') AS `replaceRegexpAll(identity(\'abc\'), \'^.*(abc).*$\', \'\\\\\\\\1\')`
FROM system.one AS __table1
-- ClickBench Q28
EXPLAIN QUERY TREE dump_tree = 0, dump_ast = 1 SELECT REGEXP_REPLACE(identity('some referer'), '^https?://(?:www\.)?([^/]+)/.*$', '\1');
SELECT extract(identity(\'some referer\'), \'^https?://(?:www\\\\.)?([^/]+)/\') AS `REGEXP_REPLACE(identity(\'some referer\'), \'^https?://(?:www\\\\\\\\.)?([^/]+)/.*$\', \'\\\\\\\\1\')`
FROM system.one AS __table1
