{% for engine in ["ReplicatedMergeTree('/clickhouse/tables/{database}/test_01825_3/t_json_3', 'r1') ORDER BY tuple()", "Memory"] -%}
1	('',0)	Tuple(k1 String, k2 Int8)
2	('v1',2)	Tuple(k1 String, k2 Int8)
1		0
2	v1	2
========
1	([])	Tuple(k1 Nested(k2 String, k3 String))
2	([('v1','v3'),('v4','')])	Tuple(k1 Nested(k2 String, k3 String))
1	[]	[]
2	['v1','v4']	['v3','']
1	([])	Tuple(k1 Nested(k2 String, k3 String))
2	([('v1','v3'),('v4','')])	Tuple(k1 Nested(k2 String, k3 String))
3	([])	Tuple(k1 Nested(k2 String, k3 String))
4	([])	Tuple(k1 Nested(k2 String, k3 String))
1	[]	[]
2	['v1','v4']	['v3','']
3	[]	[]
4	[]	[]
{%- if 'MergeTree' in engine %}
all_2_2_0	data	Tuple(k1 Nested(k2 String, k3 String))
all_3_3_0	data	Tuple(_dummy UInt8)
data	Tuple(k1 Nested(k2 String, k3 String))
{%-  endif %}
1	[]	[]
2	['v1','v4']	['v3','']
3	[]	[]
4	[]	[]
========
1	((1,'foo'),[])	Tuple(k1 Tuple(k2 Int8, k3 String), k4 Array(Int8))
2	((0,''),[1,2,3])	Tuple(k1 Tuple(k2 Int8, k3 String), k4 Array(Int8))
3	((10,''),[])	Tuple(k1 Tuple(k2 Int8, k3 String), k4 Array(Int8))
1	1	foo	[]
2	0		[1,2,3]
3	10		[]
{% endfor -%}
