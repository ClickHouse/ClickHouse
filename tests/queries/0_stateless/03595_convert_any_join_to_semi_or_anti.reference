Expression ((Project names + Projection))
Actions: INPUT :: 0 -> count() UInt64 : 0
Positions: 0
  Aggregating
  Keys:
  Aggregates:
      count()
        Function: count() → UInt64
        Arguments: none
  Skip merging: 0
    Expression (((Before GROUP BY + WHERE) + Discarding unused columns))
    Actions: INPUT :: 0 -> __join_result_dummy UInt8 : 0
    Positions:
      Expression (Post Join Actions)
      Actions: INPUT :: 0 -> __join_result_dummy UInt8 : 0
      Positions: 0
        Join
        Type: LEFT
        Strictness: SEMI
        Algorithm: ConcurrentHashJoin
        Clauses: [(__table1.uid) = (exists(__table2).__table1.uid)]
          Expression (Left Pre Join Actions)
          Actions: INPUT :: 0 -> __table1.uid Int16 : 0
                   COLUMN Const(UInt8) -> __join_result_dummy UInt8 : 1
          Positions: 0 1
            Expression (Change column names to column identifiers)
            Actions: INPUT : 0 -> uid Int16 : 0
                     ALIAS uid :: 0 -> __table1.uid Int16 : 1
            Positions: 1
              ReadFromMemoryStorage
          Expression (Right Pre Join Actions)
          Actions: INPUT :: 0 -> exists(__table2).__table1.uid Int16 : 0
          Positions: 0
            Expression (Create result for always true EXISTS expression)
            Actions: INPUT : 0 -> __table1.uid Int16 : 0
                     ALIAS __table1.uid :: 0 -> exists(__table2).__table1.uid Int16 : 1
            Positions: 1
              Filter (WHERE)
              Filter column: notEquals(__table1.uid, __table4.uid) (removed)
              Actions: INPUT : 0 -> __table4.uid Int16 : 0
                       INPUT : 1 -> __table1.uid Int16 : 1
                       FUNCTION notEquals(__table1.uid : 1, __table4.uid :: 0) -> notEquals(__table1.uid, __table4.uid) UInt8 : 2
              Positions: 2 1
                Expression (Post Join Actions)
                Actions: INPUT :: 0 -> __table1.uid Int16 : 0
                         INPUT :: 1 -> __table4.uid Int16 : 1
                Positions: 0 1
                  Join
                  Type: CROSS
                  Strictness: ALL
                  Algorithm: HashJoin
                    Expression (Left Pre Join Actions)
                    Actions: INPUT :: 0 -> __table1.uid Int16 : 0
                    Positions: 0
                      Expression (Change column names to column identifiers)
                      Actions: INPUT : 0 -> uid Int16 : 0
                               ALIAS uid :: 0 -> __table1.uid Int16 : 1
                      Positions: 1
                        ReadFromMemoryStorage
                    Expression (Right Pre Join Actions)
                    Actions: INPUT :: 0 -> __table4.uid Int16 : 0
                    Positions: 0
                      Expression (Change column names to column identifiers)
                      Actions: INPUT : 0 -> uid Int16 : 0
                               ALIAS uid :: 0 -> __table4.uid Int16 : 1
                      Positions: 1
                        ReadFromMemoryStorage
Expression ((Project names + Projection))
Actions: INPUT :: 0 -> count() UInt64 : 0
Positions: 0
  Aggregating
  Keys:
  Aggregates:
      count()
        Function: count() → UInt64
        Arguments: none
  Skip merging: 0
    Expression (((Before GROUP BY + WHERE) + Discarding unused columns))
    Actions: INPUT :: 0 -> __join_result_dummy UInt8 : 0
    Positions:
      Expression (Post Join Actions)
      Actions: INPUT :: 0 -> __join_result_dummy UInt8 : 0
      Positions: 0
        Join
        Type: LEFT
        Strictness: ANTI
        Algorithm: ConcurrentHashJoin
        Clauses: [(__table1.uid) = (exists(__table2).__table1.uid)]
          Expression (Left Pre Join Actions)
          Actions: INPUT :: 0 -> __table1.uid Int16 : 0
                   COLUMN Const(UInt8) -> __join_result_dummy UInt8 : 1
          Positions: 0 1
            Expression (Change column names to column identifiers)
            Actions: INPUT : 0 -> uid Int16 : 0
                     ALIAS uid :: 0 -> __table1.uid Int16 : 1
            Positions: 1
              ReadFromMemoryStorage
          Expression (Right Pre Join Actions)
          Actions: INPUT :: 0 -> exists(__table2).__table1.uid Int16 : 0
          Positions: 0
            Expression (Create result for always true EXISTS expression)
            Actions: INPUT : 0 -> __table1.uid Int16 : 0
                     ALIAS __table1.uid :: 0 -> exists(__table2).__table1.uid Int16 : 1
            Positions: 1
              Filter (WHERE)
              Filter column: notEquals(__table1.uid, __table4.uid) (removed)
              Actions: INPUT : 0 -> __table4.uid Int16 : 0
                       INPUT : 1 -> __table1.uid Int16 : 1
                       FUNCTION notEquals(__table1.uid : 1, __table4.uid :: 0) -> notEquals(__table1.uid, __table4.uid) UInt8 : 2
              Positions: 2 1
                Expression (Post Join Actions)
                Actions: INPUT :: 0 -> __table1.uid Int16 : 0
                         INPUT :: 1 -> __table4.uid Int16 : 1
                Positions: 0 1
                  Join
                  Type: CROSS
                  Strictness: ALL
                  Algorithm: HashJoin
                    Expression (Left Pre Join Actions)
                    Actions: INPUT :: 0 -> __table1.uid Int16 : 0
                    Positions: 0
                      Expression (Change column names to column identifiers)
                      Actions: INPUT : 0 -> uid Int16 : 0
                               ALIAS uid :: 0 -> __table1.uid Int16 : 1
                      Positions: 1
                        ReadFromMemoryStorage
                    Expression (Right Pre Join Actions)
                    Actions: INPUT :: 0 -> __table4.uid Int16 : 0
                    Positions: 0
                      Expression (Change column names to column identifiers)
                      Actions: INPUT : 0 -> uid Int16 : 0
                               ALIAS uid :: 0 -> __table4.uid Int16 : 1
                      Positions: 1
                        ReadFromMemoryStorage
