-- { echoOn }
explain pipeline select groupArraySorted(partition), parent_key, child_key, sum(value) from data_02233 group by parent_key, child_key with totals order by parent_key, child_key settings max_threads=1, optimize_aggregation_in_order=1;
(Expression)
ExpressionTransform × 2
  (Sorting)
  MergeSortingTransform
    LimitsCheckingTransform
      PartialSortingTransform
        (Expression)
        ExpressionTransform × 2
          (TotalsHaving)
          TotalsHavingTransform 1 → 2
            (Aggregating)
            MergingAggregatedBucketTransform
              FinishAggregatingInOrderTransform 2 → 1
                AggregatingInOrderTransform × 2
                  (Expression)
                  ExpressionTransform × 2
                    (SettingQuotaAndLimits)
                      (ReadFromMergeTree)
                      MergeTreeInOrder × 2 0 → 1
explain pipeline select groupArraySorted(partition), parent_key, child_key, sum(value) from data_02233 group by parent_key, child_key with totals order by parent_key, child_key settings max_threads=1;
(Expression)
ExpressionTransform × 2
  (Sorting)
  MergeSortingTransform
    LimitsCheckingTransform
      PartialSortingTransform
        (Expression)
        ExpressionTransform × 2
          (TotalsHaving)
          TotalsHavingTransform 1 → 2
            (Aggregating)
            AggregatingTransform
              (Expression)
              ExpressionTransform
                (SettingQuotaAndLimits)
                  (ReadFromMergeTree)
                  Concat 2 → 1
                    MergeTreeInOrder × 2 0 → 1
select groupArraySorted(partition), parent_key, child_key, sum(value) from data_02233 group by parent_key, child_key with totals order by parent_key, child_key settings optimize_aggregation_in_order=1;
[1,2]	10	100	2000
[1,2]	20	200	4000

[1,1,2,2]	0	0	6000
select groupArraySorted(partition), parent_key, child_key, sum(value) from data_02233 group by parent_key, child_key with totals order by parent_key, child_key settings optimize_aggregation_in_order=1, max_block_size=1;
[1,2]	10	100	2000
[1,2]	20	200	4000

[1,1,2,2]	0	0	6000
-- sum() can be compiled, check that compiled version works correctly
select groupArraySorted(partition), parent_key, child_key, sum(value) from data_02233 group by parent_key, child_key with totals order by parent_key, child_key settings optimize_aggregation_in_order=1, compile_aggregate_expressions=1, min_count_to_compile_aggregate_expression=0;
[1,2]	10	100	2000
[1,2]	20	200	4000

[1,1,2,2]	0	0	6000
select groupArraySorted(partition), parent_key, child_key, sum(value) from data_02233 group by parent_key, child_key with totals order by parent_key, child_key;
[1,2]	10	100	2000
[1,2]	20	200	4000

[1,1,2,2]	0	0	6000
-- fuzzer
SELECT child_key, parent_key, child_key FROM data_02233 GROUP BY parent_key, child_key, child_key ORDER BY child_key, parent_key ASC NULLS LAST SETTINGS max_threads = 1, optimize_aggregation_in_order = 1;
100	10	100
200	20	200
SELECT child_key, parent_key, child_key FROM data_02233 GROUP BY parent_key, child_key, child_key WITH TOTALS ORDER BY child_key, parent_key ASC NULLS LAST SETTINGS max_threads = 1, optimize_aggregation_in_order = 1;
100	10	100
200	20	200

0	0	0
