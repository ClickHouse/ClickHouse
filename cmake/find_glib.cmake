set (GLIB_PATHS "/usr/local/opt/glib/lib")
set (GLIB_INCLUDE_PATHS
	"/usr/local/include/glib-2.0/"
	"/usr/local/lib/glib-2.0/include/"
	"/usr/include/glib-2.0/"
	"/usr/lib64/glib-2.0/include/")
if (AARCH64)
	set (GLIB_INCLUDE_PATHS ${GLIB_INCLUDE_PATHS} "/usr/lib/aarch64-linux-gnu/glib-2.0/include/")
else ()
	set (GLIB_INCLUDE_PATHS ${GLIB_INCLUDE_PATHS} "/usr/lib/x86_64-linux-gnu/glib-2.0/include/")
endif ()
if (USE_STATIC_LIBRARIES)
	find_library (GLIB_LIB libglib-2.0.a PATHS ${GLIB_PATHS})
else ()
	find_library (GLIB_LIB glib-2.0 PATHS ${GLIB_PATHS})
endif ()
find_path (GLIB_INCLUDE_DIR NAMES glib.h PATHS ${GLIB_INCLUDE_PATHS})
find_path (GLIB_CONFIG_INCLUDE_DIR NAMES glibconfig.h PATHS ${GLIB_INCLUDE_PATHS})
include_directories (${GLIB_INCLUDE_DIR})
include_directories (${GLIB_CONFIG_INCLUDE_DIR})

if (APPLE)
	set (INTL_PATHS "/usr/local/opt/gettext/lib")
	if (USE_STATIC_LIBRARIES)
		find_library (INTL_LIB libintl.a PATHS ${INTL_PATHS})
	else ()
		find_library (INTL_LIB intl PATHS ${INTL_PATHS})
	endif ()
	set (ICONV_PATHS "/usr/local/opt/libiconv/lib")
	if (USE_STATIC_LIBRARIES)
		find_library (ICONV_LIB libiconv.a PATHS ${ICONV_PATHS})
	else ()
		find_library (ICONV_LIB iconv PATHS ${ICONV_PATHS})
	endif ()
	find_library (CORE_FOUNDATION_LIB CoreFoundation)
	find_library (CARBON_LIB Carbon)
	set (GLIB_LIBS ${GLIB_LIB} ${INTL_LIB} ${ICONV_LIB} ${CORE_FOUNDATION_LIB} ${CARBON_LIB})

elseif (CMAKE_SYSTEM MATCHES "FreeBSD")
	set (ICONV_PATHS "")
	set (INTL_PATHS "")
	if (USE_STATIC_LIBRARIES)
		find_library (ICONV_LIB libiconv.a PATHS ${ICONV_PATHS})
		find_library (INTL_LIB libintl.a PATHS ${INTL_PATHS})
	else ()
		find_library (ICONV_LIB iconv PATHS ${ICONV_PATHS})
		find_library (INTL_LIB intl PATHS ${INTL_PATHS})
	endif ()
	set (GLIB_LIBS ${GLIB_LIB} ${INTL_LIB} ${ICONV_LIB})
else ()

	set (GLIB_LIBS ${GLIB_LIB})
endif ()

message(STATUS "Using glib: ${GLIB_INCLUDE_DIR};${GLIB_CONFIG_INCLUDE_DIR} : ${GLIB_LIBS}")
