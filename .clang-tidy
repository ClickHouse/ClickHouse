Checks: '*,
    -abseil-*,

    -altera-*,

    -android-*,

    -bugprone-assert-side-effect,
    -bugprone-branch-clone,
    -bugprone-dynamic-static-initializers,
    -bugprone-easily-swappable-parameters,
    -bugprone-exception-escape,
    -bugprone-forwarding-reference-overload,
    -bugprone-implicit-widening-of-multiplication-result,
    -bugprone-lambda-function-name,
    -bugprone-misplaced-widening-cast,
    -bugprone-narrowing-conversions,
    -bugprone-no-escape,
    -bugprone-not-null-terminated-result,
    -bugprone-signal-handler,
    -bugprone-spuriously-wake-up-functions,
    -bugprone-unhandled-exception-at-new,
    -bugprone-unhandled-self-assignment,

    -cert-dcl16-c,
    -cert-dcl37-c,
    -cert-dcl51-cpp,
    -cert-dcl58-cpp,
    -cert-err58-cpp,
    -cert-msc32-c,
    -cert-msc51-cpp,
    -cert-oop54-cpp,
    -cert-oop57-cpp,
    -cert-oop58-cpp,

    -clang-analyzer-optin.performance.Padding,
    -clang-analyzer-optin.portability.UnixAPI,

    -clang-analyzer-security.insecureAPI.bzero,
    -clang-analyzer-security.insecureAPI.strcpy,

    -cppcoreguidelines-*,

    -concurrency-mt-unsafe,

    -darwin-*,

    -fuchsia-*,

    -google-build-using-namespace,
    -google-global-names-in-headers,
    -google-readability-braces-around-statements,
    -google-readability-function-size,
    -google-readability-namespace-comments,
    -google-readability-todo,
    -google-upgrade-googletest-case,

    -hicpp-avoid-c-arrays,
    -hicpp-avoid-goto,
    -hicpp-braces-around-statements,
    -hicpp-deprecated-headers,
    -hicpp-explicit-conversions,
    -hicpp-function-size,
    -hicpp-invalid-access-moved,
    -hicpp-member-init,
    -hicpp-move-const-arg,
    -hicpp-multiway-paths-covered,
    -hicpp-named-parameter,
    -hicpp-no-array-decay,
    -hicpp-no-assembler,
    -hicpp-no-malloc,
    -hicpp-signed-bitwise,
    -hicpp-special-member-functions,
    -hicpp-uppercase-literal-suffix,
    -hicpp-use-auto,
    -hicpp-use-emplace,
    -hicpp-use-equals-default,
    -hicpp-use-noexcept,
    -hicpp-use-override,
    -hicpp-vararg,

    -llvm-*,

    -llvmlibc-*,

    -openmp-*,

    -misc-definitions-in-headers,
    -misc-new-delete-overloads,
    -misc-no-recursion,
    -misc-non-copyable-objects,
    -misc-non-private-member-variables-in-classes,
    -misc-static-assert,

    -modernize-avoid-c-arrays,
    -modernize-concat-nested-namespaces,
    -modernize-deprecated-headers,
    -modernize-deprecated-ios-base-aliases,
    -modernize-pass-by-value,
    -modernize-replace-auto-ptr,
    -modernize-replace-disallow-copy-and-assign-macro,
    -modernize-return-braced-init-list,
    -modernize-unary-static-assert,
    -modernize-use-auto,
    -modernize-use-default-member-init,
    -modernize-use-emplace,
    -modernize-use-equals-default,
    -modernize-use-nodiscard,
    -modernize-use-noexcept,
    -modernize-use-override,
    -modernize-use-trailing-return-type,

    -performance-inefficient-string-concatenation,
    -performance-no-int-to-ptr,
    -performance-type-promotion-in-math-fn,
    -performance-trivially-destructible,
    -performance-unnecessary-value-param,

    -portability-simd-intrinsics,

    -readability-convert-member-functions-to-static,
    -readability-braces-around-statements,
    -readability-else-after-return,
    -readability-function-cognitive-complexity,
    -readability-function-size,
    -readability-implicit-bool-conversion,
    -readability-isolate-declaration,
    -readability-magic-numbers,
    -readability-named-parameter,
    -readability-qualified-auto,
    -readability-redundant-declaration,
    -readability-static-accessed-through-instance,
    -readability-suspicious-call-argument,
    -readability-uppercase-literal-suffix,
    -readability-use-anyofallof,

    -zirkon-*,
'

WarningsAsErrors: '*'

CheckOptions:
  - key: readability-identifier-naming.ClassCase
    value: CamelCase
  - key: readability-identifier-naming.EnumCase
    value: CamelCase
  - key: readability-identifier-naming.LocalVariableCase
    value: lower_case
  - key: readability-identifier-naming.StaticConstantCase
    value: aNy_CasE
  - key: readability-identifier-naming.MemberCase
    value: lower_case
  - key: readability-identifier-naming.PrivateMemberPrefix
    value: ''
  - key: readability-identifier-naming.ProtectedMemberPrefix
    value: ''
  - key: readability-identifier-naming.PublicMemberCase
    value: lower_case
  - key: readability-identifier-naming.MethodCase
    value: camelBack
  - key: readability-identifier-naming.PrivateMethodPrefix
    value: ''
  - key: readability-identifier-naming.ProtectedMethodPrefix
    value: ''
  - key: readability-identifier-naming.ParameterPackCase
    value: lower_case
  - key: readability-identifier-naming.StructCase
    value: CamelCase
  - key: readability-identifier-naming.TemplateTemplateParameterCase
    value: CamelCase
  - key: readability-identifier-naming.TemplateUsingCase
    value: lower_case
  - key: readability-identifier-naming.TypeTemplateParameterCase
    value: CamelCase
  - key: readability-identifier-naming.TypedefCase
    value: CamelCase
  - key: readability-identifier-naming.UnionCase
    value: CamelCase
  - key: readability-identifier-naming.UsingCase
    value: CamelCase
  - key: modernize-loop-convert.UseCxx20ReverseRanges
    value: false
  - key: performance-move-const-arg.CheckTriviallyCopyableMove
    value: false
    # Workaround clang-tidy bug: https://github.com/llvm/llvm-project/issues/46097
  - key: readability-identifier-naming.TypeTemplateParameterIgnoredRegexp
    value: expr-type
