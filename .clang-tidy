Checks: '-*,
    misc-*,
    -misc-definitions-in-header,
    -misc-new-delete-overloads,
    -misc-no-recursion,
    -misc-non-copyable-objects,
    -misc-non-private-member-variables-in-classes,

    modernize-*,
    -modernize-concat-nested-namespaces,
    -modernize-deprecated-headers,
    -modernize-deprecated-ios-base-aliases,
    -modernize-pass-by-value,
    -modernize-replace-disallow-copy-and-assign-macro,
    -modernize-return-braced-init-list,
    -modernize-unary-static-assert,
    -modernize-use-auto,
    -modernize-use-default-member-init,
    -modernize-use-emplace,
    -modernize-use-nodiscard,
    -modernize-use-noexcept,
    -modernize-use-override,
    -modernize-use-trailing-return-type,

    performance-*,
    -performance-inefficient-string-concatenation,
    -performance-no-int-to-ptr,
    -performance-type-promotion-in-math-fn,
    -performance-unnecessary-value-param,

    readability-*,
    -readability-braces-around-statements,
    -readability-container-data-pointer,
    -readability-else-after-return,
    -readability-function-cognitive-complexity,
    -readability-function-size,
    -readability-identifier-length,
    -readability-implicit-bool-conversion,
    -readability-isolate-declaration,
    -readability-magic-numbers,
    -readability-misleading-indentation,
    -readability-named-parameter,
    -readability-redundant-declaration,
    -readability-static-accessed-through-instance,
    -readability-suspicious-call-argument,
    -readability-uppercase-literal-suffix,
    -readability-use-anyofallof,

    bugprone-*,
    -bugprone-assert-side-effect,
    -bugprone-branch-clone,
    -bugprone-dynamic-static-initializers,
    -bugprone-easily-swappable-parameters,
    -bugprone-exception-escape,
    -bugprone-forwarding-reference-overload,
    -bugprone-implicit-widening-of-multiplication-result,
    -bugprone-no-escape,
    -bugprone-not-null-terminated-result,
    -bugprone-signal-handler,
    -bugprone-spuriously-wake-up-functions,
    -bugprone-suspicious-semicolon,
    -bugprone-unhandled-exception-at-new,

    cert-*,
    -cert-dcl58-cpp,
    -cert-err33-c,
    -cert-err58-cpp,
    -cert-err60-cpp,
    -cert-msc51-cpp,
    -cert-oop57-cpp,

    google-*,
    -google-build-using-namespace,
    -google-global-names-in-headers,

    hicpp-*,
    -hicpp-avoid-goto,
    -hicpp-multiway-paths-covered,
    -hicpp-no-assembler,
    -hicpp-signed-bitwise,

    boost-*,

    clang-analyzer-core.*,,

    clang-analyzer-cplusplus.*,

    clang-analyzer-deadcode.*,

    clang-analyzer-optin.cplusplus.*,

    clang-analyzer-security.insecureAPI.*,
    -clang-analyzer-security.insecureAPI.vfork,

    clang-analyzer-unix.*,
    -clang-analyzer-unix.API,
'
WarningsAsErrors: '*'

CheckOptions:
  - key: readability-identifier-naming.ClassCase
    value: CamelCase
  - key: readability-identifier-naming.EnumCase
    value: CamelCase
  - key: readability-identifier-naming.LocalVariableCase
    value: lower_case
  - key: readability-identifier-naming.StaticConstantCase
    value: aNy_CasE
  - key: readability-identifier-naming.MemberCase
    value: lower_case
  - key: readability-identifier-naming.PrivateMemberPrefix
    value: ''
  - key: readability-identifier-naming.ProtectedMemberPrefix
    value: ''
  - key: readability-identifier-naming.PublicMemberCase
    value: lower_case
  - key: readability-identifier-naming.MethodCase
    value: camelBack
  - key: readability-identifier-naming.PrivateMethodPrefix
    value: ''
  - key: readability-identifier-naming.ProtectedMethodPrefix
    value: ''
  - key: readability-identifier-naming.ParameterPackCase
    value: lower_case
  - key: readability-identifier-naming.StructCase
    value: CamelCase
  - key: readability-identifier-naming.TemplateTemplateParameterCase
    value: CamelCase
  - key: readability-identifier-naming.TemplateUsingCase
    value: lower_case
  - key: readability-identifier-naming.TypeTemplateParameterCase
    value: CamelCase
  - key: readability-identifier-naming.TypedefCase
    value: CamelCase
  - key: readability-identifier-naming.UnionCase
    value: CamelCase
  - key: readability-identifier-naming.UsingCase
    value: CamelCase
  - key: modernize-loop-convert.UseCxx20ReverseRanges
    value: false
  - key: performance-move-const-arg.CheckTriviallyCopyableMove
    value: false
    # Workaround clang-tidy bug: https://github.com/llvm/llvm-project/issues/46097
  - key: readability-identifier-naming.TypeTemplateParameterIgnoredRegexp
    value: expr-type
