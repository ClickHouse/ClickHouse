name: CreateRelease

concurrency:
  group: release

'on':
  workflow_dispatch:
    inputs:
      sha:
        description: 'The SHA hash of the commit from which to create the release'
        required: true
        type: string
      type:
        description: 'The type of release: "new" for a new release or "patch" for a patch release'
        required: true
        type: choice
        options:
          - new
          - patch

jobs:
  CreateRelease:
    outputs:
      GITHUB_TAG: ${{ steps.TagAndRelease.outputs.GITHUB_TAG }}
    runs-on: [self-hosted, style-checker-aarch64]
    steps:
      - name: DebugInfo
        uses: hmarr/debug-action@f7318c783045ac39ed9bb497e22ce835fdafbfe6
      - name: Set envs
        # https://docs.github.com/en/actions/learn-github-actions/workflow-commands-for-github-actions#multiline-strings
        run: |
          cat >> "$GITHUB_ENV" << 'EOF'
          ROBOT_CLICKHOUSE_SSH_KEY<<RCSK
          ${{secrets.ROBOT_CLICKHOUSE_SSH_KEY}}
          RCSK
          EOF
      - name: Check out repository code
        uses: ClickHouse/checkout@v1
        with:
          clear-repository: true
          token: ${{secrets.ROBOT_CLICKHOUSE_COMMIT_TOKEN}}
          fetch-depth: 0
      - name: Create Release Tag
        env:
          GH_TOKEN: ${{ secrets.ROBOT_CLICKHOUSE_COMMIT_TOKEN }}
        run: |
          cd ./tests/ci
          python3 ./create_release.py --ref ${{ inputs.sha }} --type ${{ inputs.type }} --dry-run
          GITHUB_TAG=$(cat ./tag.tmp)
          echo "GITHUB_TAG=$GITHUB_TAG" >> "$GITHUB_ENV"
          echo "GITHUB_TAG=$GITHUB_TAG" >> "$GITHUB_OUTPUT"
          echo "New release tag: $GITHUB_TAG"
      - name: CheckTagReady
        if: ${{ inputs.type == 'patch' }}
        run: |
            if ${{ inputs.type == 'patch' }}; then
                [ -z "$GITHUB_TAG" ] && echo "ERROR: No release tag found" && exit 1
            else
                [ -n "$GITHUB_TAG" ] && echo "ERROR: Release tag must not be set in env for new release" && exit 1
            fi
            echo "Alles goed - continue"
      - name: Docker version, Changelog, Security
        if: ${{ inputs.type == 'patch' }}
        env:
          GH_TOKEN: ${{ secrets.ROBOT_CLICKHOUSE_COMMIT_TOKEN }}
        run: |
          echo "Git status:"
          git status
          echo "List versions"
          ./utils/list-versions/list-versions.sh > ./utils/list-versions/version_date.tsv
          echo "Update docker version"
          ./utils/list-versions/update-docker-version.sh
          echo "Generate ChangeLog"
          GID=$(id -g "${UID}")
          export CI=1
          docker run -u "${UID}:${GID}" -e PYTHONUNBUFFERED=1 -e CI=1 --network=host \
            --volume=".:/ClickHouse" clickhouse/style-test \
            /ClickHouse/tests/ci/changelog.py -v --debug-helpers \
            --gh-user-or-token="$GH_TOKEN" --jobs=5 \
            --output="/ClickHouse/docs/changelogs/${GITHUB_TAG}.md" "${GITHUB_TAG}"
          # git add "./docs/changelogs/${GITHUB_TAG}.md"
          echo "Generate Security"
          python3 ./utils/security-generator/generate_security.py > SECURITY.md
          git diff HEAD
      - name: Create Pull Request
        if: ${{ inputs.type == 'patch' }}
        uses: peter-evans/create-pull-request@v6
        with:
          author: "robot-clickhouse <robot-clickhouse@users.noreply.github.com>"
          token: ${{ secrets.ROBOT_CLICKHOUSE_COMMIT_TOKEN }}
          committer: "robot-clickhouse <robot-clickhouse@users.noreply.github.com>"
          commit-message: Update version_date.tsv and changelogs after ${{ env.GITHUB_TAG }}
          branch: auto/${{ env.GITHUB_TAG }}
          assignees: ${{ github.event.sender.login }}  # assign the PR to the tag pusher
          delete-branch: true
          title: Update version_date.tsv and changelogs after ${{ env.GITHUB_TAG }}
          labels: do not test
          body: |
            Update version_date.tsv and changelogs after ${{ env.GITHUB_TAG }}
            ### Changelog category (leave one):
            - Not for changelog (changelog entry is not required)