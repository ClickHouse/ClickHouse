name: ReleaseWorkflow
# - Gets artifacts from S3
# - Sends it to JFROG Artifactory
# - Adds them to the release assets

on: # yamllint disable-line rule:truthy
  release:
    types:
    - published

jobs:
  ReleasePublish:
    runs-on: [self-hosted, style-checker]
    steps:
    - name: Set envs
      run: |
        cat >> "$GITHUB_ENV" << 'EOF'
        JFROG_API_KEY=${{ secrets.JFROG_KEY_API_PACKAGES }}
        TEMP_PATH=${{runner.temp}}/release_packages
        REPO_COPY=${{runner.temp}}/release_packages/ClickHouse
        EOF
    - name: Check out repository code
      uses: actions/checkout@v2
    - name: Download packages and push to Artifactory
      run: |
        rm -rf "$TEMP_PATH" && mkdir -p "$TEMP_PATH"
        cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
        cd "$REPO_COPY"
        python3 ./tests/ci/push_to_artifactory.py --release "${{ github.ref }}" \
          --commit '${{ github.sha }}' --all
    - name: Upload packages to release assets
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{runner.temp}}/push_to_artifactory/*
        overwrite: true
        tag: ${{ github.ref }}
        file_glob: true
  ############################################################################################
  ##################################### Docker images  #######################################
  ############################################################################################
  DockerServerImages:
    runs-on: [self-hosted, style-checker]
    steps:
    - name: Clear repository
      run: |
        sudo rm -fr "$GITHUB_WORKSPACE" && mkdir "$GITHUB_WORKSPACE"
    - name: Check out repository code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # otherwise we will have no version info
    - name: Check docker clickhouse/clickhouse-server building
      run: |
        cd "$GITHUB_WORKSPACE/tests/ci"
        python3 docker_server.py --release-type auto --version "${{ github.ref }}"
        python3 docker_server.py --release-type auto --version "${{ github.ref }}" --no-ubuntu \
          --image-repo clickhouse/clickhouse-keeper --image-path docker/keeper
    - name: Cleanup
      if: always()
      run: |
        docker kill "$(docker ps -q)" ||:
        docker rm -f "$(docker ps -a -q)" ||:
        sudo rm -fr "$TEMP_PATH"
