name: Build docker images
'on':
  workflow_call:
    inputs:
      data:
        description: json with ci data from todo job
        required: true
        type: string
      set_latest:
        description: set latest tag for resulting multiarch manifest
        required: false
        type: boolean
        default: false
    secrets:
      secret_envs:
        description: if given, it's passed to the environments
        required: false
      AWS_SECRET_ACCESS_KEY:
        description: the access key to the aws param store.
        required: true
      AWS_ACCESS_KEY_ID:
        description: the access key id to the aws param store.
        required: true

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}


jobs:
  DockerBuildAarch64:
    runs-on: [self-hosted, altinity-on-demand, altinity-func-tester-aarch64]
    if: |
      !failure() && !cancelled() && toJson(fromJson(inputs.data).docker_data.missing_aarch64) != '[]'
    steps:
      - name: Check out repository code
        uses: Altinity/checkout@19599efdf36c4f3f30eb55d5bb388896faea69f6
        with:
          ref: ${{ fromJson(inputs.data).git_ref }}
      - name: Build images
        run: |
          python3 "${GITHUB_WORKSPACE}/tests/ci/docker_images_check.py" \
            --suffix aarch64 \
            --image-tags '${{ toJson(fromJson(inputs.data).docker_data.images) }}' \
            --missing-images '${{ toJson(fromJson(inputs.data).docker_data.missing_aarch64) }}'
  DockerBuildAmd64:
    runs-on: [self-hosted, altinity-on-demand, altinity-func-tester]
    if: |
      !failure() && !cancelled() && toJson(fromJson(inputs.data).docker_data.missing_amd64) != '[]'
    steps:
      - name: Check out repository code
        uses: Altinity/checkout@19599efdf36c4f3f30eb55d5bb388896faea69f6
        with:
          ref: ${{ fromJson(inputs.data).git_ref }}
      - name: Build images
        run: |
          python3 "${GITHUB_WORKSPACE}/tests/ci/docker_images_check.py" \
            --suffix amd64 \
            --image-tags '${{ toJson(fromJson(inputs.data).docker_data.images) }}' \
            --missing-images '${{ toJson(fromJson(inputs.data).docker_data.missing_amd64) }}'
  DockerMultiArchManifest:
    needs: [DockerBuildAmd64, DockerBuildAarch64]
    runs-on: [self-hosted, altinity-on-demand, altinity-func-tester]
    if: |
      !failure() && !cancelled() && (toJson(fromJson(inputs.data).docker_data.missing_multi) != '[]' || inputs.set_latest)
    steps:
      - name: Check out repository code
        uses: Altinity/checkout@19599efdf36c4f3f30eb55d5bb388896faea69f6
        with:
          ref: ${{ fromJson(inputs.data).git_ref }}
      - name: Build images
        run: |
          cd "$GITHUB_WORKSPACE/tests/ci"
          FLAG_LATEST=''
          if [ "${{ inputs.set_latest }}" == "true" ]; then
            FLAG_LATEST='--set-latest'
            echo "latest tag will be set for resulting manifests"
          fi
          python3 docker_manifests_merge.py --suffix amd64 --suffix aarch64 \
            --image-tags '${{ toJson(fromJson(inputs.data).docker_data.images) }}' \
            --missing-images '${{ toJson(fromJson(inputs.data).docker_data.missing_multi) }}' \
            $FLAG_LATEST
