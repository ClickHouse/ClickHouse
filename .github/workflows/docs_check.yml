name: DocsCheck

env:
  # Force the stdout and stderr streams to be unbuffered
  PYTHONUNBUFFERED: 1

on:  # yamllint disable-line rule:truthy
  pull_request:
    types:
      - synchronize
      - reopened
      - opened
    branches:
      - master
    paths:
      - 'CHANGELOG.md'
      - 'README.md'
      - 'SECURITY.md'
      - 'docker/docs/**'
      - 'docs/**'
      - 'utils/check-style/aspell-ignore/**'
jobs:
  CheckLabels:
    runs-on: [self-hosted, style-checker]
    steps:
      - name: Check out repository code
        uses: ClickHouse/checkout@v1
        with:
          clear-repository: true
      - name: Labels check
        run: |
          cd "$GITHUB_WORKSPACE/tests/ci"
          python3 run_check.py
  DockerHubPushAarch64:
    needs: CheckLabels
    runs-on: [self-hosted, style-checker-aarch64]
    steps:
      - name: Check out repository code
        uses: ClickHouse/checkout@v1
        with:
          clear-repository: true
      - name: Images check
        run: |
          cd "$GITHUB_WORKSPACE/tests/ci"
          python3 docker_images_check.py --suffix aarch64
      - name: Upload images files to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: changed_images_aarch64
          path: ${{ runner.temp }}/docker_images_check/changed_images_aarch64.json
  DockerHubPushAmd64:
    needs: CheckLabels
    runs-on: [self-hosted, style-checker]
    steps:
      - name: Check out repository code
        uses: ClickHouse/checkout@v1
        with:
          clear-repository: true
      - name: Images check
        run: |
          cd "$GITHUB_WORKSPACE/tests/ci"
          python3 docker_images_check.py --suffix amd64
      - name: Upload images files to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: changed_images_amd64
          path: ${{ runner.temp }}/docker_images_check/changed_images_amd64.json
  DockerHubPush:
    needs: [DockerHubPushAmd64, DockerHubPushAarch64]
    runs-on: [self-hosted, style-checker]
    steps:
      - name: Check out repository code
        uses: ClickHouse/checkout@v1
        with:
          clear-repository: true
      - name: Download changed aarch64 images
        uses: actions/download-artifact@v3
        with:
          name: changed_images_aarch64
          path: ${{ runner.temp }}
      - name: Download changed amd64 images
        uses: actions/download-artifact@v3
        with:
          name: changed_images_amd64
          path: ${{ runner.temp }}
      - name: Images check
        run: |
          cd "$GITHUB_WORKSPACE/tests/ci"
          python3 docker_manifests_merge.py --suffix amd64 --suffix aarch64
      - name: Upload images files to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: changed_images
          path: ${{ runner.temp }}/changed_images.json
  StyleCheck:
    needs: DockerHubPush
    runs-on: [self-hosted, style-checker]
    if: ${{ success() || failure() }}
    steps:
      - name: Set envs
        run: |
          cat >> "$GITHUB_ENV" << 'EOF'
          TEMP_PATH=${{ runner.temp }}/style_check
          ROBOT_CLICKHOUSE_SSH_KEY<<RCSK
          ${{secrets.ROBOT_CLICKHOUSE_SSH_KEY}}
          RCSK
          EOF
      - name: Download changed images
        # even if artifact does not exist, e.g. on `do not test` label or failed Docker job
        continue-on-error: true
        uses: actions/download-artifact@v3
        with:
          name: changed_images
          path: ${{ env.TEMP_PATH }}
      - name: Check out repository code
        uses: ClickHouse/checkout@v1
        with:
          clear-repository: true
      - name: Style Check
        run: |
          cd "$GITHUB_WORKSPACE/tests/ci"
          python3 style_check.py
      - name: Cleanup
        if: always()
        run: |
          docker ps --quiet | xargs --no-run-if-empty docker kill ||:
          docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
          sudo rm -fr "$TEMP_PATH"
  DocsCheck:
    needs: DockerHubPush
    runs-on: [self-hosted, func-tester-aarch64]
    steps:
      - name: Set envs
        run: |
          cat >> "$GITHUB_ENV" << 'EOF'
          TEMP_PATH=${{runner.temp}}/docs_check
          REPO_COPY=${{runner.temp}}/docs_check/ClickHouse
          EOF
      - name: Download changed images
        uses: actions/download-artifact@v3
        with:
          name: changed_images
          path: ${{ env.TEMP_PATH }}
      - name: Check out repository code
        uses: ClickHouse/checkout@v1
        with:
          clear-repository: true
      - name: Docs Check
        run: |
          cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
          cd "$REPO_COPY/tests/ci"
          python3 docs_check.py
      - name: Cleanup
        if: always()
        run: |
          docker ps --quiet | xargs --no-run-if-empty docker kill ||:
          docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
          sudo rm -fr "$TEMP_PATH"
  FinishCheck:
    needs:
      - StyleCheck
      - DockerHubPush
      - DocsCheck
    runs-on: [self-hosted, style-checker]
    steps:
      - name: Check out repository code
        uses: ClickHouse/checkout@v1
        with:
          clear-repository: true
      - name: Finish label
        run: |
          cd "$GITHUB_WORKSPACE/tests/ci"
          python3 finish_check.py
          python3 merge_pr.py --check-approved
