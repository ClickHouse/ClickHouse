name: Regression test workflow - Release
'on':
  workflow_call:
    inputs:
      runner_type:
        description: the label of runner to use, can be a simple string or a comma-separated list
        required: true
        type: string
      commit:
        description: commit hash of the regression tests.
        required: true
        type: string
      arch:
        description: arch to run the tests on.
        required: true
        type: string
      timeout_minutes:
        description: Maximum number of minutes to let workflow run before GitHub cancels it.
        default: 210
        type: number
      build_sha:
        description: commit sha of the workflow run for artifact upload.
        required: true
        type: string
      checkout_depth:
        description: the value of the git shallow checkout
        required: false
        type: number
        default: 1
      submodules:
        description: if the submodules should be checked out
        required: false
        type: boolean
        default: false
      additional_envs:
        description: additional ENV variables to setup the job
        type: string
      workflow_config:
        description: workflow config for the run
        required: true
        type: string
    secrets:
      secret_envs:
        description: if given, it's passed to the environments
        required: false
      AWS_SECRET_ACCESS_KEY:
        description: the access key to the aws param store.
        required: true
      AWS_ACCESS_KEY_ID:
        description: the access key id to the aws param store.
        required: true
      AWS_DEFAULT_REGION:
        description: the region of the aws param store.
        required: true
      AWS_REPORT_KEY_ID:
        description: aws s3 key id used for regression test reports.
        required: true
      AWS_REPORT_SECRET_ACCESS_KEY:
        description: aws s3 secret access key used for regression test reports.
        required: true
      AWS_REPORT_REGION:
        description: aws s3 region used for regression test reports.
        required: true
      DOCKER_USERNAME:
        description: username of the docker user.
        required: true
      DOCKER_PASSWORD:
        description: password to the docker user.
        required: true
      REGRESSION_AWS_S3_BUCKET:
        description: aws s3 bucket used for regression tests.
        required: true
      REGRESSION_AWS_S3_KEY_ID:
        description: aws s3 key id used for regression tests.
        required: true
      REGRESSION_AWS_S3_SECRET_ACCESS_KEY:
        description: aws s3 secret access key used for regression tests.
        required: true
      REGRESSION_AWS_S3_REGION:
        description: aws s3 region used for regression tests.
        required: true
      REGRESSION_GCS_KEY_ID:
        description: gcs key id used for regression tests.
        required: true
      REGRESSION_GCS_KEY_SECRET:
        description: gcs key secret used for regression tests.
        required: true
      REGRESSION_GCS_URI:
        description: gcs uri used for regression tests.
        required: true

env:
  # Force the stdout and stderr streams to be unbuffered
  PYTHONUNBUFFERED: 1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  CHECKS_DATABASE_HOST: ${{ secrets.CHECKS_DATABASE_HOST }}
  CHECKS_DATABASE_USER: ${{ secrets.CLICKHOUSE_TEST_STAT_LOGIN }}
  CHECKS_DATABASE_PASSWORD:  ${{ secrets.CLICKHOUSE_TEST_STAT_PASSWORD }}
  args: --test-to-end
    --no-colors
    --local
    --collect-service-logs
    --output new-fails
    --parallel 1
    --log raw.log
    --with-analyzer
  artifacts: builds
  artifact_paths: |
    ./report.html
    ./*.log.txt
    ./*.log
    ./*.html
    ./*/_instances/*.log
    ./*/_instances/*/logs/*.log
    ./*/*/_instances/*/logs/*.log
    ./*/*/_instances/*.log
  build_sha: ${{ inputs.build_sha }}
  pr_number: ${{ github.event.number }}
  event_name: ${{ github.event_name }}

jobs:
  runner_labels_setup:
    name: Compute proper runner labels for the rest of the jobs
    runs-on: ubuntu-latest
    outputs:
      runner_labels: ${{ steps.setVariables.outputs.runner_labels }}
    steps:
      - id: setVariables
        name: Prepare runner_labels variables for the later steps
        run: |

          # Prepend self-hosted
          input="self-hosted, ${input}"

          # Remove all whitespace
          input="$(echo ${input} | tr -d [:space:])"
          # Make something like a JSON array from comma-separated list
          input="[ '${input//\,/\'\, \'}' ]"

          echo "runner_labels=$input" >> ${GITHUB_OUTPUT}
        env:
          input: ${{ inputs.runner_type }}

  Common:
    strategy:
      fail-fast: false
      matrix:
        SUITE: [aes_encryption, atomic_insert, base_58, data_types, datetime64_extended_range, disk_level_encryption, dns, engines, example, extended_precision_data_types, functions, kafka, kerberos, key_value, lightweight_delete, memory, part_moves_between_shards, rbac, selects, session_timezone, ssl_server, swarms, tiered_storage, version, window_functions]
    needs: [runner_labels_setup]
    runs-on: ${{ fromJson(needs.runner_labels_setup.outputs.runner_labels) }}
    timeout-minutes: ${{ inputs.timeout_minutes }}
    steps:
      - name: Checkout regression repo
        uses: actions/checkout@v4
        with:
          repository: Altinity/clickhouse-regression
          ref: ${{ inputs.commit }}
      - name: Set envs
        run: |
          cat >> "$GITHUB_ENV" << 'EOF'
          REPORTS_PATH=${{ runner.temp }}/reports_dir
          SUITE=${{ matrix.SUITE }}
          EOF
      - name: Setup
        run: .github/setup.sh
      - name: Get deb url
        env:
          S3_BASE_URL: https://altinity-build-artifacts.s3.amazonaws.com/
          PR_NUMBER: ${{ github.event.pull_request.number || 0 }}
        run: |
          mkdir -p $REPORTS_PATH
          cat > $REPORTS_PATH/workflow_config.json << 'EOF'
          ${{ inputs.workflow_config }}
          EOF

          python3 .github/get-deb-url.py --github-env $GITHUB_ENV --workflow-config $REPORTS_PATH/workflow_config.json --s3-base-url $S3_BASE_URL --pr-number $PR_NUMBER --branch-name ${{ github.ref_name }} --commit-hash ${{ inputs.build_sha }}

      - name: Run ${{ env.SUITE }} suite
        id: run_suite
        run: EXITCODE=0;
              python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_path }}
              --attr project="$GITHUB_REPOSITORY" project.id="$GITHUB_REPOSITORY_ID" package="${{ env.clickhouse_path }}" version="${{ env.version }}" user.name="$GITHUB_ACTOR" repository="https://github.com/Altinity/clickhouse-regression" commit.hash="$(git rev-parse HEAD)" job.name="$GITHUB_JOB (${{ matrix.SUITE }})" job.retry=$GITHUB_RUN_ATTEMPT job.url="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" arch="$(uname -i)"
              ${{ env.args }} || EXITCODE=$?;
              .github/add_link_to_logs.sh;
              exit $EXITCODE
      - name: Set Commit Status
        if: always()
        run: python3 .github/set_builds_status.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JOB_OUTCOME: ${{ steps.run_suite.outcome }}
          SUITE_NAME: "Regression ${{ inputs.arch }} ${{ matrix.SUITE }}"
      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh 1
      - name: Upload logs to regression results database
        if: always()
        timeout-minutes: 20
        run: .github/upload_results_to_database.sh 1
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ env.SUITE }}-${{ inputs.arch }}-artifacts
          path: ${{ env.artifact_paths}}

  AggregateFunctions:
    strategy:
      fail-fast: false
      matrix:
        PART: [1, 2, 3]
    needs: [runner_labels_setup]
    runs-on: ${{ fromJson(needs.runner_labels_setup.outputs.runner_labels) }}
    timeout-minutes: ${{ inputs.timeout_minutes }}
    steps:
      - name: Checkout regression repo
        uses: actions/checkout@v4
        with:
          repository: Altinity/clickhouse-regression
          ref: ${{ inputs.commit }}
      - name: Set envs
        run: |
          cat >> "$GITHUB_ENV" << 'EOF'
          REPORTS_PATH=${{ runner.temp }}/reports_dir
          SUITE=aggregate_functions
          PART=${{ matrix.PART }}
          EOF
      - name: Setup
        run: .github/setup.sh
      - name: Get deb url
        env:
          S3_BASE_URL: https://altinity-build-artifacts.s3.amazonaws.com/
          PR_NUMBER: ${{ github.event.pull_request.number || 0 }}
        run: |
          mkdir -p $REPORTS_PATH
          cat > $REPORTS_PATH/workflow_config.json << 'EOF'
          ${{ inputs.workflow_config }}
          EOF

          python3 .github/get-deb-url.py --github-env $GITHUB_ENV --workflow-config $REPORTS_PATH/workflow_config.json --s3-base-url $S3_BASE_URL --pr-number $PR_NUMBER --branch-name ${{ github.ref_name }} --commit-hash ${{ inputs.build_sha }}

      - name: Run ${{ env.SUITE }} suite
        id: run_suite
        run: EXITCODE=0;
              python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_path }}
              --attr project="$GITHUB_REPOSITORY" project.id="$GITHUB_REPOSITORY_ID" package="${{ env.clickhouse_path }}" version="${{ env.version }}" user.name="$GITHUB_ACTOR" repository="https://github.com/Altinity/clickhouse-regression" commit.hash="$(git rev-parse HEAD)" job.name="$GITHUB_JOB (${{ matrix.PART }})" job.retry=$GITHUB_RUN_ATTEMPT job.url="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" arch="$(uname -i)"
              --only "part ${{ matrix.PART }}/*"
              ${{ env.args }} || EXITCODE=$?;
              .github/add_link_to_logs.sh;
              exit $EXITCODE
      - name: Set Commit Status
        if: always()
        run: python3 .github/set_builds_status.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JOB_OUTCOME: ${{ steps.run_suite.outcome }}
          SUITE_NAME: "Regression ${{ inputs.arch }} ${{ env.SUITE }}-${{ matrix.PART }}"
      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh 1
      - name: Upload logs to regression results database
        if: always()
        timeout-minutes: 20
        run: .github/upload_results_to_database.sh 1
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ env.SUITE }}-${{ matrix.PART }}-${{ inputs.arch }}-artifacts
          path: ${{ env.artifact_paths}}
  Alter:
   strategy:
     fail-fast: false
     matrix:
      ONLY: [replace, move]
      include:
        - ONLY: attach
          PART: 1
        - ONLY: attach
          PART: 2
   needs: [runner_labels_setup]
   runs-on: ${{ fromJson(needs.runner_labels_setup.outputs.runner_labels) }}
   timeout-minutes: ${{ inputs.timeout_minutes }}
   steps:
      - name: Checkout regression repo
        uses: actions/checkout@v4
        with:
          repository: Altinity/clickhouse-regression
          ref: ${{ inputs.commit }}
      - name: Set envs
        run: |
          cat >> "$GITHUB_ENV" << 'EOF'
          REPORTS_PATH=${{ runner.temp }}/reports_dir
          SUITE=alter
          STORAGE=/${{ matrix.ONLY }}_partition
          EOF
      - name: Setup
        run: .github/setup.sh
      - name: Get deb url
        env:
          S3_BASE_URL: https://altinity-build-artifacts.s3.amazonaws.com/
          PR_NUMBER: ${{ github.event.pull_request.number || 0 }}
        run: |
          mkdir -p $REPORTS_PATH
          cat > $REPORTS_PATH/workflow_config.json << 'EOF'
          ${{ inputs.workflow_config }}
          EOF

          python3 .github/get-deb-url.py --github-env $GITHUB_ENV --workflow-config $REPORTS_PATH/workflow_config.json --s3-base-url $S3_BASE_URL --pr-number $PR_NUMBER --branch-name ${{ github.ref_name }} --commit-hash ${{ inputs.build_sha }}

      - name: Run ${{ env.SUITE }} suite
        id: run_suite
        run:  EXITCODE=0;
              python3
              -u alter/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_path }}
              --only "/alter/${{ matrix.ONLY }} partition/${{ matrix.PART && format('part {0}/', matrix.PART) || '' }}*"
              --attr project="$GITHUB_REPOSITORY" project.id="$GITHUB_REPOSITORY_ID" package="${{ env.clickhouse_path }}" version="${{ env.version }}" user.name="$GITHUB_ACTOR" repository="https://github.com/Altinity/clickhouse-regression" commit.hash="$(git rev-parse HEAD)" job.name="$GITHUB_JOB (${{ matrix.ONLY }}${{ matrix.PART }})" job.retry=$GITHUB_RUN_ATTEMPT job.url="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" arch="$(uname -i)"
              ${{ env.args }} || EXITCODE=$?;
              .github/add_link_to_logs.sh;
              exit $EXITCODE
      - name: Set Commit Status
        if: always()
        run: python3 .github/set_builds_status.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JOB_OUTCOME: ${{ steps.run_suite.outcome }}
          SUITE_NAME: "Regression ${{ inputs.arch }} Alter ${{ matrix.ONLY }} partition ${{ matrix.PART }}"
      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh 1
      - name: Upload logs to regression results database
        if: always()
        timeout-minutes: 20
        run: .github/upload_results_to_database.sh 1
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: alter-${{ matrix.ONLY }}${{ matrix.PART && format('-{0}', matrix.PART) || '' }}-${{ inputs.arch }}-artifacts
          path: ${{ env.artifact_paths}}

  Benchmark:
    strategy:
      fail-fast: false
      matrix:
        STORAGE: [minio, aws_s3, gcs]
    needs: [runner_labels_setup]
    runs-on: ${{ fromJson(needs.runner_labels_setup.outputs.runner_labels) }}
    timeout-minutes: ${{ inputs.timeout_minutes }}
    steps:
      - name: Checkout regression repo
        uses: actions/checkout@v4
        with:
          repository: Altinity/clickhouse-regression
          ref: ${{ inputs.commit }}
      - name: Set envs
        run: |
          cat >> "$GITHUB_ENV" << 'EOF'
          REPORTS_PATH=${{ runner.temp }}/reports_dir
          SUITE=ontime_benchmark
          STORAGE=/${{ matrix.STORAGE }}
          EOF
      - name: Setup
        run: .github/setup.sh
      - name: Get deb url
        env:
          S3_BASE_URL: https://altinity-build-artifacts.s3.amazonaws.com/
          PR_NUMBER: ${{ github.event.pull_request.number || 0 }}
        run: |
          mkdir -p $REPORTS_PATH
          cat > $REPORTS_PATH/workflow_config.json << 'EOF'
          ${{ inputs.workflow_config }}
          EOF

          python3 .github/get-deb-url.py --github-env $GITHUB_ENV --workflow-config $REPORTS_PATH/workflow_config.json --s3-base-url $S3_BASE_URL --pr-number $PR_NUMBER --branch-name ${{ github.ref_name }} --commit-hash ${{ inputs.build_sha }}

      - name: Run ${{ env.SUITE }} suite
        id: run_suite
        run:  EXITCODE=0;
              python3
              -u ${{ env.SUITE }}/benchmark.py
              --clickhouse-binary-path ${{ env.clickhouse_path }}
              --storage ${{ matrix.STORAGE }}
              --gcs-uri ${{ secrets.REGRESSION_GCS_URI }}
              --gcs-key-id ${{ secrets.REGRESSION_GCS_KEY_ID }}
              --gcs-key-secret ${{ secrets.REGRESSION_GCS_KEY_SECRET }}
              --aws-s3-bucket ${{ secrets.REGRESSION_AWS_S3_BUCKET }}
              --aws-s3-region ${{ secrets.REGRESSION_AWS_S3_REGION }}
              --aws-s3-key-id ${{ secrets.REGRESSION_AWS_S3_KEY_ID }}
              --aws-s3-access-key ${{ secrets.REGRESSION_AWS_S3_SECRET_ACCESS_KEY }}
              --attr project="$GITHUB_REPOSITORY" project.id="$GITHUB_REPOSITORY_ID" package="${{ env.clickhouse_path }}" version="${{ env.version }}" user.name="$GITHUB_ACTOR" repository="https://github.com/Altinity/clickhouse-regression" commit.hash="$(git rev-parse HEAD)" job.name="$GITHUB_JOB (${{ matrix.STORAGE }})" job.retry=$GITHUB_RUN_ATTEMPT job.url="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" arch="$(uname -i)"
              ${{ env.args }} || EXITCODE=$?;
              .github/add_link_to_logs.sh;
              exit $EXITCODE
      - name: Set Commit Status
        if: always()
        run: python3 .github/set_builds_status.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JOB_OUTCOME: ${{ steps.run_suite.outcome }}
          SUITE_NAME: "Regression ${{ inputs.arch }} Benchmark ${{ matrix.STORAGE }}"
      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh 1
      - name: Upload logs to regression results database
        if: always()
        timeout-minutes: 20
        run: .github/upload_results_to_database.sh 1
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: benchmark-${{ matrix.STORAGE }}-${{ inputs.arch }}-artifacts
          path: ${{ env.artifact_paths }}

  ClickHouseKeeper:
    strategy:
      fail-fast: false
      matrix:
        PART: [1, 2]
        SSL: [ssl, no_ssl]
    needs: [runner_labels_setup]
    runs-on: ${{ fromJson(needs.runner_labels_setup.outputs.runner_labels) }}
    timeout-minutes: ${{ inputs.timeout_minutes }}
    steps:
      - name: Checkout regression repo
        uses: actions/checkout@v4
        with:
          repository: Altinity/clickhouse-regression
          ref: ${{ inputs.commit }}
      - name: Set envs
        run: |
          cat >> "$GITHUB_ENV" << 'EOF'
          REPORTS_PATH=${{runner.temp}}/reports_dir
          SUITE=clickhouse_keeper
          STORAGE=/${{ matrix.PART }}/${{ matrix.SSL }}
          SSL=${{ matrix.SSL == 'ssl' && '--ssl' || '' }}
          EOF
      - name: Setup
        run: .github/setup.sh
      - name: Get deb url
        env:
          S3_BASE_URL: https://altinity-build-artifacts.s3.amazonaws.com/
          PR_NUMBER: ${{ github.event.pull_request.number || 0 }}
        run: |
          mkdir -p $REPORTS_PATH
          cat > $REPORTS_PATH/workflow_config.json << 'EOF'
          ${{ inputs.workflow_config }}
          EOF

          python3 .github/get-deb-url.py --github-env $GITHUB_ENV --workflow-config $REPORTS_PATH/workflow_config.json --s3-base-url $S3_BASE_URL --pr-number $PR_NUMBER --branch-name ${{ github.ref_name }} --commit-hash ${{ inputs.build_sha }}

      - name: Run ${{ env.SUITE }} suite
        id: run_suite
        run:  EXITCODE=0;
              python3
              -u ${{ env.SUITE }}/regression.py $SSL
              --clickhouse-binary-path ${{ env.clickhouse_path }}
              --attr project="$GITHUB_REPOSITORY" project.id="$GITHUB_REPOSITORY_ID" package="${{ env.clickhouse_path }}" version="${{ env.version }}" user.name="$GITHUB_ACTOR" repository="https://github.com/Altinity/clickhouse-regression" commit.hash="$(git rev-parse HEAD)" job.name="$GITHUB_JOB (${{ matrix.PART }}, ${{ matrix.SSL }})" job.retry=$GITHUB_RUN_ATTEMPT job.url="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" arch="$(uname -i)"
              --only "part ${{ matrix.PART }}/*"
              ${{ env.args }} || EXITCODE=$?;
              .github/add_link_to_logs.sh;
              exit $EXITCODE
      - name: Set Commit Status
        if: always()
        run: python3 .github/set_builds_status.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JOB_OUTCOME: ${{ steps.run_suite.outcome }}
          SUITE_NAME: "Regression ${{ inputs.arch }} Clickhouse Keeper ${{ matrix.SSL }} ${{ matrix.PART }}"
      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh 1
      - name: Upload logs to regression results database
        if: always()
        timeout-minutes: 20
        run: .github/upload_results_to_database.sh 1
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ env.SUITE }}-${{ matrix.PART }}-${{ inputs.arch }}-${{ matrix.SSL }}-artifacts
          path: ${{ env.artifact_paths }}

  Iceberg:
    strategy:
      fail-fast: false
      matrix:
        PART: [1, 2]
    needs: [runner_labels_setup]
    runs-on: ${{ fromJson(needs.runner_labels_setup.outputs.runner_labels) }}
    timeout-minutes: ${{ inputs.timeout_minutes }}
    steps:
      - name: Checkout regression repo
        uses: actions/checkout@v4
        with:
          repository: Altinity/clickhouse-regression
          ref: ${{ inputs.commit }}
      - name: Set envs
        run: |
          if [ ${{ matrix.PART }} -eq 1 ]; then
            echo ICEBERG_ONLY='"/iceberg/iceberg engine/rest catalog/*" "/iceberg/s3 table function/*" "/iceberg/icebergS3 table function/*" "/iceberg/iceberg cache"' >> "$GITHUB_ENV"
          else
            echo ICEBERG_ONLY='"/iceberg/iceberg engine/glue catalog/*" "/iceberg/iceberg table engine/*"' >> "$GITHUB_ENV"
          fi
          cat >> "$GITHUB_ENV" << 'EOF'
          REPORTS_PATH=${{ runner.temp }}/reports_dir
          SUITE=iceberg
          PART=${{ matrix.PART }}
          LOCALSTACK_AUTH_TOKEN=${{ secrets.LOCALSTACK_AUTH_TOKEN }}
          EOF
      - name: Setup
        run: .github/setup.sh
      - name: Get deb url
        env:
          S3_BASE_URL: https://altinity-build-artifacts.s3.amazonaws.com/
          PR_NUMBER: ${{ github.event.pull_request.number || 0 }}
        run: |
          mkdir -p $REPORTS_PATH
          cat > $REPORTS_PATH/workflow_config.json << 'EOF'
          ${{ inputs.workflow_config }}
          EOF

          python3 .github/get-deb-url.py --github-env $GITHUB_ENV --workflow-config $REPORTS_PATH/workflow_config.json --s3-base-url $S3_BASE_URL --pr-number $PR_NUMBER --branch-name ${{ github.ref_name }} --commit-hash ${{ inputs.build_sha }}

      - name: Run ${{ env.SUITE }} suite
        id: run_suite
        run: EXITCODE=0;
              python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_path }}
              --attr project="$GITHUB_REPOSITORY" project.id="$GITHUB_REPOSITORY_ID" package="${{ env.clickhouse_path }}" version="${{ env.version }}" user.name="$GITHUB_ACTOR" repository="https://github.com/Altinity/clickhouse-regression" commit.hash="$(git rev-parse HEAD)" job.name="$GITHUB_JOB (${{ matrix.PART }})" job.retry=$GITHUB_RUN_ATTEMPT job.url="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" arch="$(uname -i)"
              --only ${{ env.ICEBERG_ONLY }}
              ${{ env.args }} || EXITCODE=$?;
              .github/add_link_to_logs.sh;
              exit $EXITCODE
      - name: Set Commit Status
        if: always()
        run: python3 .github/set_builds_status.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JOB_OUTCOME: ${{ steps.run_suite.outcome }}
          SUITE_NAME: "Regression ${{ inputs.arch }} ${{ env.SUITE }}-${{ matrix.PART }}"
      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh 1
      - name: Upload logs to regression results database
        if: always()
        timeout-minutes: 20
        run: .github/upload_results_to_database.sh 1
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ env.SUITE }}-${{ matrix.PART }}-${{ inputs.arch }}-artifacts
          path: ${{ env.artifact_paths}}
  LDAP:
    strategy:
      fail-fast: false
      matrix:
        SUITE: [authentication, external_user_directory, role_mapping]
    needs: [runner_labels_setup]
    runs-on: ${{ fromJson(needs.runner_labels_setup.outputs.runner_labels) }}
    timeout-minutes: ${{ inputs.timeout_minutes }}
    steps:
      - name: Checkout regression repo
        uses: actions/checkout@v4
        with:
          repository: Altinity/clickhouse-regression
          ref: ${{ inputs.commit }}
      - name: Set envs
        run: |
          cat >> "$GITHUB_ENV" << 'EOF'
          REPORTS_PATH=${{ runner.temp }}/reports_dir
          SUITE=ldap/${{ matrix.SUITE }}
          EOF
      - name: Setup
        run: .github/setup.sh
      - name: Get deb url
        env:
          S3_BASE_URL: https://altinity-build-artifacts.s3.amazonaws.com/
          PR_NUMBER: ${{ github.event.pull_request.number || 0 }}
        run: |
          mkdir -p $REPORTS_PATH
          cat > $REPORTS_PATH/workflow_config.json << 'EOF'
          ${{ inputs.workflow_config }}
          EOF

          python3 .github/get-deb-url.py --github-env $GITHUB_ENV --workflow-config $REPORTS_PATH/workflow_config.json --s3-base-url $S3_BASE_URL --pr-number $PR_NUMBER --branch-name ${{ github.ref_name }} --commit-hash ${{ inputs.build_sha }}

      - name: Run ${{ env.SUITE }} suite
        id: run_suite
        run:  EXITCODE=0;
              python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_path }}
              --attr project="$GITHUB_REPOSITORY" project.id="$GITHUB_REPOSITORY_ID" package="${{ env.clickhouse_path }}" version="${{ env.version }}" user.name="$GITHUB_ACTOR" repository="https://github.com/Altinity/clickhouse-regression" commit.hash="$(git rev-parse HEAD)" job.name="$GITHUB_JOB (${{ matrix.SUITE }})" job.retry=$GITHUB_RUN_ATTEMPT job.url="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" arch="$(uname -i)"
              ${{ env.args }} || EXITCODE=$?;
              .github/add_link_to_logs.sh;
              exit $EXITCODE
      - name: Set Commit Status
        if: always()
        run: python3 .github/set_builds_status.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JOB_OUTCOME: ${{ steps.run_suite.outcome }}
          SUITE_NAME: "Regression ${{ inputs.arch }} LDAP ${{ matrix.SUITE }}"
      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh 1
      - name: Upload logs to regression results database
        if: always()
        timeout-minutes: 20
        run: .github/upload_results_to_database.sh 1
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ldap-${{ matrix.SUITE }}-${{ inputs.arch }}-artifacts
          path: ${{ env.artifact_paths }}

  Parquet:
    needs: [runner_labels_setup]
    runs-on: ${{ fromJson(needs.runner_labels_setup.outputs.runner_labels) }}
    timeout-minutes: ${{ inputs.timeout_minutes }}
    steps:
      - name: Checkout regression repo
        uses: actions/checkout@v4
        with:
          repository: Altinity/clickhouse-regression
          ref: ${{ inputs.commit }}
      - name: Set envs
        run: |
          cat >> "$GITHUB_ENV" << 'EOF'
          REPORTS_PATH=${{ runner.temp }}/reports_dir
          SUITE=parquet
          EOF
      - name: Setup
        run: .github/setup.sh
      - name: Get deb url
        env:
          S3_BASE_URL: https://altinity-build-artifacts.s3.amazonaws.com/
          PR_NUMBER: ${{ github.event.pull_request.number || 0 }}
        run: |
          mkdir -p $REPORTS_PATH
          cat > $REPORTS_PATH/workflow_config.json << 'EOF'
          ${{ inputs.workflow_config }}
          EOF

          python3 .github/get-deb-url.py --github-env $GITHUB_ENV --workflow-config $REPORTS_PATH/workflow_config.json --s3-base-url $S3_BASE_URL --pr-number $PR_NUMBER --branch-name ${{ github.ref_name }} --commit-hash ${{ inputs.build_sha }}

      - name: Run ${{ env.SUITE }} suite
        id: run_suite
        run:  EXITCODE=0;
              python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_path }}
              --attr project="$GITHUB_REPOSITORY" project.id="$GITHUB_REPOSITORY_ID" package="${{ env.clickhouse_path }}" version="${{ env.version }}" user.name="$GITHUB_ACTOR" repository="https://github.com/Altinity/clickhouse-regression" commit.hash="$(git rev-parse HEAD)" job.name=$GITHUB_JOB job.retry=$GITHUB_RUN_ATTEMPT job.url="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" arch="$(uname -i)"
              ${{ env.args }} || EXITCODE=$?;
              .github/add_link_to_logs.sh;
              exit $EXITCODE
      - name: Set Commit Status
        if: always()
        run: python3 .github/set_builds_status.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JOB_OUTCOME: ${{ steps.run_suite.outcome }}
          SUITE_NAME: "Regression ${{ inputs.arch }} Parquet"
      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh 1
      - name: Upload logs to regression results database
        if: always()
        timeout-minutes: 20
        run: .github/upload_results_to_database.sh 1
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ env.SUITE }}-${{ inputs.arch }}-artifacts
          path: ${{ env.artifact_paths }}

  ParquetS3:
    strategy:
      fail-fast: false
      matrix:
        STORAGE: [minio, aws_s3]
    needs: [runner_labels_setup]
    runs-on: ${{ fromJson(needs.runner_labels_setup.outputs.runner_labels) }}
    timeout-minutes: ${{ inputs.timeout_minutes }}
    steps:
      - name: Checkout regression repo
        uses: actions/checkout@v4
        with:
          repository: Altinity/clickhouse-regression
          ref: ${{ inputs.commit }}
      - name: Set envs
        run: |
          cat >> "$GITHUB_ENV" << 'EOF'
          REPORTS_PATH=${{ runner.temp }}/reports_dir
          SUITE=parquet
          STORAGE=${{ matrix.STORAGE}}
          EOF
      - name: Setup
        run: .github/setup.sh
      - name: Get deb url
        env:
          S3_BASE_URL: https://altinity-build-artifacts.s3.amazonaws.com/
          PR_NUMBER: ${{ github.event.pull_request.number || 0 }}
        run: |
          mkdir -p $REPORTS_PATH
          cat > $REPORTS_PATH/workflow_config.json << 'EOF'
          ${{ inputs.workflow_config }}
          EOF

          python3 .github/get-deb-url.py --github-env $GITHUB_ENV --workflow-config $REPORTS_PATH/workflow_config.json --s3-base-url $S3_BASE_URL --pr-number $PR_NUMBER --branch-name ${{ github.ref_name }} --commit-hash ${{ inputs.build_sha }}

      - name: Run ${{ env.SUITE }} suite
        id: run_suite
        run:  EXITCODE=0;
              python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_path }}
              --storage ${{ matrix.STORAGE }}
              --aws-s3-bucket ${{ secrets.REGRESSION_AWS_S3_BUCKET }}
              --aws-s3-region ${{ secrets.REGRESSION_AWS_S3_REGION }}
              --aws-s3-key-id ${{ secrets.REGRESSION_AWS_S3_KEY_ID }}
              --aws-s3-access-key ${{ secrets.REGRESSION_AWS_S3_SECRET_ACCESS_KEY }}
              --attr project="$GITHUB_REPOSITORY" project.id="$GITHUB_REPOSITORY_ID" package="${{ env.clickhouse_path }}" version="${{ env.version }}" user.name="$GITHUB_ACTOR" repository="https://github.com/Altinity/clickhouse-regression" commit.hash="$(git rev-parse HEAD)" job.name="$GITHUB_JOB (${{ matrix.STORAGE }})" job.retry=$GITHUB_RUN_ATTEMPT job.url="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" arch="$(uname -i)"
              ${{ env.args }} || EXITCODE=$?;
              .github/add_link_to_logs.sh;
              exit $EXITCODE
      - name: Set Commit Status
        if: always()
        run: python3 .github/set_builds_status.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JOB_OUTCOME: ${{ steps.run_suite.outcome }}
          SUITE_NAME: "Regression ${{ inputs.arch }} Parquet ${{ matrix.STORAGE }}"
      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh 1
      - name: Upload logs to regression results database
        if: always()
        timeout-minutes: 20
        run: .github/upload_results_to_database.sh 1
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ env.SUITE }}-${{ env.STORAGE }}-${{ inputs.arch }}-artifacts
          path: ${{ env.artifact_paths }}

  S3:
    strategy:
      fail-fast: false
      matrix:
        STORAGE: [aws_s3, gcs, azure, minio]
        PART: [1, 2]
        include:
          - STORAGE: minio
            PART: 3
    needs: [runner_labels_setup]
    runs-on: ${{ fromJson(needs.runner_labels_setup.outputs.runner_labels) }}
    timeout-minutes: ${{ inputs.timeout_minutes }}
    steps:
      - name: Checkout regression repo
        uses: actions/checkout@v4
        with:
          repository: Altinity/clickhouse-regression
          ref: ${{ inputs.commit }}
      - name: Set envs
        run: |
          cat >> "$GITHUB_ENV" << 'EOF'
          REPORTS_PATH=${{ runner.temp }}/reports_dir
          SUITE=s3
          STORAGE=/${{ matrix.STORAGE }}
          EOF
      - name: Setup
        run: .github/setup.sh
      - name: Get deb url
        env:
          S3_BASE_URL: https://altinity-build-artifacts.s3.amazonaws.com/
          PR_NUMBER: ${{ github.event.pull_request.number || 0 }}
        run: |
          mkdir -p $REPORTS_PATH
          cat > $REPORTS_PATH/workflow_config.json << 'EOF'
          ${{ inputs.workflow_config }}
          EOF

          python3 .github/get-deb-url.py --github-env $GITHUB_ENV --workflow-config $REPORTS_PATH/workflow_config.json --s3-base-url $S3_BASE_URL --pr-number $PR_NUMBER --branch-name ${{ github.ref_name }} --commit-hash ${{ inputs.build_sha }}

      - name: Run ${{ env.SUITE }} suite
        id: run_suite
        run:  EXITCODE=0;
              python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_path }}
              --storage ${{ matrix.STORAGE }}
              --gcs-uri ${{ secrets.REGRESSION_GCS_URI }}
              --gcs-key-id ${{ secrets.REGRESSION_GCS_KEY_ID }}
              --gcs-key-secret ${{ secrets.REGRESSION_GCS_KEY_SECRET }}
              --aws-s3-bucket ${{ secrets.REGRESSION_AWS_S3_BUCKET }}
              --aws-s3-region ${{ secrets.REGRESSION_AWS_S3_REGION }}
              --aws-s3-key-id ${{ secrets.REGRESSION_AWS_S3_KEY_ID }}
              --aws-s3-access-key ${{ secrets.REGRESSION_AWS_S3_SECRET_ACCESS_KEY }}
              --azure-account-name ${{ secrets.AZURE_ACCOUNT_NAME }}
              --azure-storage-key ${{ secrets.AZURE_STORAGE_KEY }}
              --azure-container ${{ secrets.AZURE_CONTAINER_NAME }}
              --attr project="$GITHUB_REPOSITORY" project.id="$GITHUB_REPOSITORY_ID" package="${{ env.clickhouse_path }}" version="${{ env.version }}" user.name="$GITHUB_ACTOR" repository="https://github.com/Altinity/clickhouse-regression" commit.hash="$(git rev-parse HEAD)" job.name="$GITHUB_JOB (${{ matrix.STORAGE }}-${{ matrix.PART }})" job.retry=$GITHUB_RUN_ATTEMPT job.url="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" arch="$(uname -i)"
              --only ":/try*" ":/part ${{ matrix.PART }}/*"
              ${{ env.args }} || EXITCODE=$?;
              .github/add_link_to_logs.sh;
              exit $EXITCODE
      - name: Set Commit Status
        if: always()
        run: python3 .github/set_builds_status.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JOB_OUTCOME: ${{ steps.run_suite.outcome }}
          SUITE_NAME: "Regression ${{ inputs.arch }} S3 ${{ matrix.STORAGE }}-${{ matrix.PART }}"
      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh 1
      - name: Upload logs to regression results database
        if: always()
        timeout-minutes: 20
        run: .github/upload_results_to_database.sh 1
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ env.SUITE }}-${{ matrix.STORAGE }}-${{ matrix.PART }}-${{ inputs.arch }}-artifacts
          path: ${{ env.artifact_paths}}

  TieredStorage:
    strategy:
      fail-fast: false
      matrix:
        STORAGE: [minio, s3amazon, s3gcs]
    needs: [runner_labels_setup]
    runs-on: ${{ fromJson(needs.runner_labels_setup.outputs.runner_labels) }}
    timeout-minutes: ${{ inputs.timeout_minutes }}
    steps:
      - name: Checkout regression repo
        uses: actions/checkout@v4
        with:
          repository: Altinity/clickhouse-regression
          ref: ${{ inputs.commit }}
      - name: Set envs
        run: |
          cat >> "$GITHUB_ENV" << 'EOF'
          REPORTS_PATH=${{ runner.temp }}/reports_dir
          SUITE=tiered_storage
          STORAGE=/${{ matrix.STORAGE }}
          EOF
      - name: Setup
        run: .github/setup.sh
      - name: Get deb url
        env:
          S3_BASE_URL: https://altinity-build-artifacts.s3.amazonaws.com/
          PR_NUMBER: ${{ github.event.pull_request.number || 0 }}
        run: |
          mkdir -p $REPORTS_PATH
          cat > $REPORTS_PATH/workflow_config.json << 'EOF'
          ${{ inputs.workflow_config }}
          EOF

          python3 .github/get-deb-url.py --github-env $GITHUB_ENV --workflow-config $REPORTS_PATH/workflow_config.json --s3-base-url $S3_BASE_URL --pr-number $PR_NUMBER --branch-name ${{ github.ref_name }} --commit-hash ${{ inputs.build_sha }}

      - name: Run ${{ env.SUITE }} suite
        id: run_suite
        run:  EXITCODE=0;
              python3
              -u ${{ env.SUITE }}/regression.py
              --clickhouse-binary-path ${{ env.clickhouse_path }}
              --aws-s3-access-key ${{ secrets.REGRESSION_AWS_S3_SECRET_ACCESS_KEY }}
              --aws-s3-key-id ${{ secrets.REGRESSION_AWS_S3_KEY_ID }}
              --aws-s3-uri https://s3.${{ secrets.REGRESSION_AWS_S3_REGION}}.amazonaws.com/${{ secrets.REGRESSION_AWS_S3_BUCKET }}/data/
              --gcs-key-id ${{ secrets.REGRESSION_GCS_KEY_ID }}
              --gcs-key-secret ${{ secrets.REGRESSION_GCS_KEY_SECRET }}
              --gcs-uri ${{ secrets.REGRESSION_GCS_URI }}
              --with-${{ matrix.STORAGE }}
              --attr project="$GITHUB_REPOSITORY" project.id="$GITHUB_REPOSITORY_ID" package="${{ env.clickhouse_path }}" version="${{ env.version }}" user.name="$GITHUB_ACTOR" repository="https://github.com/Altinity/clickhouse-regression" commit.hash="$(git rev-parse HEAD)" job.name="$GITHUB_JOB (${{ matrix.STORAGE }})" job.retry=$GITHUB_RUN_ATTEMPT job.url="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" arch="$(uname -i)"
              ${{ env.args }} || EXITCODE=$?;
              .github/add_link_to_logs.sh;
              exit $EXITCODE
      - name: Set Commit Status
        if: always()
        run: python3 .github/set_builds_status.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JOB_OUTCOME: ${{ steps.run_suite.outcome }}
          SUITE_NAME: "Regression ${{ inputs.arch }} Tiered Storage ${{ matrix.STORAGE }}"
      - name: Create and upload logs
        if: always()
        run: .github/create_and_upload_logs.sh 1
      - name: Upload logs to regression results database
        if: always()
        timeout-minutes: 20
        run: .github/upload_results_to_database.sh 1
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ env.SUITE }}-${{ matrix.STORAGE }}-${{ inputs.arch }}-artifacts
          path: ${{ env.artifact_paths}}
