commit 23e738b7195c0895f67a6d82b0f111b7c68b8b7a
Author: Jakub Kuklis <jakub.kuklis@contentsquare.com>
Date:   Mon Sep 27 08:46:45 2021 +0000

    Initial cleanup to solve warnings

diff --git a/sdk/core/azure-core/inc/azure/core/exception.hpp b/sdk/core/azure-core/inc/azure/core/exception.hpp
index 2d910587..5ddbca46 100644
--- a/sdk/core/azure-core/inc/azure/core/exception.hpp
+++ b/sdk/core/azure-core/inc/azure/core/exception.hpp
@@ -144,7 +144,7 @@ namespace Azure { namespace Core {
      * @brief Destructs `%RequestFailedException`.
      *
      */
-    ~RequestFailedException() = default;
+    ~RequestFailedException() override = default;
 
   private:
     std::string GetRawResponseField(
diff --git a/sdk/core/azure-core/inc/azure/core/io/body_stream.hpp b/sdk/core/azure-core/inc/azure/core/io/body_stream.hpp
index 845877a2..51dc8602 100644
--- a/sdk/core/azure-core/inc/azure/core/io/body_stream.hpp
+++ b/sdk/core/azure-core/inc/azure/core/io/body_stream.hpp
@@ -69,7 +69,7 @@ namespace Azure { namespace Core { namespace IO {
           "The specified BodyStream doesn't support Rewind which is required to guarantee fault "
           "tolerance when retrying any operation. Consider creating a MemoryBodyStream or "
           "FileBodyStream, which are rewindable.");
-    };
+    }
 
     /**
      * @brief Read portion of data into a buffer.
@@ -90,7 +90,7 @@ namespace Azure { namespace Core { namespace IO {
 
       context.ThrowIfCancelled();
       return OnRead(buffer, count, context);
-    };
+    }
 
     /**
      * @brief Read #Azure::Core::IO::BodyStream into a buffer until the buffer is filled, or until
@@ -235,7 +235,7 @@ namespace Azure { namespace Core { namespace IO {
       // Rewind seeks back to 0
       void Rewind() override { this->m_offset = 0; }
 
-      int64_t Length() const override { return this->m_length; };
+      int64_t Length() const override { return this->m_length; }
     };
 
   } // namespace _internal
@@ -275,7 +275,7 @@ namespace Azure { namespace Core { namespace IO {
      * @brief Closes the file and cleans up any resources.
      *
      */
-    ~FileBodyStream();
+    ~FileBodyStream() override;
 
     // Rewind seeks back to 0
     void Rewind() override;
diff --git a/sdk/core/azure-core/inc/azure/core/operation.hpp b/sdk/core/azure-core/inc/azure/core/operation.hpp
index 6547dea8..21336fca 100644
--- a/sdk/core/azure-core/inc/azure/core/operation.hpp
+++ b/sdk/core/azure-core/inc/azure/core/operation.hpp
@@ -133,7 +133,7 @@ namespace Azure { namespace Core {
         throw std::runtime_error("The raw response was not yet set for the Operation.");
       }
       return *m_rawResponse;
-    };
+    }
 
     /**
      * @brief Gets the current #Azure::Core::OperationStatus of the long-running operation.
diff --git a/sdk/core/azure-core/inc/azure/core/url.hpp b/sdk/core/azure-core/inc/azure/core/url.hpp
index ae1cf43c..4058e626 100644
--- a/sdk/core/azure-core/inc/azure/core/url.hpp
+++ b/sdk/core/azure-core/inc/azure/core/url.hpp
@@ -229,7 +229,7 @@ namespace Azure { namespace Core {
      * @brief Gets the URL scheme.
      *
      */
-    const std::string& GetScheme() const { return m_scheme; };
+    const std::string& GetScheme() const { return m_scheme; }
 
     /**
      * @brief Gets the path and query parameters.
diff --git a/sdk/storage/azure-storage-common/inc/azure/storage/common/internal/storage_per_retry_policy.hpp b/sdk/storage/azure-storage-common/inc/azure/storage/common/internal/storage_per_retry_policy.hpp
index 9ab7248e..9b26b42e 100644
--- a/sdk/storage/azure-storage-common/inc/azure/storage/common/internal/storage_per_retry_policy.hpp
+++ b/sdk/storage/azure-storage-common/inc/azure/storage/common/internal/storage_per_retry_policy.hpp
@@ -11,7 +11,7 @@ namespace Azure { namespace Storage { namespace _internal {
 
   class StoragePerRetryPolicy final : public Core::Http::Policies::HttpPolicy {
   public:
-    ~StoragePerRetryPolicy() override {}
+    ~StoragePerRetryPolicy() override = default;
 
     std::unique_ptr<HttpPolicy> Clone() const override
     {
