diff --git a/CMakeLists.txt b/CMakeLists.txt
index c0bf648fe..e66322faa 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -63,6 +63,14 @@ set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_SOURCE_DIR}/cmake/")
 
 include(ConfigureCompiler)
 
+add_subdirectory(contrib/libcxx)
+include_directories(SYSTEM ${CMAKE_CURRENT_BINARY_DIR}/contrib/libcxx/llvm-prefix/include/c++/v1)
+add_compile_options(-nostdinc++)
+link_libraries($<$<LINK_LANGUAGE:CXX>:cxx>)
+add_link_options(
+  $<$<LINK_LANGUAGE:CXX>:-nodefaultlibs>
+)
+
 ################################################################################
 # Compiler configuration
 ################################################################################
diff --git a/contrib/libcxx/CMakeLists.txt b/contrib/libcxx/CMakeLists.txt
new file mode 100644
index 000000000..fd2af3718
--- /dev/null
+++ b/contrib/libcxx/CMakeLists.txt
@@ -0,0 +1,73 @@
+if(NOT CLANG)
+  message(FATAL_ERROR "Custom libcxx only supported with Clang")
+endif()
+
+include(ExternalProject)
+set(LLVM_PREFIX "${CMAKE_CURRENT_BINARY_DIR}/llvm-prefix")
+set(LLVM_CMAKE_ARGS
+    -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
+    "-DLLVM_ENABLE_RUNTIMES=libcxx\\$<SEMICOLON>libcxxabi\\$<SEMICOLON>libunwind\\$<SEMICOLON>compiler-rt"
+    -DCMAKE_POSITION_INDEPENDENT_CODE=ON
+    -DCMAKE_INSTALL_PREFIX=<INSTALL_DIR>
+    -DLIBCXX_ENABLE_SHARED=OFF
+    -DLIBCXXABI_ENABLE_SHARED=OFF
+    -DLIBUNWIND_ENABLE_SHARED=OFF
+    -DLIBUNWIND_USE_COMPILER_RT=ON
+    -DLIBCXXABI_USE_COMPILER_RT=ON
+    -DLIBCXXABI_USE_LLVM_UNWINDER=ON
+    -DLIBCXX_USE_COMPILER_RT=ON
+    -DLIBCXX_HAS_GCC_S_LIB=OFF
+    -DLIBCXXABI_HAS_GCC_S_LIB=OFF
+    -DLIBCXX_HAS_ATOMIC_LIB=OFF
+    -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
+    -DLIBCXX_EXTRA_SITE_DEFINES=_LIBCPP_ENABLE_CXX17_REMOVED_UNARY_BINARY_FUNCTION
+)
+list(APPEND LLVM_CMAKE_ARGS -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER} -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER})
+if(USE_MSAN)
+    list(APPEND LLVM_CMAKE_ARGS -DLLVM_USE_SANITIZER=MemoryWithOrigins)
+endif()
+ExternalProject_Add(
+    llvm_runtimes
+    PREFIX ${LLVM_PREFIX}
+    URL https://github.com/llvm/llvm-project/releases/download/llvmorg-16.0.6/llvm-project-16.0.6.src.tar.xz
+    URL_HASH SHA256=ce5e71081d17ce9e86d7cbcfa28c4b04b9300f8fb7e78422b1feb6bc52c3028e
+    SOURCE_SUBDIR runtimes
+    PATCH_COMMAND patch -p1 < ${CMAKE_CURRENT_SOURCE_DIR}/libunwind-disable-sanitizer.patch
+    CMAKE_ARGS ${LLVM_CMAKE_ARGS}
+    INSTALL_BYPRODUCTS
+        <INSTALL_DIR>/lib/libc++.a
+        <INSTALL_DIR>/lib/libc++abi.a
+        <INSTALL_DIR>/lib/libunwind.a
+        <INSTALL_DIR>/lib/linux/libclang_rt.builtins-x86_64.a
+    LOG_CONFIGURE ON
+    LOG_BUILD ON
+)
+
+file(MAKE_DIRECTORY "${LLVM_PREFIX}/include")
+file(MAKE_DIRECTORY "${LLVM_PREFIX}/include/c++/v1")
+
+add_library(clang_rt STATIC IMPORTED)
+set_target_properties(clang_rt PROPERTIES
+             IMPORTED_LOCATION "${LLVM_PREFIX}/lib/linux/libclang_rt.builtins-x86_64.a")
+
+add_library(cxxabi STATIC IMPORTED)
+set_target_properties(cxxabi PROPERTIES
+             IMPORTED_LOCATION "${LLVM_PREFIX}/lib/libc++abi.a"
+             INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "${LLVM_PREFIX}/include;${LLVM_PREFIX}/include/c++/v1")
+add_dependencies(cxxabi llvm_runtimes)
+
+add_library(cxx STATIC IMPORTED GLOBAL)
+set_target_properties(cxx PROPERTIES
+             IMPORTED_LOCATION "${LLVM_PREFIX}/lib/libc++.a"
+             INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "${LLVM_PREFIX}/include;${LLVM_PREFIX}/include/c++/v1")
+add_dependencies(cxx llvm_runtimes)
+
+add_library(unwind STATIC IMPORTED)
+set_target_properties(unwind PROPERTIES
+             IMPORTED_LOCATION "${LLVM_PREFIX}/lib/libunwind.a"
+             INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "${LLVM_PREFIX}/include")
+add_dependencies(unwind llvm_runtimes)
+
+target_link_libraries(cxxabi INTERFACE unwind c pthread)
+target_link_libraries(unwind INTERFACE dl c pthread clang_rt)
+target_link_libraries(cxx INTERFACE cxxabi m rt clang_rt)
diff --git a/contrib/libcxx/libunwind-disable-sanitizer.patch b/contrib/libcxx/libunwind-disable-sanitizer.patch
new file mode 100644
index 000000000..ac2c98ab5
--- /dev/null
+++ b/contrib/libcxx/libunwind-disable-sanitizer.patch
@@ -0,0 +1,13 @@
+Index: llvm_runtimes/libunwind/src/CMakeLists.txt
+===================================================================
+--- llvm_runtimes.orig/libunwind/src/CMakeLists.txt
++++ llvm_runtimes/libunwind/src/CMakeLists.txt
+@@ -121,6 +121,8 @@ if (APPLE)
+   endif ()
+ endif ()
+ 
++add_compile_flags("-fno-sanitize=all")
++
+ string(REPLACE ";" " " LIBUNWIND_COMPILE_FLAGS "${LIBUNWIND_COMPILE_FLAGS}")
+ string(REPLACE ";" " " LIBUNWIND_CXX_FLAGS "${LIBUNWIND_CXX_FLAGS}")
+ string(REPLACE ";" " " LIBUNWIND_C_FLAGS "${LIBUNWIND_C_FLAGS}")
